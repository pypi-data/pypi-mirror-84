[tox]
skipdist=True
skip_missing_interpreters=
    True
envlist =
#   py26
    py27
#   py33
#   py34
    py35
    py36
    py37
    py38
    py39
    py310
#   pypy
#   pypy3

[testenv]
setenv =
#    recreate = True
deps =
#   dill
whitelist_externals =
    bash
commands =
    {envpython} setup.py build_ext
    {envpython} setup.py build
    {envpython} setup.py install
#   py26: bash -c "failed=0; for test in py2.6/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py27: bash -c "failed=0; for test in py2.7/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
#   py33: bash -c "failed=0; for test in py3.3/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
#   py34: bash -c "failed=0; for test in py3.4/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py35: bash -c "failed=0; for test in py3.5/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py36: bash -c "failed=0; for test in py3.6/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py37: bash -c "failed=0; for test in py3.7/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py38: bash -c "failed=0; for test in py3.8/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py39: bash -c "failed=0; for test in py3.9/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py310: bash -c "failed=0; for test in py3.10/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
#   pypy: bash -c "failed=0; for test in pypy/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
#   pypy3: bash -c "failed=0; for test in pypy3/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
