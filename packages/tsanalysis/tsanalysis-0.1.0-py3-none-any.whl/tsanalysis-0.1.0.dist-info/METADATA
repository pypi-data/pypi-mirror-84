Metadata-Version: 2.1
Name: tsanalysis
Version: 0.1.0
Summary: Machine Learning library for time series analysis
Home-page: https://github.com/etiennedemontalivet/ai-analysis-python
Author: Etienne de Montalivet
Author-email: etienne.demontalivet@gmail.com
License: UNKNOWN
Keywords: ml datascience timeseries
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: lightgbm (>=2.3.0)
Requires-Dist: numpy (>=1.17.3)
Requires-Dist: pandas (>=0.25.2)
Requires-Dist: pyentrp (>=0.5.0)
Requires-Dist: PyWavelets (>=1.0.6)
Requires-Dist: pyyaml (>=5.1.2)
Requires-Dist: seaborn (>=0.9.0)
Requires-Dist: matplotlib (>=3.1.2)
Requires-Dist: scikit-optimize
Requires-Dist: umap-learn (==0.3.10)
Requires-Dist: shap (==0.32.1)
Requires-Dist: h2o (==3.26.0.9)
Requires-Dist: keras (==2.2.4)
Requires-Dist: tensorflow (==1.15.4)
Requires-Dist: plotly (==4.3.0)
Requires-Dist: imbalanced-learn (==0.5.0)
Requires-Dist: imblearn (==0.0)
Requires-Dist: autopep8 (==1.5)
Requires-Dist: optuna (==1.1.0)
Requires-Dist: PyAstronomy (==0.14.0)
Requires-Dist: jupytext (==1.5.0)
Requires-Dist: jupyterlab
Provides-Extra: dev
Requires-Dist: flake8 (>=3.7) ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: sphinx (>=2.2) ; extra == 'dev'
Requires-Dist: invoke (>=1.3) ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-coverage ; extra == 'dev'

# Time Series Analysis

A framework for time-series analysis and features extraction / visualization.

## Installation

### Create virtual env

We recommend to create virtual env to use the framework. Please visit [this page](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/) to do so.

### Installing the package:

Once you are inside your environment, you can install the command using pip:

```
pip install -e .[dev]
```


## Ensuring code quality

In order to ensure the best code quality, two tools are available:

#### Use `black` to format code

You can use `black` to format the code. Simply run:

```
black framework
```

####  Using `flake8` to lint code

You can use `flake8` to lint the code. Simply run:

```
flake8
```

## Documentation

This is **Work In Progress**


A documentation can be generated automatically from docstrings found in the code.
You can try it:

Linux:
```
cd docs
make html
```

This will build an HTML documentation inside `docs\build` directory.
You can visualize it on `http://localhost:8000` running the following command:

```
cd docs\build
python -m http.server 8000
```


