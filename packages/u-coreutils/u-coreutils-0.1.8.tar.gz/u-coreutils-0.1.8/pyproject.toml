[tool.poetry]
authors = ["duyixian <duyixian1234@qq.com>"]
description = "GNU coreutils implementation with Python 3.8"
license = "MIT"
name = "u-coreutils"
readme = "README.md"
repository = "https://github.com/duyixian1234/u-coreutils"
version = "0.1.8"

[tool.poetry.dependencies]
click = "^7.1.2"
python = "^3.8"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
coverage = {extras = ["toml"], version = "^5.3"}
mypy = "^0.790"
pylint = "^2.6.0"
pytest = "*"
pytest-cov = "^2.10.1"
pytest-xdist = "^2.1.0"
rope = "^0.18.0"

[tool.poetry.scripts]
u-cat = 'u_coreutils.cat:run'
u-echo = 'u_coreutils.echo:run'
u-head = 'u_coreutils.head:run'
u-mkdir = 'u_coreutils.mkdir:run'
u-false = 'u_coreutils.false:run'

[tool.pylint.master]
job = 0
suggestion-mode = "yes"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.basic]
argument-naming-style = "any"
attr-naming-style = "any"
function-naming-style = "any"
variable-naming-style = "any"

[tool.pylint.message_control]
disable = ["missing-docstring"]

[tool.pylint.design]
min-public-methods = 1

[tool.pytest.ini_options]
addopts = "-ra -svv --cov=u_coreutils"
minversion = "6.0"
testpaths = [
  "tests",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "def run()",
]
fail_under = 90.0
omit = ['*/__main__.py']
show_missing = true
skip_covered = true
skip_empty = true
sort = "miss"

[tool.coverage.path]
source = "u_coreutils"

[tool.black]
line-length = 120

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
