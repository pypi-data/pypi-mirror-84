.. _FreqMeasurement:

================================================================================
FreqMeasurement
================================================================================
Frequency measurements.

Common Parameters: u, name

Common Variables: f

Available models:
BusFreq_,
BusROCOF_

.. _BusFreq:

--------------------------------------------------------------------------------
BusFreq
--------------------------------------------------------------------------------

Group FreqMeasurement_


    Bus frequency measurement.

    Bus frequency output variable is `f`.
    
Parameters

+-------+-------------+---------------------------------+---------+--------+-----------+------------+
| Name  |   Symbol    |           Description           | Default |  Unit  |   Type    | Properties |
+=======+=============+=================================+=========+========+===========+============+
|  idx  |             | unique device idx               |         |        | DataParam |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  u    | :math:`u`   | connection status               | 1       | *bool* | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  name |             | device name                     |         |        | DataParam |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  bus  |             | bus idx                         |         |        | IdxParam  | mandatory  |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  Tf   | :math:`T_f` | input digital filter time const | 0.020   | *sec*  | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  Tw   | :math:`T_w` | washout time const              | 0.020   | *sec*  | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  fn   | :math:`f_n` | nominal frequency               | 60      | *Hz*   | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+

Variables

+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
| Name  |     Symbol      |       Initial Value       |          Description           |    Unit     | Properties |
+=======+=================+===========================+================================+=============+============+
|  L_y  | :math:`y_{L}`   | :math:`\theta - \theta_0` | State in lag transfer function |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  WO_x | :math:`x'_{WO}` | :math:`y_{L}`             | State in washout filter        |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  WO_y | :math:`y_{WO}`  | :math:`0`                 | Output of washout filter       |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  f    | :math:`f`       | :math:`1`                 | frequency output               | *p.u. (Hz)* | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  a    | :math:`\theta`  |                           |                                |             |            |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  v    | :math:`V`       |                           |                                |             |            |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+

Differential Equations

+-------+-----------------+-------+-----------------------------------+-------------+
| Name  |     Symbol      | Type  | RHS of Equation "T x' = f(x, y)"  |   T (LHS)   |
+=======+=================+=======+===================================+=============+
|  L_y  | :math:`y_{L}`   | State | :math:`\theta - \theta_0 - y_{L}` | :math:`T_f` |
+-------+-----------------+-------+-----------------------------------+-------------+
|  WO_x | :math:`x'_{WO}` | State | :math:`- x'_{WO} + y_{L}`         | :math:`T_w` |
+-------+-----------------+-------+-----------------------------------+-------------+

Algebraic Equations

+-------+----------------+----------+------------------------------------------------------------------+
| Name  |     Symbol     |   Type   |                  RHS of Equation "0 = g(x, y)"                   |
+=======+================+==========+==================================================================+
|  WO_y | :math:`y_{WO}` | Algeb    | :math:`1/\omega_n \left(- x'_{WO} + y_{L}\right) - T_{w} y_{WO}` |
+-------+----------------+----------+------------------------------------------------------------------+
|  f    | :math:`f`      | Algeb    | :math:`- f + y_{WO} + 1`                                         |
+-------+----------------+----------+------------------------------------------------------------------+
|  a    | :math:`\theta` | ExtAlgeb | :math:`0`                                                        |
+-------+----------------+----------+------------------------------------------------------------------+
|  v    | :math:`V`      | ExtAlgeb | :math:`0`                                                        |
+-------+----------------+----------+------------------------------------------------------------------+

Services

+------+--------------------+-------------------------------+--------------+
| Name |       Symbol       |           Equation            |     Type     |
+======+====================+===============================+==============+
|  iwn | :math:`1/\omega_n` | :math:`\frac{u}{2 \pi f_{n}}` | ConstService |
+------+--------------------+-------------------------------+--------------+

Blocks

+------+------------+---------+----------------+
| Name |   Symbol   |  Type   |      Info      |
+======+============+=========+================+
|  L   | :math:`L`  | Lag     | digital filter |
+------+------------+---------+----------------+
|  WO  | :math:`WO` | Washout | angle washout  |
+------+------------+---------+----------------+


.. _BusROCOF:

--------------------------------------------------------------------------------
BusROCOF
--------------------------------------------------------------------------------

Group FreqMeasurement_


    Bus frequency and ROCOF measurement.

    The ROCOF output variable is ``Wf_y``.
    
Parameters

+-------+-------------+---------------------------------+---------+--------+-----------+------------+
| Name  |   Symbol    |           Description           | Default |  Unit  |   Type    | Properties |
+=======+=============+=================================+=========+========+===========+============+
|  idx  |             | unique device idx               |         |        | DataParam |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  u    | :math:`u`   | connection status               | 1       | *bool* | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  name |             | device name                     |         |        | DataParam |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  bus  |             | bus idx                         |         |        | IdxParam  | mandatory  |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  Tf   | :math:`T_f` | input digital filter time const | 0.020   | *sec*  | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  Tw   | :math:`T_w` | washout time const              | 0.020   | *sec*  | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  fn   | :math:`f_n` | nominal frequency               | 60      | *Hz*   | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+
|  Tr   | :math:`T_r` | frequency washout time constant | 0.100   |        | NumParam  |            |
+-------+-------------+---------------------------------+---------+--------+-----------+------------+

Variables

+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
| Name  |     Symbol      |       Initial Value       |          Description           |    Unit     | Properties |
+=======+=================+===========================+================================+=============+============+
|  L_y  | :math:`y_{L}`   | :math:`\theta - \theta_0` | State in lag transfer function |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  WO_x | :math:`x'_{WO}` | :math:`y_{L}`             | State in washout filter        |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  Wf_x | :math:`x'_{Wf}` | :math:`f`                 | State in washout filter        |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  WO_y | :math:`y_{WO}`  | :math:`0`                 | Output of washout filter       |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  f    | :math:`f`       | :math:`1`                 | frequency output               | *p.u. (Hz)* | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  Wf_y | :math:`y_{Wf}`  | :math:`0`                 | Output of washout filter       |             | v_str      |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  a    | :math:`\theta`  |                           |                                |             |            |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+
|  v    | :math:`V`       |                           |                                |             |            |
+-------+-----------------+---------------------------+--------------------------------+-------------+------------+

Differential Equations

+-------+-----------------+-------+-----------------------------------+-------------+
| Name  |     Symbol      | Type  | RHS of Equation "T x' = f(x, y)"  |   T (LHS)   |
+=======+=================+=======+===================================+=============+
|  L_y  | :math:`y_{L}`   | State | :math:`\theta - \theta_0 - y_{L}` | :math:`T_f` |
+-------+-----------------+-------+-----------------------------------+-------------+
|  WO_x | :math:`x'_{WO}` | State | :math:`- x'_{WO} + y_{L}`         | :math:`T_w` |
+-------+-----------------+-------+-----------------------------------+-------------+
|  Wf_x | :math:`x'_{Wf}` | State | :math:`f - x'_{Wf}`               | :math:`T_r` |
+-------+-----------------+-------+-----------------------------------+-------------+

Algebraic Equations

+-------+----------------+----------+------------------------------------------------------------------+
| Name  |     Symbol     |   Type   |                  RHS of Equation "0 = g(x, y)"                   |
+=======+================+==========+==================================================================+
|  WO_y | :math:`y_{WO}` | Algeb    | :math:`1/\omega_n \left(- x'_{WO} + y_{L}\right) - T_{w} y_{WO}` |
+-------+----------------+----------+------------------------------------------------------------------+
|  f    | :math:`f`      | Algeb    | :math:`- f + y_{WO} + 1`                                         |
+-------+----------------+----------+------------------------------------------------------------------+
|  Wf_y | :math:`y_{Wf}` | Algeb    | :math:`- T_{r} y_{Wf} + f - x'_{Wf}`                             |
+-------+----------------+----------+------------------------------------------------------------------+
|  a    | :math:`\theta` | ExtAlgeb | :math:`0`                                                        |
+-------+----------------+----------+------------------------------------------------------------------+
|  v    | :math:`V`      | ExtAlgeb | :math:`0`                                                        |
+-------+----------------+----------+------------------------------------------------------------------+

Services

+------+--------------------+-------------------------------+--------------+
| Name |       Symbol       |           Equation            |     Type     |
+======+====================+===============================+==============+
|  iwn | :math:`1/\omega_n` | :math:`\frac{u}{2 \pi f_{n}}` | ConstService |
+------+--------------------+-------------------------------+--------------+

Blocks

+------+------------+---------+----------------------------------+
| Name |   Symbol   |  Type   |               Info               |
+======+============+=========+==================================+
|  L   | :math:`L`  | Lag     | digital filter                   |
+------+------------+---------+----------------------------------+
|  WO  | :math:`WO` | Washout | angle washout                    |
+------+------------+---------+----------------------------------+
|  Wf  | :math:`Wf` | Washout | frequency washout yielding ROCOF |
+------+------------+---------+----------------------------------+


