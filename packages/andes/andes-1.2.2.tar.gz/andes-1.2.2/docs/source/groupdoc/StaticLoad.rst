.. _StaticLoad:

================================================================================
StaticLoad
================================================================================

    Static load group.
    

Common Parameters: u, name

Available models:
PQ_

.. _PQ:

--------------------------------------------------------------------------------
PQ
--------------------------------------------------------------------------------

Group StaticLoad_


    PQ load model.

    Implements an automatic pq2z conversion during power flow when the voltage
    is outside [vmin, vmax]. The conversion can be turned off by setting `pq2z`
    to 0 in the Config file.

    Before time-domain simulation, PQ load will be converted to impedance,
    current source, and power source based on the weights in the Config file.

    Weights (p2p, p2i, p2z) corresponds to the weights for constant power,
    constant current and constant impedance. p2p, p2i and p2z must be in
    decimal numbers and sum up exactly to 1. The same rule applies to
    (q2q, q2i, q2z).
    
Parameters

+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  Name  |     Symbol      |                Description                | Default |  Unit  |   Type    | Properties |
+========+=================+===========================================+=========+========+===========+============+
|  idx   |                 | unique device idx                         |         |        | DataParam |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  u     | :math:`u`       | connection status                         | 1       | *bool* | NumParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  name  |                 | device name                               |         |        | DataParam |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  bus   |                 | linked bus idx                            |         |        | IdxParam  | mandatory  |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  Vn    | :math:`V_n`     | AC voltage rating                         | 110     | *kV*   | NumParam  | non_zero   |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  p0    | :math:`p_0`     | active power load in system base          | 0       | *p.u.* | NumParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  q0    | :math:`q_0`     | reactive power load in system base        | 0       | *p.u.* | NumParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  vmax  | :math:`v_{max}` | max voltage before switching to impedance | 1.200   |        | NumParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  vmin  | :math:`v_{min}` | min voltage before switching to impedance | 0.800   |        | NumParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+
|  owner |                 | owner idx                                 |         |        | IdxParam  |            |
+--------+-----------------+-------------------------------------------+---------+--------+-----------+------------+

Variables

+------+----------------+---------------+-------------+------+------------+
| Name |     Symbol     | Initial Value | Description | Unit | Properties |
+======+================+===============+=============+======+============+
|  a   | :math:`\theta` |               |             |      |            |
+------+----------------+---------------+-------------+------+------------+
|  v   | :math:`V`      |               |             |      |            |
+------+----------------+---------------+-------------+------+------------+

Algebraic Equations

+------+----------------+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Name |     Symbol     |   Type   |                                                                                                          RHS of Equation "0 = g(x, y)"                                                                                                           |
+======+================+==========+==================================================================================================================================================================================================================================================+
|  a   | :math:`\theta` | ExtAlgeb | :math:`u \left(I_{peq} V \gamma_{p2i} + P_{pf} \gamma_{p2p} + R_{eq} V^{2} \gamma_{p2z}\right) \left(t_{dae} > 0\right) + u \left(R_{lb} V^{2} z_{l}^{vcmp} + R_{ub} V^{2} z_{u}^{vcmp} + p_{0} z_{i}^{vcmp}\right) \left(t_{dae} \leq 0\right)` |
+------+----------------+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  v   | :math:`V`      | ExtAlgeb | :math:`u \left(I_{qeq} V \gamma_{q2i} + Q_{pf} \gamma_{q2q} + V^{2} X_{eq} \gamma_{q2z}\right) \left(t_{dae} > 0\right) + u \left(V^{2} X_{lb} z_{l}^{vcmp} + V^{2} X_{ub} z_{u}^{vcmp} + q_{0} z_{i}^{vcmp}\right) \left(t_{dae} \leq 0\right)` |
+------+----------------+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Services

+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
| Name  |     Symbol      |                                          Equation                                          |     Type     |
+=======+=================+============================================================================================+==============+
|  Rub  | :math:`R_{ub}`  | :math:`\frac{p_{0}}{v_{max}^{2}}`                                                          | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Xub  | :math:`X_{ub}`  | :math:`\frac{q_{0}}{v_{max}^{2}}`                                                          | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Rlb  | :math:`R_{lb}`  | :math:`\frac{p_{0}}{v_{min}^{2}}`                                                          | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Xlb  | :math:`X_{lb}`  | :math:`\frac{q_{0}}{v_{min}^{2}}`                                                          | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Ppf  | :math:`P_{pf}`  | :math:`R_{lb} V_{0}^{2} z_{l}^{vcmp} + R_{ub} V_{0}^{2} z_{u}^{vcmp} + p_{0} z_{i}^{vcmp}` | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Qpf  | :math:`Q_{pf}`  | :math:`V_{0}^{2} X_{lb} z_{l}^{vcmp} + V_{0}^{2} X_{ub} z_{u}^{vcmp} + q_{0} z_{i}^{vcmp}` | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Req  | :math:`R_{eq}`  | :math:`\frac{P_{pf}}{V_{0}^{2}}`                                                           | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Xeq  | :math:`X_{eq}`  | :math:`\frac{Q_{pf}}{V_{0}^{2}}`                                                           | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Ipeq | :math:`I_{peq}` | :math:`\frac{P_{pf}}{V_{0}}`                                                               | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+
|  Iqeq | :math:`I_{qeq}` | :math:`\frac{Q_{pf}}{V_{0}}`                                                               | ConstService |
+-------+-----------------+--------------------------------------------------------------------------------------------+--------------+

Discrete

+-------+--------------+---------+------+
| Name  |    Symbol    |  Type   | Info |
+=======+==============+=========+======+
|  vcmp | :math:`vcmp` | Limiter |      |
+-------+--------------+---------+------+


Config Fields in [PQ]

+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
| Option |        Symbol        | Value |                              Info                              | Accepted values |
+========+======================+=======+================================================================+=================+
|  pq2z  | :math:`z_{pq2z}`     | 1     | pq2z conversion if out of voltage limits                       | (0, 1)          |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  p2p   | :math:`\gamma_{p2p}` | 0     | P constant power percentage for TDS. Must have (p2p+p2i+p2z)=1 | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  p2i   | :math:`\gamma_{p2i}` | 0     | P constant current percentage                                  | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  p2z   | :math:`\gamma_{p2z}` | 1     | P constant impedance percentage                                | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  q2q   | :math:`\gamma_{q2q}` | 0     | Q constant power percentage for TDS. Must have (q2q+q2i+q2z)=1 | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  q2i   | :math:`\gamma_{q2i}` | 0     | Q constant current percentage                                  | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+
|  q2z   | :math:`\gamma_{q2z}` | 1     | Q constant impedance percentage                                | float           |
+--------+----------------------+-------+----------------------------------------------------------------+-----------------+


