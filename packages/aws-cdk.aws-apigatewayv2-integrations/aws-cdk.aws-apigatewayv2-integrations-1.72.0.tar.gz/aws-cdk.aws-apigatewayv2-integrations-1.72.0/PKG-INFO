Metadata-Version: 2.1
Name: aws-cdk.aws-apigatewayv2-integrations
Version: 1.72.0
Summary: Integrations for AWS APIGateway V2
Home-page: https://github.com/aws/aws-cdk
Author: Amazon Web Services
License: Apache-2.0
Project-URL: Source, https://github.com/aws/aws-cdk.git
Description: ## AWS APIGatewayv2 Integrations
        
        <!--BEGIN STABILITY BANNER-->---
        
        
        ![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)
        
        > The APIs of higher level constructs in this module are experimental and under active development. They are subject to non-backward compatible changes or removal in any future version. These are not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be announced in the release notes. This means that while you may use them, you may need to update your source code when upgrading to a newer version of this package.
        
        ---
        <!--END STABILITY BANNER-->
        
        ## Table of Contents
        
        * [Introduction](#introduction)
        * [Private Integration](#private-integration)
        
        ## Introduction
        
        Integrations connect a route to backend resources. HTTP APIs support Lambda proxy, AWS service, and HTTP proxy integrations. HTTP proxy integrations are also known as private integrations.
        
        Currently the following integrations are supported by this construct library.
        
        ## Private Integration
        
        Private integrations enable integrating an HTTP API route with private resources in a VPC, such as Application Load Balancers or
        Amazon ECS container-based applications.  Using private integrations, resources in a VPC can be exposed for access by
        clients outside of the VPC.
        
        The following integrations are supported for private resources in a VPC.
        
        ### Application Load Balancer
        
        The following code is a basic application load balancer private integration of HTTP API:
        
        ```python
        # Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826
        vpc = ec2.Vpc(stack, "VPC")
        lb = elbv2.ALB(stack, "lb", vpc=vpc)
        listener = lb.add_listener("listener", port=80)
        listener.add_targets("target",
            port=80
        )
        
        http_endpoint = HttpApi(stack, "HttpProxyPrivateApi",
            default_integration=HttpAlbIntegrationProps(
                listener=listener
            )
        )
        ```
        
        ### Network Load Balancer
        
        The following code is a basic network load balancer private integration of HTTP API:
        
        ```python
        # Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826
        vpc = ec2.Vpc(stack, "VPC")
        lb = elbv2.NLB(stack, "lb", vpc=vpc)
        listener = lb.add_listener("listener", port=80)
        listener.add_targets("target",
            port=80
        )
        
        http_endpoint = HttpApi(stack, "HttpProxyPrivateApi",
            default_integration=HttpNlbIntegrationProps(
                listener=listener
            )
        )
        ```
        
        ### Cloud Map Service Discovery
        
        The following code is a basic discovery service private integration of HTTP API:
        
        ```python
        # Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826
        vpc = ec2.Vpc(stack, "VPC")
        vpc_link = VpcLink(stack, "VpcLink", vpc=vpc)
        namespace = servicediscovery.PrivateDnsNamespace(stack, "Namespace",
            name="boobar.com",
            vpc=vpc
        )
        service = namespace.create_service("Service")
        
        http_endpoint = HttpApi(stack, "HttpProxyPrivateApi",
            default_integration=HttpServiceDiscoveryIntegration(
                vpc_link=vpc_link,
                service=service
            )
        )
        ```
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: JavaScript
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Typing :: Typed
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved
Classifier: Framework :: AWS CDK
Classifier: Framework :: AWS CDK :: 1
Requires-Python: >=3.6
Description-Content-Type: text/markdown
