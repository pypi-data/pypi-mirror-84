{
    "metadata_version": "2.0",
    "name": "qypi",
    "version": "0.4.1",
    "summary": "Query PyPI from the command line",
    "home_page": "https://github.com/jwodder/qypi",
    "author": "John Thorvald Wodder II",
    "author_email": "qypi@varonathe.org",
    "license": "MIT",
    "keywords": "pypi,warehouse,search,packages,pip",
    "platform": [],
    "classifier": [
        "Development Status :: 4 - Beta",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.4",
        "Programming Language :: Python :: 3.5",
        "Programming Language :: Python :: 3.6",
        "License :: OSI Approved :: MIT License",
        "Environment :: Console",
        "Intended Audience :: Developers",
        "Intended Audience :: Information Technology",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: System :: Software Distribution"
    ],
    "requires_python": "~=3.4",
    "requires_dist": [
        {
            "name": "click",
            "url": null,
            "extras": [],
            "specifier": "~=6.5",
            "marker": null
        },
        {
            "name": "packaging",
            "url": null,
            "extras": [],
            "specifier": ">=16",
            "marker": null
        },
        {
            "name": "requests",
            "url": null,
            "extras": [],
            "specifier": "==2.*",
            "marker": null
        }
    ],
    "BODY": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active — The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://img.shields.io/pypi/pyversions/qypi.svg\n    :target: https://pypi.python.org/pypi/qypi\n\n.. image:: https://img.shields.io/github/license/jwodder/qypi.svg?maxAge=2592000\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/qypi>`_\n| `PyPI <https://pypi.python.org/pypi/qypi>`_\n| `Issues <https://github.com/jwodder/qypi/issues>`_\n\n``qypi`` is a command-line client for querying & searching `the Python Package\nIndex <https://pypi.python.org>`_ for Python package information and outputting\nJSON (with some minor opinionated changes to the output data structures; see\nthe examples below).\n\n\nInstallation\n============\n``qypi`` requires Python 3.4 or newer.  Just use version 6.0 or higher of `pip\n<https://pip.pypa.io/>`_ for Python 3 (You have pip, right?) to install\n``qypi`` and its dependencies::\n\n    pip3 install qypi\n\n\nUsage\n=====\n\n::\n\n    qypi [-i|--index-url <URL>] <command> [<options>] [<arguments>]\n\nGlobal Option\n-------------\n\n- ``-i <URL>``, ``--index-url <URL>`` — Query the Python package server at the\n  given URL, which must support both the `XML-RPC\n  <http://wiki.python.org/moin/PyPIXmlRpc>`_ and `JSON\n  <http://wiki.python.org/moin/PyPIJSON>`_ APIs.  By default, ``qypi`` queries\n  `Warehouse <https://pypi.org>`_ at ``https://pypi.org/pypi``; to use the\n  current/legacy PyPI instance instead, set the index URL to\n  ``https://pypi.python.org/pypi``.\n\n\nList Packages\n-------------\n\n``list``\n^^^^^^^^\n\n::\n\n    qypi list\n\nList all packages registered on PyPI, one per line, in the order that they are\nreturned by the API.  ``list`` and ``readme`` are the only subcommands that do\nnot output JSON.\n\n``search``\n^^^^^^^^^^\n\n::\n\n    qypi search [--and|--or] [--packages|--releases] <term> ...\n\nSearch PyPI for packages or package releases matching the given search terms.\nSearch terms consist of a field name and a value separated by a colon; a term\nwithout a colon searches the ``description`` field.  As documented `here\n<https://wiki.python.org/moin/PyPIXmlRpc>`_, the supported searchable fields\nare:\n\n- ``name``\n- ``version``\n- ``author``\n- ``author_email``\n- ``maintainer``\n- ``maintainer_email``\n- ``home_page`` (alias: ``url``)\n- ``license``\n- ``summary``\n- ``description`` (aliases: ``long_description`` and ``readme``)\n- ``keywords``\n- ``platform``\n- ``download_url``\n\nAll other fields are ignored.\n\nMultiple search terms referring to the same field are combined with logical OR.\nSearch terms on different fields are combined according to whether ``--and`` or\n``--or`` is specified on the command line; the default behavior is ``--and``.\n\nBy default, ``search`` lists every matching release for every package, even if\nthe same package has multiple matching releases.  To list no more than one\nrelease (specifically, the highest-versioned) per package, specify the\n``-p``/``--packages`` option on the command line.  ``-r``/``--releases``\nrestores the default behavior.\n\n``browse``\n^^^^^^^^^^\n\n::\n\n    qypi browse [-f|--file <file>] [--packages|--releases] <classifier> ...\n\nList packages or package releases with the given `trove classifiers\n<https://pypi.python.org/pypi?%3Aaction=list_classifiers>`_.  Because trove\nclassifiers are not the most command-line friendly thing in the world, they may\noptionally be read from a file, one classifier per line.  Any further\nclassifiers listed on the command line will be added to the file's list.\n\nBy default, ``browse`` lists every matching release for every package, even if\nthe same package has multiple matching releases.  To list no more than one\nrelease (specifically, the highest-versioned) per package, specify the\n``-p``/``--packages`` option on the command line.  ``-r``/``--releases``\nrestores the default behavior.\n\n``owned``\n^^^^^^^^^\n\n::\n\n    qypi owned <user> ...\n\nList packages owned or maintained by the given PyPI users\n\n\nPackage Information\n-------------------\n\n``releases``\n^^^^^^^^^^^^\n\n::\n\n    qypi releases <package> ...\n\nList the released versions for the given packages in PEP 440 order\n\nExample::\n\n    $ qypi releases qypi\n    {\n        \"qypi\": [\n            {\n                \"is_prerelease\": false,\n                \"release_date\": \"2017-04-02T03:07:42\",\n                \"release_url\": \"https://pypi.org/project/qypi/0.1.0\",\n                \"version\": \"0.1.0\"\n            },\n            {\n                \"is_prerelease\": false,\n                \"release_date\": \"2017-04-02T03:32:44\",\n                \"release_url\": \"https://pypi.org/project/qypi/0.1.0.post1\",\n                \"version\": \"0.1.0.post1\"\n            }\n        ]\n    }\n\nA release's release date is the time at which its first file was uploaded.  If\nthere are no files associated with a release, its release date will be\n``null``.\n\n``owner``\n^^^^^^^^^\n\n::\n\n    qypi owner <package> ...\n\nList the PyPI users that own and/or maintain the given packages\n\nExample::\n\n    $ qypi owner requests\n    {\n        \"requests\": [\n            {\n                \"role\": \"Owner\",\n                \"user\": \"graffatcolmingov\"\n            },\n            {\n                \"role\": \"Owner\",\n                \"user\": \"kennethreitz\"\n            },\n            {\n                \"role\": \"Owner\",\n                \"user\": \"Lukasa\"\n            },\n            {\n                \"role\": \"Maintainer\",\n                \"user\": \"graffatcolmingov\"\n            },\n            {\n                \"role\": \"Maintainer\",\n                \"user\": \"Lukasa\"\n            },\n            {\n                \"role\": \"Maintainer\",\n                \"user\": \"nateprewitt\"\n            }\n        ]\n    }\n\nRelease Information\n-------------------\nThese subcommands show information about individual package releases/versions\nand share the same command-line options and argument syntax.\n\nArguments of the form ``package==version`` (e.g., ``qypi info qypi==0.1.0``)\nalways refer to the given version of the given package.\n\nArguments that are just a package name refer to (by default) the\nhighest-numbered non-prerelease version of the package.  This can be changed\nwith the following options:\n\n- ``--all-versions``/``--latest-version`` — Show information for all versions\n  (in PEP 440 order, excluding prereleases unless ``--pre`` is given)/only the\n  latest version of each package; default: latest only\n\n  - ``--all-versions`` may optionally be written ``-A``.\n\n- ``--newest``/``--highest`` — Define \"latest version\" to mean the most\n  recently released/highest-numbered version; default: highest-numbered.\n  ``--newest`` determines release dates based on file upload times; releases\n  without file uploads are thus ignored.\n\n- ``--pre``/``--no-pre`` — Include/don't include prerelease & development\n  versions; default: don't include\n\n``info``\n^^^^^^^^\n\n::\n\n    qypi info [<options>] [--description] [--trust-downloads] <package[==version]> ...\n\nShow basic information about the given package releases.\n\nBy default, (long) descriptions are omitted because they can be *very* long,\nand it is recommended that you view them with the ``readme`` subcommand\ninstead; use the ``--description`` option to include them anyway.\n\nBy default, download counts are omitted because `the feature is currently\nbroken & unreliable <https://github.com/pypa/pypi-legacy/issues/396>`_; use the\n``--trust-downloads`` option if you want to see the values anyway.\n\nExample::\n\n    $ qypi info qypi\n    [\n        {\n            \"bugtrack_url\": null,\n            \"classifiers\": [\n                \"Development Status :: 4 - Beta\",\n                \"Environment :: Console\",\n                \"Intended Audience :: Developers\",\n                \"Intended Audience :: Information Technology\",\n                \"License :: OSI Approved :: MIT License\",\n                \"Programming Language :: Python :: 3\",\n                \"Programming Language :: Python :: 3.4\",\n                \"Programming Language :: Python :: 3.5\",\n                \"Programming Language :: Python :: 3.6\",\n                \"Programming Language :: Python :: 3 :: Only\",\n                \"Topic :: Software Development :: Libraries :: Python Modules\",\n                \"Topic :: System :: Software Distribution\"\n            ],\n            \"docs_url\": null,\n            \"download_url\": null,\n            \"keywords\": \"pypi warehouse search packages pip\",\n            \"license\": \"MIT\",\n            \"name\": \"qypi\",\n            \"people\": [\n                {\n                    \"email\": \"qypi@varonathe.org\",\n                    \"name\": \"John Thorvald Wodder II\",\n                    \"role\": \"author\"\n                }\n            ],\n            \"platform\": null,\n            \"project_url\": \"https://pypi.org/project/qypi/\",\n            \"release_date\": \"2017-04-02T03:32:44\",\n            \"release_url\": \"https://pypi.org/project/qypi/0.1.0.post1/\",\n            \"requires_python\": \"~=3.4\",\n            \"summary\": \"Query PyPI from the command line\",\n            \"url\": \"https://github.com/jwodder/qypi\",\n            \"version\": \"0.1.0.post1\"\n        }\n    ]\n\n``readme``\n^^^^^^^^^^\n\n::\n\n    qypi readme [<options>] <package[==version]> ...\n\nDisplay the given package releases' (long) descriptions in a pager one at a\ntime.  ``list`` and ``readme`` are the only subcommands that do not output\nJSON.\n\n``files``\n^^^^^^^^^\n\n::\n\n    qypi files [<options>] [--trust-downloads] <package[==version]> ...\n\nList files available for download for the given package releases.  Download\ncounts are omitted because `the feature is currently broken & unreliable\n<https://github.com/pypa/pypi-legacy/issues/396>`_; use the\n``--trust-downloads`` option if you want to see the values anyway.\n\nExample::\n\n    $ qypi files qypi\n    [\n        {\n            \"files\": [\n                {\n                    \"comment_text\": \"\",\n                    \"digests\": {\n                        \"md5\": \"58863d77e19bf4aa1ae85026cc1ff0f6\",\n                        \"sha256\": \"5946a4557550479af90278e5418cd2c32a2626936075078a4c7096be52d43078\"\n                    },\n                    \"filename\": \"qypi-0.1.0.post1-py3-none-any.whl\",\n                    \"has_sig\": true,\n                    \"md5_digest\": \"58863d77e19bf4aa1ae85026cc1ff0f6\",\n                    \"packagetype\": \"bdist_wheel\",\n                    \"python_version\": \"py3\",\n                    \"size\": 13590,\n                    \"upload_time\": \"2017-04-02T03:32:44\",\n                    \"url\": \"https://files.pythonhosted.org/packages/f9/3f/6b184713e79da15cd451f0dab91864633175242f4d321df0cacdd2dc8300/qypi-0.1.0.post1-py3-none-any.whl\"\n                },\n                {\n                    \"comment_text\": \"\",\n                    \"digests\": {\n                        \"md5\": \"bfd357b3df2c2f1cbb6d23ff7c61fbb9\",\n                        \"sha256\": \"c99eea315455cf9fde722599ab67eeefdff5c184bb3861a7fd82f8a9387c252d\"\n                    },\n                    \"filename\": \"qypi-0.1.0.post1.tar.gz\",\n                    \"has_sig\": true,\n                    \"md5_digest\": \"bfd357b3df2c2f1cbb6d23ff7c61fbb9\",\n                    \"packagetype\": \"sdist\",\n                    \"python_version\": \"source\",\n                    \"size\": 8975,\n                    \"upload_time\": \"2017-04-02T03:32:46\",\n                    \"url\": \"https://files.pythonhosted.org/packages/0e/49/3056ee68b44c8eab4d4698b52ae4d18c0db92c80abc312894c02c4722621/qypi-0.1.0.post1.tar.gz\"\n                }\n            ],\n            \"name\": \"qypi\",\n            \"version\": \"0.1.0.post1\"\n        }\n    ]\n\n\n"
}
