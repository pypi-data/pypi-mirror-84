Metadata-Version: 2.1
Name: python-audio-autotest
Version: 1.2.2
Summary: This is a auto-testing framework of audio functions for Android devices.
Home-page: https://github.com/HW-Lee/AudioAutoTest
Author: Hao-Wei Lee
Author-email: hwinnerlee@gmail.com, hwlee@google.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: androidviewclient (==20.0.0b3)
Requires-Dist: audioread (==2.1.8)
Requires-Dist: certifi (==2019.9.11)
Requires-Dist: cffi (==1.13.2)
Requires-Dist: chardet (==3.0.4)
Requires-Dist: culebratester-client (==2.0.11)
Requires-Dist: cycler (==0.10.0)
Requires-Dist: decorator (==4.4.1)
Requires-Dist: idna (==2.8)
Requires-Dist: joblib (==0.14.0)
Requires-Dist: kiwisolver (==1.1.0)
Requires-Dist: librosa (==0.7.1)
Requires-Dist: llvmlite (==0.34.0)
Requires-Dist: matplotlib (==3.1.1)
Requires-Dist: numba (==0.46.0)
Requires-Dist: numpy (==1.17.3)
Requires-Dist: Pillow (==7.0.0)
Requires-Dist: pycparser (==2.19)
Requires-Dist: pyparsing (==2.4.4)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: requests (==2.22.0)
Requires-Dist: resampy (==0.2.2)
Requires-Dist: scikit-learn (==0.23.2)
Requires-Dist: scipy (==1.3.1)
Requires-Dist: six (==1.13.0)
Requires-Dist: sounddevice (==0.3.14)
Requires-Dist: SoundFile (==0.10.2)
Requires-Dist: urllib3 (==1.25.6)

# AudioAutoTest
## Description
This is a auto-testing framework of audio functions for Android devices.

- For checking the detailed information of APIs, please refer to the [documentation](https://github.com/HW-Lee/AudioAutoTest/blob/master/libs/README.md)

## Release Note
### v1.2
#### v1.2.1
- change log tag with verbosity level of `pyaat.logger`
- correct README

#### v1.2.0
- add verbosity level control of `pyaatlibs.logger`
- add `wait_for_device` API of `pyaatlibs.adbutils`

## Installation
### Requirements
- pip
- Python 3.7+
- virtualenv

#### Create a virtual environment
```
{WORK_DIR}$ mkdir venv
{WORK_DIR}$ virtualenv -p python3 venv/py3
Running virtualenv with interpreter /usr/bin/python3
New python executable in {WORK_DIR}/venv/py3/bin/python
Also creating executable in {WORK_DIR}/venv/py3/bin/python
Installing setuptools, pip, wheel...done.
{WORK_DIR}$ source venv/py3/bin/activate
(py3) {WORK_DIR}$
```

#### The dependencies should be installed with a command
```
(py3) {WORK_DIR}$ pip install -r requirements-py3.txt
```


