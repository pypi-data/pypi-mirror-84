{
    "version": "1.1.1",
    "name": "aiida-siesta",
    "url": "https://github.com/albgar/aiida_siesta_plugin",
    "keywords": ["aiida", "siesta", "dft"],
    "license": "MIT License",
    "author": "Alberto Garcia, Victor M. Garcia-Suarez, Emanuele Bosoni, Vladimir Dikan, Pol Febrer",
    "author_email": "albertog@icmab.es",
    "description": "A plugin for Siesta's basic functionality within the AiiDA framework.",
    "classifiers": [
        "License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3.6",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Development Status :: 5 - Production/Stable",
	"Framework :: AiiDA"
    ],
    "install_requires": [
	"aiida_core>=1.3.0,<2.0.0",
	"ase~=3.18",
	"seekpath~=1.9,>=1.9.3"
    ],
    "extras_require": {
	"dev": [
            "pre-commit==2.3.0",
            "prospector==1.2.0",
	    "yapf==0.28.0",
            "pylint==2.4.4",
            "pgtest==1.3.1",
            "pytest==5.4.1",
            "pytest-regressions==1.0.6"
        ],
        "docs": [
            "Sphinx",
            "docutils",
            "sphinx_rtd_theme",
	    "sphinx-copybutton"
        ]
    },
    "entry_points": {
        "aiida.calculations": [
            "siesta.siesta = aiida_siesta.calculations.siesta:SiestaCalculation",
            "siesta.stm = aiida_siesta.calculations.stm:STMCalculation"
        ],
        "aiida.parsers": [
            "siesta.parser = aiida_siesta.parsers.siesta:SiestaParser",
            "siesta.stm = aiida_siesta.parsers.stm:STMParser"
        ],
        "aiida.workflows": [
            "siesta.base = aiida_siesta.workflows.base:SiestaBaseWorkChain",
	    "siesta.eos = aiida_siesta.workflows.eos:EqOfStateFixedCellShape",
	    "siesta.bandgap = aiida_siesta.workflows.bandgap:BandgapWorkChain",
            "siesta.stm = aiida_siesta.workflows.stm:SiestaSTMWorkChain",
	    "siesta.iterator = aiida_siesta.workflows.iterate:SiestaIterator",
	    "siesta.converger = aiida_siesta.workflows.converge:SiestaConverger",
	    "siesta.sequential_converger = aiida_siesta.workflows.converge:SiestaSequentialConverger"
        ],
        "aiida.data": [
            "siesta.psf = aiida_siesta.data.psf:PsfData",
            "siesta.psml = aiida_siesta.data.psml:PsmlData"
        ],
        "aiida.cmdline.data": [
            "psf = aiida_siesta.commands.data_psf:psfdata",
            "psml = aiida_siesta.commands.data_psml:psmldata"
        ],
	"aiida.groups": [
      	    "data.psf.family = aiida_siesta.groups.pseudos:PsfFamily",
            "data.psml.family = aiida_siesta.groups.pseudos:PsmlFamily"
    	]
    }
}
