<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="1" tests="9" time="29.272069215774536">
	<testsuite disabled="0" errors="0" failures="1" name="meraki_mx_l3_firewall-eq17rbe4" skipped="1" tests="9" time="29.272069215774536">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:7" name="[localhost] meraki: meraki_mx_l3_firewall : Test an API key is provided msg=Please define an API key" time="0.358549">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:12" name="[localhost] meraki: meraki_mx_l3_firewall : Create network auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, type=appliance" time="4.184055">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297682614&quot;,
&quot;name&quot;: &quot;TestNetAppliance&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: &quot;&quot;,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;appliance&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:118" name="[localhost] meraki: meraki_mx_l3_firewall : Create syslog in network auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, servers=[{'host': '192.0.2.10', 'port': 514, 'roles': ['Appliance event log', 'Flows']}]" time="6.318330">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: [
{
&quot;host&quot;: &quot;192.0.2.10&quot;,
&quot;port&quot;: &quot;514&quot;,
&quot;roles&quot;: [
&quot;Flows&quot;,
&quot;Appliance event log&quot;
]
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:227" name="[localhost] meraki: meraki_mx_l3_firewall : Disable syslog for next test auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, syslog_default_rule=False" time="3.528493">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:236" name="[localhost] meraki: meraki_mx_l3_firewall : Query firewall rules auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=query" time="3.464434">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:245" name="[localhost] meraki: meraki_mx_l3_firewall : debug msg={{query}}" time="0.367132">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: false
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:248" name="[localhost] meraki: meraki_mx_l3_firewall : Enable syslog for default rule with no rules and with check mode auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, syslog_default_rule=True" time="3.299186">
			<failure message="{'auth_key': 'VALUE_SPECIFIED_IN_NO_LOG_PARAMETER', 'org_name': 'kbreit@insight.com', 'net_name': 'TestNetAppliance', 'state': 'present', 'syslog_default_rule': True, 'host': 'api.meraki.com', 'use_proxy': False, 'use_https': True, 'validate_certs': True, 'output_format': 'snakecase', 'output_level': 'normal', 'timeout': 30, 'rate_limit_retry_time': 165, 'internal_error_retry_time': 60, 'org_id': None, 'net_id': None, 'rules': None, 'follow_redirects': 'all', 'protocol': 'https'}" type="failure">{
&quot;changed&quot;: false,
&quot;msg&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;net_id&quot;: null,
&quot;net_name&quot;: &quot;TestNetAppliance&quot;,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;rules&quot;: null,
&quot;state&quot;: &quot;present&quot;,
&quot;syslog_default_rule&quot;: true,
&quot;timeout&quot;: 30,
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</failure>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:285" name="[localhost] meraki: meraki_mx_l3_firewall : Delete all firewall rules auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, rules=[]" time="3.328525">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_l3_firewall-oehtvxt3-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_l3_firewall/tasks/main.yml:295" name="[localhost] meraki: meraki_mx_l3_firewall : Delete network auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=absent" time="4.423366">
			<system-out>{
&quot;changed&quot;: true,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
