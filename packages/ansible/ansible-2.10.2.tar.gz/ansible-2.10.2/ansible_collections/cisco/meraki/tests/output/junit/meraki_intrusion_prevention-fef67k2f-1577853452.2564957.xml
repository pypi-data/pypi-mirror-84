<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="1" tests="14" time="27.320206880569458">
	<testsuite disabled="0" errors="0" failures="1" name="meraki_intrusion_prevention-fef67k2f" skipped="1" tests="14" time="27.320206880569458">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:7" name="[localhost] meraki: meraki_intrusion_prevention : Test an API key is provided msg=Please define an API key" time="0.334235">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:12" name="[localhost] meraki: meraki_intrusion_prevention : Create test network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}} - IPS, type=appliance" time="4.980574">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297682554&quot;,
&quot;name&quot;: &quot;Home - Appliance - IPS&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: &quot;&quot;,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;appliance&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:21" name="[localhost] meraki: meraki_intrusion_prevention : debug var=net" time="0.367982">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;net&quot;: {
        &quot;ansible_facts&quot;: {
            &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
        },
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;disable_my_meraki_com&quot;: false,
            &quot;disable_remote_status_page&quot;: true,
            &quot;enrollment_string&quot;: null,
            &quot;id&quot;: &quot;N_624874448297682554&quot;,
            &quot;name&quot;: &quot;Home - Appliance - IPS&quot;,
            &quot;organization_id&quot;: &quot;133277&quot;,
            &quot;product_types&quot;: [
                &quot;appliance&quot;
            ],
            &quot;tags&quot;: &quot;&quot;,
            &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
            &quot;type&quot;: &quot;appliance&quot;
        },
        &quot;deprecations&quot;: [
            {
                &quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
                &quot;version&quot;: &quot;2.12&quot;
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 201
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:24" name="[localhost] meraki: meraki_intrusion_prevention : Set whitelist for organization in check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, whitelisted_rules=[{'rule_id': 'meraki:intrusion/snort/GID/01/SID/5805', 'message': 'Test rule'}]" time="2.922737">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;whitelisted_rules&quot;: [
{
&quot;message&quot;: &quot;Test rule&quot;,
&quot;rule_id&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;
}
]
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:35" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['create_org_check is changed', 'create_org_check.data is defined']" time="0.365830">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:40" name="[localhost] meraki: meraki_intrusion_prevention : Set whitelist for organization auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, whitelisted_rules=[{'rule_id': 'meraki:intrusion/snort/GID/01/SID/5805', 'message': 'Test rule'}]" time="2.344975">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;whitelisted_rules&quot;: [
{
&quot;message&quot;: &quot;MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines&quot;,
&quot;rule_id&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;
}
]
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200,
&quot;warnings&quot;: [
&quot;The value 133277 (type int) in a string field was converted to '133277' (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:50" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['create_org is changed', 'create_org.data is defined', 'create_org.data.whitelistedRules | length == 1']" time="0.364952">
			<failure message="The conditional check 'create_org.data.whitelistedRules | length == 1' failed. The error was: error while evaluating conditional (create_org.data.whitelistedRules | length == 1): 'dict object' has no attribute 'whitelistedRules'" type="failure">{
&quot;msg&quot;: &quot;The conditional check 'create_org.data.whitelistedRules | length == 1' failed. The error was: error while evaluating conditional (create_org.data.whitelistedRules | length == 1): 'dict object' has no attribute 'whitelistedRules'&quot;
}</failure>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:266" name="[localhost] meraki: meraki_intrusion_prevention : Delete network auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}} - IPS" time="4.644407">
			<system-out>{
&quot;changed&quot;: true,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:274" name="[localhost] meraki: meraki_intrusion_prevention : Clear rules from organization with check mode auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, whitelisted_rules=[None]" time="2.378652">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;whitelisted_rules&quot;: [
{
&quot;message&quot;: &quot;MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines&quot;,
&quot;rule_id&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;
}
]
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:284" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['cleared is changed', 'cleared.data is defined']" time="0.376094">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:289" name="[localhost] meraki: meraki_intrusion_prevention : Clear rules from organization auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, whitelisted_rules=[None]" time="2.936960">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;whitelisted_rules&quot;: []
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:297" name="[localhost] meraki: meraki_intrusion_prevention : Clear rules from organization with idempotency auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, whitelisted_rules=[None]" time="2.058540">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;whitelisted_rules&quot;: []
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:306" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['del_idempotent is not changed', 'del_idempotent.data is defined']" time="0.409334">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-zeeloa6b-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:311" name="[localhost] meraki: meraki_intrusion_prevention : Delete test network auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}} - IPS" time="2.834934">
			<system-out>{
&quot;changed&quot;: false,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
