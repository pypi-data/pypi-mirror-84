<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="0" tests="6" time="10.88860297203064">
	<testsuite disabled="0" errors="0" failures="0" name="meraki_switch_storm_control-y_22838n" skipped="0" tests="6" time="10.88860297203064">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:7" name="[localhost] meraki: meraki_switch_storm_control : Create switch network auth_key={{ auth_key }}, state=present, org_name={{test_org_name}}, net_name=Home - Switch, timezone=America/Chicago, type=switch" time="2.822959">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;id&quot;: &quot;N_624874448297682461&quot;,
&quot;name&quot;: &quot;Home - Switch&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;switch&quot;
],
&quot;tags&quot;: null,
&quot;time_zone&quot;: &quot;America/Chicago&quot;,
&quot;type&quot;: &quot;switch&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:18" name="[localhost] meraki: meraki_switch_storm_control : set_fact net_id={{net.data.id}}" time="0.341633">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;net_id&quot;: &quot;N_624874448297682461&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:21" name="[localhost] meraki: meraki_switch_storm_control : Set broadcast settings auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=Home - Switch, broadcast_threshold=75" time="2.774037">
			<system-out>{
&quot;changed&quot;: false,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:31" name="[localhost] meraki: meraki_switch_storm_control : debug var=set_unicast" time="0.373743">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;set_unicast&quot;: {
        &quot;changed&quot;: false,
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:34" name="[localhost] meraki: meraki_switch_storm_control : Query storm control settings auth_key={{auth_key}}, state=query, org_name={{test_org_name}}, net_name=Home - Switch" time="4.206784">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;broadcast_threshold&quot;: 100,
&quot;multicast_threshold&quot;: 100,
&quot;unknown_unicast_threshold&quot;: 100
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_switch_storm_control-nxgvh12j-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_switch_storm_control/tasks/main.yml:43" name="[localhost] meraki: meraki_switch_storm_control : debug var=query_all" time="0.369447">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;query_all&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;broadcast_threshold&quot;: 100,
            &quot;multicast_threshold&quot;: 100,
            &quot;unknown_unicast_threshold&quot;: 100
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
