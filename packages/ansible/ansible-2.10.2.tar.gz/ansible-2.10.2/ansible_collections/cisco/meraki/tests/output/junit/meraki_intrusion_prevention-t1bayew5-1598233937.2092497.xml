<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="2" tests="10" time="20.601255416870117">
	<testsuite disabled="0" errors="0" failures="2" name="meraki_intrusion_prevention-t1bayew5" skipped="1" tests="10" time="20.601255416870117">
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:7" name="[localhost] meraki: meraki_intrusion_prevention : Test an API key is provided msg=Please define an API key" time="0.165515">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:12" name="[localhost] meraki: meraki_intrusion_prevention : Create test network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}} - IPS, type=appliance" time="4.900918">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297686194&quot;,
&quot;name&quot;: &quot;Home - Appliance - IPS&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: [],
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;url&quot;: &quot;https://n110.meraki.com/Home-Appliance-I/n/OFaLVaUb/manage/usage/list&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.10/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:21" name="[localhost] meraki: meraki_intrusion_prevention : debug var=net" time="0.159085">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;net&quot;: {
        &quot;ansible_facts&quot;: {
            &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
        },
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;enrollment_string&quot;: null,
            &quot;id&quot;: &quot;N_624874448297686194&quot;,
            &quot;name&quot;: &quot;Home - Appliance - IPS&quot;,
            &quot;organization_id&quot;: &quot;133277&quot;,
            &quot;product_types&quot;: [
                &quot;appliance&quot;
            ],
            &quot;tags&quot;: [],
            &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
            &quot;url&quot;: &quot;https://n110.meraki.com/Home-Appliance-I/n/OFaLVaUb/manage/usage/list&quot;
        },
        &quot;deprecations&quot;: [
            {
                &quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.10/reference_appendices/interpreter_discovery.html for more information&quot;,
                &quot;version&quot;: &quot;2.12&quot;
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 201
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:24" name="[localhost] meraki: meraki_intrusion_prevention : Set whitelist for organization in check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, whitelisted_rules=[{'rule_id': 'meraki:intrusion/snort/GID/01/SID/5805', 'message': 'Test rule'}]" time="2.470008">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;allowed_rules&quot;: [],
&quot;whitelisted_rules&quot;: [
{
&quot;message&quot;: &quot;Test rule&quot;,
&quot;rule_id&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;
}
]
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:35" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['create_org_check is changed', 'create_org_check.data is defined']" time="0.168361">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:40" name="[localhost] meraki: meraki_intrusion_prevention : Set whitelist for organization auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, whitelisted_rules=[{'rule_id': 'meraki:intrusion/snort/GID/01/SID/5805', 'message': 'Test rule'}]" time="2.435868">
			<failure message="HTTP error 400 - https://api.meraki.com/api/v1/organizations/133277/appliance/security/intrusion - Error for /organizations/{organizationId}/appliance/security/intrusion: None of the fields ('allowedRules') were specified." type="failure">{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;HTTP error 400 - https://api.meraki.com/api/v1/organizations/133277/appliance/security/intrusion - Error for /organizations/{organizationId}/appliance/security/intrusion: None of the fields ('allowedRules') were specified.&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 400,
&quot;warnings&quot;: [
&quot;The value \&quot;133277\&quot; (type int) was converted to \&quot;'133277'\&quot; (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</failure>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:266" name="[localhost] meraki: meraki_intrusion_prevention : Delete network auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}} - IPS" time="4.848881">
			<system-out>{
&quot;changed&quot;: true,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:274" name="[localhost] meraki: meraki_intrusion_prevention : Clear rules from organization with check mode auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, whitelisted_rules=[]" time="2.221782">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;allowed_rules&quot;: [],
&quot;whitelisted_rules&quot;: []
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:283" name="[localhost] meraki: meraki_intrusion_prevention : assert that=['cleared is changed', 'cleared.data is defined']" time="0.178179">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_intrusion_prevention-l2ihox9m-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_intrusion_prevention/tasks/tests.yml:288" name="[localhost] meraki: meraki_intrusion_prevention : Clear rules from organization auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, whitelisted_rules=[]" time="3.052658">
			<failure message="HTTP error 400 - https://api.meraki.com/api/v1/organizations/133277/appliance/security/intrusion - Error for /organizations/{organizationId}/appliance/security/intrusion: None of the fields ('allowedRules') were specified." type="failure">{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;HTTP error 400 - https://api.meraki.com/api/v1/organizations/133277/appliance/security/intrusion - Error for /organizations/{organizationId}/appliance/security/intrusion: None of the fields ('allowedRules') were specified.&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 400
}</failure>
		</testcase>
	</testsuite>
</testsuites>
