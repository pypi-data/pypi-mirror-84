<?xml version="1.0" ?>
<testsuites disabled="0" errors="1" failures="0" tests="6" time="2.8639774322509766">
	<testsuite disabled="0" errors="1" failures="0" name="meraki_management_interface-447ftnjp" skipped="1" tests="6" time="2.8639774322509766">
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:7" name="[localhost] meraki: meraki_management_interface : Test an API key is provided msg=Please define an API key" time="0.105008">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:12" name="[localhost] meraki: meraki_management_interface : set_fact net_name=TestNet - Appliance" time="0.044037">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;net_name&quot;: &quot;TestNet - Appliance&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:15" name="[localhost] meraki: meraki_management_interface : Create test network auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_name={{net_name}}, type=appliance" time="2.355953">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;id&quot;: &quot;N_624874448297679182&quot;,
&quot;name&quot;: &quot;TestNet - Appliance&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: null,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;appliance&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/devel/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200,
&quot;warnings&quot;: [
&quot;The value \&quot;auth_key: 133277\&quot; (type int) was converted to \&quot;auth_key: '133277'\&quot; (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:25" name="[localhost] meraki: meraki_management_interface : set_fact net_id={{net.data.id}}" time="0.097836">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;net_id&quot;: &quot;N_624874448297679182&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:28" name="[localhost] meraki: meraki_management_interface : Set WAN1 as DHCP in check mode auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_id={{net_id}}, serial={{serial}}, wan1={'wan_enabled': 'enabled', 'using_static_ip': False, 'vlan': 1}" time="0.136593">
			<error message="ImportError: No module named '__init__'" type="error">Traceback (most recent call last):
  File &quot;/root/ansible/lib/ansible/executor/task_executor.py&quot;, line 155, in run
    res = self._execute()
  File &quot;/root/ansible/lib/ansible/executor/task_executor.py&quot;, line 650, in _execute
    result = self._handler.run(task_vars=variables)
  File &quot;/root/ansible/lib/ansible/plugins/action/normal.py&quot;, line 46, in run
    result = merge_hash(result, self._execute_module(task_vars=task_vars, wrap_async=wrap_async))
  File &quot;/root/ansible/lib/ansible/plugins/action/__init__.py&quot;, line 859, in _execute_module
    (module_style, shebang, module_data, module_path) = self._configure_module(module_name=module_name, module_args=module_args, task_vars=task_vars)
  File &quot;/root/ansible/lib/ansible/plugins/action/__init__.py&quot;, line 232, in _configure_module
    **become_kwargs)
  File &quot;/root/ansible/lib/ansible/executor/module_common.py&quot;, line 1289, in modify_module
    environment=environment)
  File &quot;/root/ansible/lib/ansible/executor/module_common.py&quot;, line 1126, in _find_module_utils
    py_module_cache, zf)
  File &quot;/root/ansible/lib/ansible/executor/module_common.py&quot;, line 873, in recursive_finder
    [os.path.join(p, *relative_module_utils[:-1]) for p in module_utils_paths])
  File &quot;/root/ansible/lib/ansible/executor/module_common.py&quot;, line 614, in __init__
    raise ImportError(&quot;No module named '%s'&quot; % name)
ImportError: No module named '__init__'
</error>
		</testcase>
		<testcase classname="/root/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-ov1zzuzi-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:172" name="[localhost] meraki: meraki_management_interface : Reset settings for all interfaces auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_id={{net_id}}, serial={{serial}}, wan1={'wan_enabled': 'disabled', 'using_static_ip': False}, wan2={'wan_enabled': 'enabled', 'using_static_ip': False}" time="0.124551">
			<system-out>{
&quot;msg&quot;: &quot;Unexpected failure during module execution.&quot;,
&quot;stdout&quot;: &quot;&quot;
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
