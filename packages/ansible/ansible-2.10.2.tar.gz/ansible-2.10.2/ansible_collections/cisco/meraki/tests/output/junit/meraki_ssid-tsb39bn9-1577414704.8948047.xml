<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="0" tests="41" time="58.47404861450195">
	<testsuite disabled="0" errors="0" failures="0" name="meraki_ssid-tsb39bn9" skipped="1" tests="41" time="58.47404861450195">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:7" name="[localhost] meraki: meraki_ssid : Test an API key is provided msg=Please define an API key" time="0.407011">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:12" name="[localhost] meraki: meraki_ssid : Create test network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, type=wireless" time="4.233742">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297682447&quot;,
&quot;name&quot;: &quot;TestNetSSID&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;wireless&quot;
],
&quot;tags&quot;: &quot;&quot;,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;wireless&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:21" name="[localhost] meraki: meraki_ssid : debug msg={{test_net}}" time="0.506423">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;ansible_facts&quot;: {
            &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
        },
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;disable_my_meraki_com&quot;: false,
            &quot;disable_remote_status_page&quot;: true,
            &quot;enrollment_string&quot;: null,
            &quot;id&quot;: &quot;N_624874448297682447&quot;,
            &quot;name&quot;: &quot;TestNetSSID&quot;,
            &quot;organization_id&quot;: &quot;133277&quot;,
            &quot;product_types&quot;: [
                &quot;wireless&quot;
            ],
            &quot;tags&quot;: &quot;&quot;,
            &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
            &quot;type&quot;: &quot;wireless&quot;
        },
        &quot;deprecations&quot;: [
            {
                &quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
                &quot;version&quot;: &quot;2.12&quot;
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 201
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:142" name="[localhost] meraki: meraki_ssid : Set VLAN arg spec auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, number=1, use_vlan_tagging=True, ip_assignment_mode=Bridge mode, default_vlan_id=1, ap_tags_vlan_ids=[{'tags': ['wifi', 'guest'], 'vlan_id': 2}]" time="4.474577">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;open&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;splash_page&quot;: &quot;None&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:160" name="[localhost] meraki: meraki_ssid : debug var=set_vlan_arg" time="0.574002">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;set_vlan_arg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;open&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;splash_page&quot;: &quot;None&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:163" name="[localhost] meraki: meraki_ssid : assert that=set_vlan_arg is changed" time="0.501729">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:166" name="[localhost] meraki: meraki_ssid : Set VLAN arg spec with idempotency auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, number=1, use_vlan_tagging=True, ip_assignment_mode=Bridge mode, default_vlan_id=1, ap_tags_vlan_ids=[{'tags': ['wifi', 'guest'], 'vlan_id': 2}]" time="3.292799">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;open&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;splash_page&quot;: &quot;None&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:184" name="[localhost] meraki: meraki_ssid : debug var=set_vlan_arg_idempotent" time="0.380218">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;set_vlan_arg_idempotent&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;open&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;splash_page&quot;: &quot;None&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:187" name="[localhost] meraki: meraki_ssid : assert that=set_vlan_arg_idempotent is not changed" time="0.362191">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:191" name="[localhost] meraki: meraki_ssid : Set PSK auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=psk, psk=abc1234567890, encryption_mode=wpa" time="5.728151">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;psk&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;encryption_mode&quot;: &quot;wpa&quot;,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;AnsibleSSID&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;psk&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;splash_page&quot;: &quot;None&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true,
&quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:204" name="[localhost] meraki: meraki_ssid : debug msg={{ psk }}" time="0.406802">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;psk&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;encryption_mode&quot;: &quot;wpa&quot;,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;AnsibleSSID&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;psk&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
            &quot;splash_page&quot;: &quot;None&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true,
            &quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:207" name="[localhost] meraki: meraki_ssid : assert that=[&quot;psk.data.auth_mode == 'psk'&quot;, &quot;psk.data.encryption_mode == 'wpa'&quot;, &quot;psk.data.wpa_encryption_mode == 'WPA2 only'&quot;]" time="0.440389">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:213" name="[localhost] meraki: meraki_ssid : Set PSK with idempotency auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=psk, psk=abc1234567890, encryption_mode=wpa" time="3.446914">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;psk&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;encryption_mode&quot;: &quot;wpa&quot;,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;AnsibleSSID&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;psk&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;splash_page&quot;: &quot;None&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true,
&quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:226" name="[localhost] meraki: meraki_ssid : debug msg={{ psk_idempotent }}" time="0.394822">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;psk&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;encryption_mode&quot;: &quot;wpa&quot;,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;AnsibleSSID&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;psk&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
            &quot;splash_page&quot;: &quot;None&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true,
            &quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:229" name="[localhost] meraki: meraki_ssid : assert that=['psk_idempotent is not changed']" time="0.369506">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:233" name="[localhost] meraki: meraki_ssid : Enable click-through splash page auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, splash_page=Click-through splash page" time="4.406956">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;admin_splash_url&quot;: null,
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;psk&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;encryption_mode&quot;: &quot;wpa&quot;,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;AnsibleSSID&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;psk&quot;: &quot;abc1234567890&quot;,
&quot;splash_page&quot;: &quot;Click-through splash page&quot;,
&quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true,
&quot;walled_garden_enabled&quot;: false,
&quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:244" name="[localhost] meraki: meraki_ssid : debug msg={{ splash_click }}" time="0.444873">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;admin_splash_url&quot;: null,
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;psk&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;encryption_mode&quot;: &quot;wpa&quot;,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;AnsibleSSID&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;psk&quot;: &quot;abc1234567890&quot;,
            &quot;splash_page&quot;: &quot;Click-through splash page&quot;,
            &quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true,
            &quot;walled_garden_enabled&quot;: false,
            &quot;wpa_encryption_mode&quot;: &quot;WPA2 only&quot;
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:247" name="[localhost] meraki: meraki_ssid : assert that=[&quot;splash_click.data.splash_page == 'Click-through splash page'&quot;]" time="0.372984">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:251" name="[localhost] meraki: meraki_ssid : Configure RADIUS servers auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=open-with-radius, radius_servers=[{'host': '192.0.1.200', 'port': 1234, 'secret': 'abc98765'}]" time="4.926774">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;admin_splash_url&quot;: null,
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;open-with-radius&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;AnsibleSSID&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;radius_accounting_enabled&quot;: false,
&quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
&quot;radius_coa_enabled&quot;: null,
&quot;radius_failover_policy&quot;: null,
&quot;radius_load_balancing_policy&quot;: null,
&quot;radius_override&quot;: false,
&quot;radius_servers&quot;: [
{
&quot;host&quot;: &quot;192.0.1.200&quot;,
&quot;port&quot;: 1234
}
],
&quot;splash_page&quot;: &quot;Click-through splash page&quot;,
&quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true,
&quot;walled_garden_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:266" name="[localhost] meraki: meraki_ssid : debug msg={{ set_radius_server }}" time="0.361261">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;admin_splash_url&quot;: null,
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;open-with-radius&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;AnsibleSSID&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;radius_accounting_enabled&quot;: false,
            &quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
            &quot;radius_coa_enabled&quot;: null,
            &quot;radius_failover_policy&quot;: null,
            &quot;radius_load_balancing_policy&quot;: null,
            &quot;radius_override&quot;: false,
            &quot;radius_servers&quot;: [
                {
                    &quot;host&quot;: &quot;192.0.1.200&quot;,
                    &quot;port&quot;: 1234
                }
            ],
            &quot;splash_page&quot;: &quot;Click-through splash page&quot;,
            &quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true,
            &quot;walled_garden_enabled&quot;: false
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:269" name="[localhost] meraki: meraki_ssid : assert that=[&quot;set_radius_server.data.radius_servers.0.host == '192.0.1.200'&quot;]" time="0.347517">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:273" name="[localhost] meraki: meraki_ssid : Configure RADIUS servers with idempotency auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=open-with-radius, radius_servers=[{'host': '192.0.1.200', 'port': 1234, 'secret': 'abc98765'}]" time="3.717803">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;admin_splash_url&quot;: null,
&quot;ap_tags_and_vlan_ids&quot;: [
{
&quot;tags&quot;: &quot;wifi,guest&quot;,
&quot;vlan_id&quot;: 2
}
],
&quot;auth_mode&quot;: &quot;open-with-radius&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;default_vlan_id&quot;: 1,
&quot;enabled&quot;: false,
&quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
&quot;lan_isolation_enabled&quot;: false,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;AnsibleSSID&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;radius_accounting_enabled&quot;: false,
&quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
&quot;radius_coa_enabled&quot;: null,
&quot;radius_failover_policy&quot;: null,
&quot;radius_load_balancing_policy&quot;: null,
&quot;radius_override&quot;: false,
&quot;radius_servers&quot;: [
{
&quot;host&quot;: &quot;192.0.1.200&quot;,
&quot;port&quot;: 1234
}
],
&quot;splash_page&quot;: &quot;Click-through splash page&quot;,
&quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
&quot;ssid_admin_accessible&quot;: false,
&quot;use_vlan_tagging&quot;: true,
&quot;walled_garden_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:288" name="[localhost] meraki: meraki_ssid : debug var=set_radius_server_idempotent" time="0.425945">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;set_radius_server_idempotent&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;admin_splash_url&quot;: null,
            &quot;ap_tags_and_vlan_ids&quot;: [
                {
                    &quot;tags&quot;: &quot;wifi,guest&quot;,
                    &quot;vlan_id&quot;: 2
                }
            ],
            &quot;auth_mode&quot;: &quot;open-with-radius&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;default_vlan_id&quot;: 1,
            &quot;enabled&quot;: false,
            &quot;ip_assignment_mode&quot;: &quot;Bridge mode&quot;,
            &quot;lan_isolation_enabled&quot;: false,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;AnsibleSSID&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;radius_accounting_enabled&quot;: false,
            &quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
            &quot;radius_coa_enabled&quot;: null,
            &quot;radius_failover_policy&quot;: null,
            &quot;radius_load_balancing_policy&quot;: null,
            &quot;radius_override&quot;: false,
            &quot;radius_servers&quot;: [
                {
                    &quot;host&quot;: &quot;192.0.1.200&quot;,
                    &quot;port&quot;: 1234
                }
            ],
            &quot;splash_page&quot;: &quot;Click-through splash page&quot;,
            &quot;splash_timeout&quot;: &quot;1440 minutes&quot;,
            &quot;ssid_admin_accessible&quot;: false,
            &quot;use_vlan_tagging&quot;: true,
            &quot;walled_garden_enabled&quot;: false
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:291" name="[localhost] meraki: meraki_ssid : assert that=['set_radius_server_idempotent is not changed']" time="0.408135">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:298" name="[localhost] meraki: meraki_ssid : Set PSK with wrong mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=open, psk=abc1234" time="0.702036">
			<system-out>{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;PSK is only allowed when auth_mode is set to psk&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:311" name="[localhost] meraki: meraki_ssid : debug msg={{ psk_invalid }}" time="0.418456">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: false,
        &quot;failed&quot;: true,
        &quot;msg&quot;: &quot;PSK is only allowed when auth_mode is set to psk&quot;,
        &quot;response&quot;: null,
        &quot;status&quot;: null
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:314" name="[localhost] meraki: meraki_ssid : assert that=[&quot;psk_invalid.msg == 'PSK is only allowed when auth_mode is set to psk'&quot;]" time="0.501786">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:318" name="[localhost] meraki: meraki_ssid : Set PSK with invalid encryption mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=psk, psk=abc1234, encryption_mode=eap" time="0.761069">
			<system-out>{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;PSK requires encryption_mode be set to wpa&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:332" name="[localhost] meraki: meraki_ssid : debug msg={{ psk_invalid_mode }}" time="0.365201">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: false,
        &quot;failed&quot;: true,
        &quot;msg&quot;: &quot;PSK requires encryption_mode be set to wpa&quot;,
        &quot;response&quot;: null,
        &quot;status&quot;: null
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:335" name="[localhost] meraki: meraki_ssid : assert that=[&quot;psk_invalid_mode.msg == 'PSK requires encryption_mode be set to wpa'&quot;]" time="0.359169">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:339" name="[localhost] meraki: meraki_ssid : Error for PSK and RADIUS servers auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID, auth_mode=psk, radius_servers=[{'host': '192.0.1.200', 'port': 1234, 'secret': 'abc98765'}]" time="0.672737">
			<system-out>{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;radius_servers requires auth_mode to be open-with-radius or 8021x-radius&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:355" name="[localhost] meraki: meraki_ssid : debug var=err_radius_server_psk" time="0.420812">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;err_radius_server_psk&quot;: {
        &quot;changed&quot;: false,
        &quot;failed&quot;: true,
        &quot;msg&quot;: &quot;radius_servers requires auth_mode to be open-with-radius or 8021x-radius&quot;,
        &quot;response&quot;: null,
        &quot;status&quot;: null
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:358" name="[localhost] meraki: meraki_ssid : assert that=['err_radius_server_psk.msg == &quot;radius_servers requires auth_mode to be open-with-radius or 8021x-radius&quot;']" time="0.437343">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:362" name="[localhost] meraki: meraki_ssid : Set VLAN arg without default VLAN error auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name=TestNetSSID, number=1, use_vlan_tagging=True, ip_assignment_mode=Bridge mode, ap_tags_vlan_ids=[{'tags': 'wifi', 'vlan_id': 2}]" time="0.710042">
			<system-out>{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;default_vlan_id is required when use_vlan_tagging is True&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:378" name="[localhost] meraki: meraki_ssid : debug var=set_vlan_arg_err" time="0.345284">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;set_vlan_arg_err&quot;: {
        &quot;changed&quot;: false,
        &quot;failed&quot;: true,
        &quot;msg&quot;: &quot;default_vlan_id is required when use_vlan_tagging is True&quot;,
        &quot;response&quot;: null,
        &quot;status&quot;: null
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:381" name="[localhost] meraki: meraki_ssid : assert that=['set_vlan_arg_err.msg == &quot;default_vlan_id is required when use_vlan_tagging is True&quot;']" time="0.344981">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:386" name="[localhost] meraki: meraki_ssid : Delete SSID auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name=TestNetSSID, name=AnsibleSSID" time="4.694013">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;auth_mode&quot;: &quot;open-with-radius&quot;,
&quot;band_selection&quot;: &quot;Dual band operation&quot;,
&quot;enabled&quot;: false,
&quot;ip_assignment_mode&quot;: &quot;NAT mode&quot;,
&quot;min_bitrate&quot;: 11,
&quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
&quot;number&quot;: 1,
&quot;per_client_bandwidth_limit_down&quot;: 0,
&quot;per_client_bandwidth_limit_up&quot;: 0,
&quot;radius_accounting_enabled&quot;: false,
&quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
&quot;radius_coa_enabled&quot;: null,
&quot;radius_failover_policy&quot;: null,
&quot;radius_load_balancing_policy&quot;: null,
&quot;radius_servers&quot;: [
{
&quot;host&quot;: &quot;192.0.1.200&quot;,
&quot;port&quot;: 1234
}
],
&quot;splash_page&quot;: &quot;None&quot;,
&quot;ssid_admin_accessible&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:396" name="[localhost] meraki: meraki_ssid : debug msg={{ delete_ssid }}" time="0.369120">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;auth_mode&quot;: &quot;open-with-radius&quot;,
            &quot;band_selection&quot;: &quot;Dual band operation&quot;,
            &quot;enabled&quot;: false,
            &quot;ip_assignment_mode&quot;: &quot;NAT mode&quot;,
            &quot;min_bitrate&quot;: 11,
            &quot;name&quot;: &quot;Unconfigured SSID 2&quot;,
            &quot;number&quot;: 1,
            &quot;per_client_bandwidth_limit_down&quot;: 0,
            &quot;per_client_bandwidth_limit_up&quot;: 0,
            &quot;radius_accounting_enabled&quot;: false,
            &quot;radius_attribute_for_group_policies&quot;: &quot;Filter-Id&quot;,
            &quot;radius_coa_enabled&quot;: null,
            &quot;radius_failover_policy&quot;: null,
            &quot;radius_load_balancing_policy&quot;: null,
            &quot;radius_servers&quot;: [
                {
                    &quot;host&quot;: &quot;192.0.1.200&quot;,
                    &quot;port&quot;: 1234
                }
            ],
            &quot;splash_page&quot;: &quot;None&quot;,
            &quot;ssid_admin_accessible&quot;: false
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:399" name="[localhost] meraki: meraki_ssid : assert that=[&quot;delete_ssid.data.name == 'Unconfigured SSID 2'&quot;]" time="0.343514">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:403" name="[localhost] meraki: meraki_ssid : Delete test network auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name=TestNetSSID" time="5.725096">
			<system-out>{
&quot;changed&quot;: true,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_ssid-18av5g81-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_ssid/tasks/main.yml:411" name="[localhost] meraki: meraki_ssid : debug msg={{delete_net}}" time="0.371865">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 204
    }
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
