<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="0" tests="45" time="106.15263986587524">
	<testsuite disabled="0" errors="0" failures="0" name="meraki_admin-fcrjfjxd" skipped="0" tests="45" time="106.15263986587524">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:7" name="[localhost] meraki: meraki_admin : Create new administrator in check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jane Doe, email={{email_prefix}}+janedoe@{{email_domain}}, org_access=read-only" time="2.726997">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;org_access&quot;: &quot;read-only&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:19" name="[localhost] meraki: meraki_admin : Create new admin check mode assertion that=['create_org_check is changed', 'create_org_check.data.name == &quot;Jane Doe&quot;']" time="0.719428">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:25" name="[localhost] meraki: meraki_admin : Create new administrator auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jane Doe, email={{email_prefix}}+janedoe@{{email_domain}}, org_access=read-only" time="3.658538">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778100&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;read-only&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:36" name="[localhost] meraki: meraki_admin : Create new admin assertion that=['create_orgaccess.changed == true', 'create_orgaccess.data.name == &quot;Jane Doe&quot;']" time="0.718686">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:42" name="[localhost] meraki: meraki_admin : Delete recently created administrator with check mode auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, email={{email_prefix}}+janedoe@{{email_domain}}" time="1.837839">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:52" name="[localhost] meraki: meraki_admin : assert that=['delete_one_check is changed']" time="0.748151">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:56" name="[localhost] meraki: meraki_admin : Delete recently created administrator auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, email={{email_prefix}}+janedoe@{{email_domain}}" time="3.249614">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: null,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:65" name="[localhost] meraki: meraki_admin : Create new administrator with org_id auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, name=Jane Doe, email={{email_prefix}}+janedoe@{{email_domain}}, orgAccess=read-only" time="2.767067">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778101&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;read-only&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201,
&quot;warnings&quot;: [
&quot;The value 133277 (type int) in a string field was converted to '133277' (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:76" name="[localhost] meraki: meraki_admin : Create new admin assertion that=['create_orgaccess_id.changed == true', 'create_orgaccess_id.data.name == &quot;Jane Doe&quot;']" time="0.700450">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:82" name="[localhost] meraki: meraki_admin : Create administrator with tags with check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=John Doe, email={{email_prefix}}+johndoe@{{email_domain}}, orgAccess=none, tags=[{'tag': 'production', 'access': 'read-only'}, {'tag': 'beta', 'access': 'full'}]" time="2.474001">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;email&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
&quot;name&quot;: &quot;John Doe&quot;,
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [
{
&quot;access&quot;: &quot;read-only&quot;,
&quot;tag&quot;: &quot;production&quot;
},
{
&quot;access&quot;: &quot;full&quot;,
&quot;tag&quot;: &quot;beta&quot;
}
]
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:99" name="[localhost] meraki: meraki_admin : assert that=['create_tags_check is changed', 'create_tags_check.data.name == &quot;John Doe&quot;', 'create_tags_check.data.tags | length == 2']" time="0.699139">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:105" name="[localhost] meraki: meraki_admin : Create administrator with tags auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=John Doe, email={{email_prefix}}+johndoe@{{email_domain}}, orgAccess=none, tags=[{'tag': 'production', 'access': 'read-only'}, {'tag': 'beta', 'access': 'full'}]" time="3.689185">
			<system-out>{
&quot;ansible_facts&quot;: {},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778102&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;John Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;tag&quot;: &quot;beta&quot;
},
{
&quot;access&quot;: &quot;read-only&quot;,
&quot;tag&quot;: &quot;production&quot;
}
],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:121" name="[localhost] meraki: meraki_admin : assert that=['create_tags.changed == true', 'create_tags.data.name == &quot;John Doe&quot;', 'create_tags.data.tags | length == 2']" time="0.728985">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:127" name="[localhost] meraki: meraki_admin : Create administrator with invalid tags auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jake Doe, email={{email_prefix}}+jakedoe@{{email_domain}}, orgAccess=none, tags=[{'tag': 'production', 'access': 'read-only'}, {'tag': 'alpha', 'access': 'invalid'}]" time="3.544921">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;body&quot;: {
&quot;errors&quot;: [
&quot;Invalid permission type: &quot;
]
},
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: &quot;HTTP error 400 - https://api.meraki.com/api/v0/organizations/133277/admins - ['Invalid permission type: ']&quot;,
&quot;response&quot;: &quot;HTTP Error 400: Bad Request&quot;,
&quot;status&quot;: 400
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:144" name="[localhost] meraki: meraki_admin : assert that=['&quot;400&quot; in create_tags_invalid.msg', '&quot;Invalid permission type&quot; in create_tags_invalid.msg']" time="0.700352">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:149" name="[localhost] meraki: meraki_admin : Create administrator with invalid tag permission auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jake Doe, email={{email_prefix}}+jakedoe@{{email_domain}}, orgAccess=none, tags=[{'tag': 'production', 'access': 'read-only'}, {'tag': 'beta', 'access': 'invalid'}]" time="3.759031">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;body&quot;: {
&quot;errors&quot;: [
&quot;Invalid permission type: &quot;
]
},
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: &quot;HTTP error 400 - https://api.meraki.com/api/v0/organizations/133277/admins - ['Invalid permission type: ']&quot;,
&quot;response&quot;: &quot;HTTP Error 400: Bad Request&quot;,
&quot;status&quot;: 400
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:166" name="[localhost] meraki: meraki_admin : assert that=['&quot;400&quot; in create_tags_invalid_permission.msg', '&quot;Invalid permission type&quot; in create_tags_invalid_permission.msg']" time="0.700871">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:171" name="[localhost] meraki: meraki_admin : Make sure TestNet and TestNet2 are created auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{item}}, type=switch" time="7.357114">
			<system-out>{
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: &quot;All items completed&quot;,
&quot;results&quot;: [
{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;ansible_loop_var&quot;: &quot;item&quot;,
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;id&quot;: &quot;N_624874448297684988&quot;,
&quot;name&quot;: &quot;TestNet&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;switch&quot;
],
&quot;tags&quot;: null,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;switch&quot;
},
&quot;failed&quot;: false,
&quot;invocation&quot;: {
&quot;module_args&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;disable_my_meraki&quot;: null,
&quot;enable_my_meraki&quot;: null,
&quot;enable_remote_status_page&quot;: null,
&quot;enable_vlans&quot;: null,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;net_id&quot;: null,
&quot;net_name&quot;: &quot;TestNet&quot;,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;state&quot;: &quot;present&quot;,
&quot;tags&quot;: null,
&quot;timeout&quot;: 30,
&quot;timezone&quot;: null,
&quot;type&quot;: [
&quot;switch&quot;
],
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
}
},
&quot;item&quot;: &quot;TestNet&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
},
{
&quot;ansible_loop_var&quot;: &quot;item&quot;,
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;id&quot;: &quot;N_624874448297684989&quot;,
&quot;name&quot;: &quot;TestNet2&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;switch&quot;
],
&quot;tags&quot;: null,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;switch&quot;
},
&quot;failed&quot;: false,
&quot;invocation&quot;: {
&quot;module_args&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;disable_my_meraki&quot;: null,
&quot;enable_my_meraki&quot;: null,
&quot;enable_remote_status_page&quot;: null,
&quot;enable_vlans&quot;: null,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;net_id&quot;: null,
&quot;net_name&quot;: &quot;TestNet2&quot;,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;state&quot;: &quot;present&quot;,
&quot;tags&quot;: null,
&quot;timeout&quot;: 30,
&quot;timezone&quot;: null,
&quot;type&quot;: [
&quot;switch&quot;
],
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
}
},
&quot;item&quot;: &quot;TestNet2&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:183" name="[localhost] meraki: meraki_admin : debug var=new_networks.results[0].data.id" time="0.667675">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;new_networks.results[0].data.id&quot;: &quot;N_624874448297684988&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:186" name="[localhost] meraki: meraki_admin : set_fact testnet_id=new_networks.results[0].data.id, testnet2_id=new_networks.results[1].data.id" time="0.096136">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;testnet2_id&quot;: &quot;new_networks.results[1].data.id&quot;,
&quot;testnet_id&quot;: &quot;new_networks.results[0].data.id&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:190" name="[localhost] meraki: meraki_admin : Create administrator with networks with check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'read-only'}, {'network': 'TestNet2', 'access': 'full'}]" time="5.702400">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;read-only&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
},
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684989&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:207" name="[localhost] meraki: meraki_admin : assert that=['create_network_check is changed', 'create_network_check.data.name == &quot;Jim Doe&quot;', 'create_network_check.data.networks | length == 2']" time="0.769961">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:213" name="[localhost] meraki: meraki_admin : Create administrator with networks auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'read-only'}, {'network': 'TestNet2', 'access': 'full'}]" time="7.822676">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778105&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684989&quot;
},
{
&quot;access&quot;: &quot;read-only&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:229" name="[localhost] meraki: meraki_admin : assert that=['create_network.changed == true', 'create_network.data.name == &quot;Jim Doe&quot;', 'create_network.data.networks | length == 2']" time="0.676751">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:235" name="[localhost] meraki: meraki_admin : Update administrator with check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'full'}]" time="4.918662">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: []
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:250" name="[localhost] meraki: meraki_admin : debug var=update_network_check" time="0.633004">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;update_network_check&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
            &quot;name&quot;: &quot;Jim Doe&quot;,
            &quot;networks&quot;: [
                {
                    &quot;access&quot;: &quot;full&quot;,
                    &quot;id&quot;: &quot;N_624874448297684988&quot;
                }
            ],
            &quot;org_access&quot;: &quot;none&quot;,
            &quot;tags&quot;: []
        },
        &quot;diff&quot;: {
            &quot;after&quot;: {
                &quot;networks&quot;: [
                    {
                        &quot;access&quot;: &quot;full&quot;,
                        &quot;id&quot;: &quot;N_624874448297684988&quot;
                    }
                ]
            },
            &quot;before&quot;: {
                &quot;account_status&quot;: &quot;unverified&quot;,
                &quot;has_api_key&quot;: false,
                &quot;id&quot;: &quot;624874448297778105&quot;,
                &quot;last_active&quot;: &quot;&quot;,
                &quot;networks&quot;: [
                    {
                        &quot;access&quot;: &quot;full&quot;,
                        &quot;id&quot;: &quot;N_624874448297684989&quot;
                    },
                    {
                        &quot;access&quot;: &quot;read-only&quot;,
                        &quot;id&quot;: &quot;N_624874448297684988&quot;
                    }
                ],
                &quot;two_factor_auth_enabled&quot;: false
            }
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:253" name="[localhost] meraki: meraki_admin : assert that=['update_network_check is changed', 'update_network_check.data.networks.0.access == &quot;full&quot;', 'update_network_check.data.networks | length == 1']" time="0.649158">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:259" name="[localhost] meraki: meraki_admin : Update administrator auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'full'}]" time="5.722357">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778105&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:273" name="[localhost] meraki: meraki_admin : assert that=['update_network.changed == true', 'update_network.data.networks.0.access == &quot;full&quot;', 'update_network.data.networks | length == 1']" time="0.639766">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:279" name="[localhost] meraki: meraki_admin : Update administrator for idempotency check with check mode auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'full'}]" time="4.437432">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: []
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:294" name="[localhost] meraki: meraki_admin : debug var=update_network_idempotent_check" time="0.633321">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;update_network_idempotent_check&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
            &quot;name&quot;: &quot;Jim Doe&quot;,
            &quot;networks&quot;: [
                {
                    &quot;access&quot;: &quot;full&quot;,
                    &quot;id&quot;: &quot;N_624874448297684988&quot;
                }
            ],
            &quot;org_access&quot;: &quot;none&quot;,
            &quot;tags&quot;: []
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:297" name="[localhost] meraki: meraki_admin : assert that=['update_network_idempotent_check is not changed']" time="0.636379">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:301" name="[localhost] meraki: meraki_admin : Update administrator for idempotency auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=Jim Doe, email={{email_prefix}}+jimdoe@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNet', 'access': 'full'}]" time="4.597889">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778105&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:315" name="[localhost] meraki: meraki_admin : assert that=['update_network_idempotent.changed == false', 'update_network_idempotent.data is defined']" time="0.650846">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:320" name="[localhost] meraki: meraki_admin : Create administrator with invalid network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, name=John Doe, email={{email_prefix}}+John@{{email_domain}}, orgAccess=none, networks=[{'network': 'TestNetFake', 'access': 'read-only'}]" time="4.234906">
			<system-out>{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;No network found with the name TestNetFake&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:335" name="[localhost] meraki: meraki_admin : assert that=['&quot;No network found with the name&quot; in create_network_invalid.msg']" time="0.632837">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:340" name="[localhost] meraki: meraki_admin : Query all administrators auth_key={{auth_key}}, state=query, org_name={{test_org_name}}" time="2.662009">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;account_status&quot;: &quot;ok&quot;,
&quot;email&quot;: &quot;kbreit@insight.com&quot;,
&quot;has_api_key&quot;: true,
&quot;id&quot;: &quot;315782&quot;,
&quot;last_active&quot;: 1592484465,
&quot;name&quot;: &quot;Kevin Breit&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;full&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
{
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778101&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;read-only&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
{
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778105&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jim Doe&quot;,
&quot;networks&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;id&quot;: &quot;N_624874448297684988&quot;
}
],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
{
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778102&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;John Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;none&quot;,
&quot;tags&quot;: [
{
&quot;access&quot;: &quot;full&quot;,
&quot;tag&quot;: &quot;beta&quot;
},
{
&quot;access&quot;: &quot;read-only&quot;,
&quot;tag&quot;: &quot;production&quot;
}
],
&quot;two_factor_auth_enabled&quot;: false
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:348" name="[localhost] meraki: meraki_admin : debug var=query_all" time="0.646122">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;query_all&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: [
            {
                &quot;account_status&quot;: &quot;ok&quot;,
                &quot;email&quot;: &quot;kbreit@insight.com&quot;,
                &quot;has_api_key&quot;: true,
                &quot;id&quot;: &quot;315782&quot;,
                &quot;last_active&quot;: 1592484465,
                &quot;name&quot;: &quot;Kevin Breit&quot;,
                &quot;networks&quot;: [],
                &quot;org_access&quot;: &quot;full&quot;,
                &quot;tags&quot;: [],
                &quot;two_factor_auth_enabled&quot;: false
            },
            {
                &quot;account_status&quot;: &quot;unverified&quot;,
                &quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
                &quot;has_api_key&quot;: false,
                &quot;id&quot;: &quot;624874448297778101&quot;,
                &quot;last_active&quot;: &quot;&quot;,
                &quot;name&quot;: &quot;Jane Doe&quot;,
                &quot;networks&quot;: [],
                &quot;org_access&quot;: &quot;read-only&quot;,
                &quot;tags&quot;: [],
                &quot;two_factor_auth_enabled&quot;: false
            },
            {
                &quot;account_status&quot;: &quot;unverified&quot;,
                &quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
                &quot;has_api_key&quot;: false,
                &quot;id&quot;: &quot;624874448297778105&quot;,
                &quot;last_active&quot;: &quot;&quot;,
                &quot;name&quot;: &quot;Jim Doe&quot;,
                &quot;networks&quot;: [
                    {
                        &quot;access&quot;: &quot;full&quot;,
                        &quot;id&quot;: &quot;N_624874448297684988&quot;
                    }
                ],
                &quot;org_access&quot;: &quot;none&quot;,
                &quot;tags&quot;: [],
                &quot;two_factor_auth_enabled&quot;: false
            },
            {
                &quot;account_status&quot;: &quot;unverified&quot;,
                &quot;email&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
                &quot;has_api_key&quot;: false,
                &quot;id&quot;: &quot;624874448297778102&quot;,
                &quot;last_active&quot;: &quot;&quot;,
                &quot;name&quot;: &quot;John Doe&quot;,
                &quot;networks&quot;: [],
                &quot;org_access&quot;: &quot;none&quot;,
                &quot;tags&quot;: [
                    {
                        &quot;access&quot;: &quot;full&quot;,
                        &quot;tag&quot;: &quot;beta&quot;
                    },
                    {
                        &quot;access&quot;: &quot;read-only&quot;,
                        &quot;tag&quot;: &quot;production&quot;
                    }
                ],
                &quot;two_factor_auth_enabled&quot;: false
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:351" name="[localhost] meraki: meraki_admin : assert that=['query_all.data | length == 4', 'query_all.changed == False']" time="0.613761">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:356" name="[localhost] meraki: meraki_admin : Query admin by name auth_key={{auth_key}}, state=query, org_name={{test_org_name}}, name=Jane Doe" time="2.637755">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778101&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;read-only&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:365" name="[localhost] meraki: meraki_admin : Query admin by email auth_key={{auth_key}}, state=query, org_name={{test_org_name}}, email={{email_prefix}}+janedoe@{{email_domain}}" time="2.627028">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;account_status&quot;: &quot;unverified&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;has_api_key&quot;: false,
&quot;id&quot;: &quot;624874448297778101&quot;,
&quot;last_active&quot;: &quot;&quot;,
&quot;name&quot;: &quot;Jane Doe&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;read-only&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:374" name="[localhost] meraki: meraki_admin : assert that=['query_name.data.name == &quot;Jane Doe&quot;', 'query_email.data.email == &quot;{{email_prefix}}+janedoe@{{email_domain}}&quot;']" time="0.636129">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:383" name="[localhost] meraki: meraki_admin : Delete administrators auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, email={{item}}" time="9.089737">
			<system-out>{
&quot;changed&quot;: true,
&quot;msg&quot;: &quot;All items completed&quot;,
&quot;results&quot;: [
{
&quot;ansible_loop_var&quot;: &quot;item&quot;,
&quot;changed&quot;: true,
&quot;data&quot;: null,
&quot;failed&quot;: false,
&quot;invocation&quot;: {
&quot;module_args&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;email&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;name&quot;: null,
&quot;networks&quot;: null,
&quot;org_access&quot;: null,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;state&quot;: &quot;absent&quot;,
&quot;tags&quot;: null,
&quot;timeout&quot;: 30,
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
}
},
&quot;item&quot;: &quot;meraki+janedoe@kevinbreit.net&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
},
{
&quot;ansible_loop_var&quot;: &quot;item&quot;,
&quot;changed&quot;: true,
&quot;data&quot;: null,
&quot;failed&quot;: false,
&quot;invocation&quot;: {
&quot;module_args&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;email&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;name&quot;: null,
&quot;networks&quot;: null,
&quot;org_access&quot;: null,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;state&quot;: &quot;absent&quot;,
&quot;tags&quot;: null,
&quot;timeout&quot;: 30,
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
}
},
&quot;item&quot;: &quot;meraki+johndoe@kevinbreit.net&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
},
{
&quot;ansible_loop_var&quot;: &quot;item&quot;,
&quot;changed&quot;: true,
&quot;data&quot;: null,
&quot;failed&quot;: false,
&quot;invocation&quot;: {
&quot;module_args&quot;: {
&quot;auth_key&quot;: &quot;VALUE_SPECIFIED_IN_NO_LOG_PARAMETER&quot;,
&quot;email&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;follow_redirects&quot;: &quot;all&quot;,
&quot;host&quot;: &quot;api.meraki.com&quot;,
&quot;internal_error_retry_time&quot;: 60,
&quot;name&quot;: null,
&quot;networks&quot;: null,
&quot;org_access&quot;: null,
&quot;org_id&quot;: null,
&quot;org_name&quot;: &quot;kbreit@insight.com&quot;,
&quot;output_format&quot;: &quot;snakecase&quot;,
&quot;output_level&quot;: &quot;normal&quot;,
&quot;protocol&quot;: &quot;https&quot;,
&quot;rate_limit_retry_time&quot;: 165,
&quot;state&quot;: &quot;absent&quot;,
&quot;tags&quot;: null,
&quot;timeout&quot;: 30,
&quot;use_https&quot;: true,
&quot;use_proxy&quot;: false,
&quot;validate_certs&quot;: true
}
},
&quot;item&quot;: &quot;meraki+jimdoe@kevinbreit.net&quot;,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:397" name="[localhost] meraki: meraki_admin : Query all administrators auth_key={{auth_key}}, state=query, org_name={{test_org_name}}" time="2.144208">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;account_status&quot;: &quot;ok&quot;,
&quot;email&quot;: &quot;kbreit@insight.com&quot;,
&quot;has_api_key&quot;: true,
&quot;id&quot;: &quot;315782&quot;,
&quot;last_active&quot;: 1592484465,
&quot;name&quot;: &quot;Kevin Breit&quot;,
&quot;networks&quot;: [],
&quot;org_access&quot;: &quot;full&quot;,
&quot;tags&quot;: [],
&quot;two_factor_auth_enabled&quot;: false
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_admin-1t18enet-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_admin/tasks/main.yml:405" name="[localhost] meraki: meraki_admin : assert that=['query_all_deleted.data | length == 1']" time="0.193366">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
