<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="2" tests="19" time="29.53218722343445">
	<testsuite disabled="0" errors="0" failures="2" name="meraki_mx_site_to_site_firewall-kp6zgd3k" skipped="1" tests="19" time="29.53218722343445">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:7" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Test an API key is provided msg=Please define an API key" time="0.539711">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:12" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Create network auth_key={{ auth_key }}, org_name={{test_org_name}}, net_name=TestNetAppliance, state=present, type=appliance" time="4.162311">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;id&quot;: &quot;N_624874448297683211&quot;,
&quot;name&quot;: &quot;TestNetAppliance&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: null,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;appliance&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:21" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Query firewall rules auth_key={{ auth_key }}, org_name={{test_org_name}}, state=query" time="2.834791">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:29" name="[localhost] meraki: meraki_mx_site_to_site_firewall : debug var=query" time="0.379372">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;query&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: true
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:36" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Set one firewall rule with check mode auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, rules=[{'comment': 'Deny to documentation address', 'src_port': 'Any', 'src_cidr': 'Any', 'dest_port': '80,443', 'dest_cidr': '192.0.1.1/32', 'protocol': 'tcp', 'policy': 'deny'}]" time="2.589243">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Deny to documentation address&quot;,
&quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
&quot;dest_port&quot;: &quot;80,443&quot;,
&quot;policy&quot;: &quot;deny&quot;,
&quot;protocol&quot;: &quot;tcp&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
},
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:53" name="[localhost] meraki: meraki_mx_site_to_site_firewall : debug var=create_one_check" time="0.609386">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;create_one_check&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Deny to documentation address&quot;,
                &quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
                &quot;dest_port&quot;: &quot;80,443&quot;,
                &quot;policy&quot;: &quot;deny&quot;,
                &quot;protocol&quot;: &quot;tcp&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: false
            },
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: true
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:56" name="[localhost] meraki: meraki_mx_site_to_site_firewall : assert that=['create_one_check.data|length == 2', &quot;create_one_check.data.0.dest_cidr == '192.0.1.1/32'&quot;, &quot;create_one_check.data.0.protocol == 'tcp'&quot;, &quot;create_one_check.data.0.policy == 'deny'&quot;, 'create_one_check is changed', 'create_one_check.data is defined']" time="0.531611">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:65" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Set one firewall rule auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, rules=[{'comment': 'Deny to documentation address', 'src_port': 'Any', 'src_cidr': 'Any', 'dest_port': '80,443', 'dest_cidr': '192.0.1.1/32', 'protocol': 'tcp', 'policy': 'deny'}]" time="3.812124">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Deny to documentation address&quot;,
&quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
&quot;dest_port&quot;: &quot;80,443&quot;,
&quot;policy&quot;: &quot;deny&quot;,
&quot;protocol&quot;: &quot;tcp&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
},
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:81" name="[localhost] meraki: meraki_mx_site_to_site_firewall : debug var=create_one" time="0.481958">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;create_one&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Deny to documentation address&quot;,
                &quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
                &quot;dest_port&quot;: &quot;80,443&quot;,
                &quot;policy&quot;: &quot;deny&quot;,
                &quot;protocol&quot;: &quot;tcp&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: false
            },
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: true
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:84" name="[localhost] meraki: meraki_mx_site_to_site_firewall : assert that=['create_one.data|length == 2', &quot;create_one.data.0.dest_cidr == '192.0.1.1/32'&quot;, &quot;create_one.data.0.protocol == 'tcp'&quot;, &quot;create_one.data.0.policy == 'deny'&quot;, 'create_one.changed == True', 'create_one.data is defined']" time="0.402472">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:93" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Check for idempotency auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, rules=[{'comment': 'Deny to documentation address', 'src_port': 'Any', 'src_cidr': 'Any', 'dest_port': '80,443', 'dest_cidr': '192.0.1.1/32', 'protocol': 'tcp', 'policy': 'deny'}]" time="3.013133">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Deny to documentation address&quot;,
&quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
&quot;dest_port&quot;: &quot;80,443&quot;,
&quot;policy&quot;: &quot;deny&quot;,
&quot;protocol&quot;: &quot;tcp&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
},
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:109" name="[localhost] meraki: meraki_mx_site_to_site_firewall : debug msg={{create_one_idempotent}}" time="0.365684">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Deny to documentation address&quot;,
                &quot;dest_cidr&quot;: &quot;192.0.1.1/32&quot;,
                &quot;dest_port&quot;: &quot;80,443&quot;,
                &quot;policy&quot;: &quot;deny&quot;,
                &quot;protocol&quot;: &quot;tcp&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: false
            },
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: true
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:112" name="[localhost] meraki: meraki_mx_site_to_site_firewall : assert that=['create_one_idempotent.changed == False', 'create_one_idempotent.data is defined']" time="0.375345">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:117" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Update one existing rule auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, rules=[{'comment': 'Deny all documentation addresses', 'src_port': 'Any', 'src_cidr': 'Any', 'dest_port': '80,443', 'dest_cidr': '192.0.1.1/32,192.0.1.2/32', 'protocol': 'tcp', 'policy': 'deny'}]" time="3.410822">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Deny all documentation addresses&quot;,
&quot;dest_cidr&quot;: &quot;192.0.1.1/32,192.0.1.2/32&quot;,
&quot;dest_port&quot;: &quot;80,443&quot;,
&quot;policy&quot;: &quot;deny&quot;,
&quot;protocol&quot;: &quot;tcp&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: false
},
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:133" name="[localhost] meraki: meraki_mx_site_to_site_firewall : debug msg={{update_one}}" time="0.401130">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: [
            {
                &quot;comment&quot;: &quot;Deny all documentation addresses&quot;,
                &quot;dest_cidr&quot;: &quot;192.0.1.1/32,192.0.1.2/32&quot;,
                &quot;dest_port&quot;: &quot;80,443&quot;,
                &quot;policy&quot;: &quot;deny&quot;,
                &quot;protocol&quot;: &quot;tcp&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: false
            },
            {
                &quot;comment&quot;: &quot;Default rule&quot;,
                &quot;dest_cidr&quot;: &quot;Any&quot;,
                &quot;dest_port&quot;: &quot;Any&quot;,
                &quot;policy&quot;: &quot;allow&quot;,
                &quot;protocol&quot;: &quot;Any&quot;,
                &quot;src_cidr&quot;: &quot;Any&quot;,
                &quot;src_port&quot;: &quot;Any&quot;,
                &quot;syslog_enabled&quot;: true
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:136" name="[localhost] meraki: meraki_mx_site_to_site_firewall : assert that=['update_one.changed == True', 'update_one.data is defined']" time="0.374580">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:141" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Create syslog in network auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, servers=[{'host': '192.0.2.10', 'port': 514, 'roles': ['Appliance event log', 'Flows']}]" time="0.832829">
			<failure message="net_name or net_id is required for present or absent states" type="failure">{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;net_name or net_id is required for present or absent states&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</failure>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:291" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Delete all firewall rules auth_key={{ auth_key }}, org_name={{test_org_name}}, state=present, rules=[]" time="3.510109">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: [
{
&quot;comment&quot;: &quot;Default rule&quot;,
&quot;dest_cidr&quot;: &quot;Any&quot;,
&quot;dest_port&quot;: &quot;Any&quot;,
&quot;policy&quot;: &quot;allow&quot;,
&quot;protocol&quot;: &quot;Any&quot;,
&quot;src_cidr&quot;: &quot;Any&quot;,
&quot;src_port&quot;: &quot;Any&quot;,
&quot;syslog_enabled&quot;: true
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_mx_site_to_site_firewall-z_lmfb0v-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_mx_site_to_site_firewall/tasks/main.yml:300" name="[localhost] meraki: meraki_mx_site_to_site_firewall : Delete network auth_key={{ auth_key }}, org_name={{test_org_name}}, state=absent" time="0.905577">
			<failure message="net_name or net_id is required for present or absent states" type="failure">{
&quot;changed&quot;: false,
&quot;msg&quot;: &quot;net_name or net_id is required for present or absent states&quot;,
&quot;response&quot;: null,
&quot;status&quot;: null
}</failure>
		</testcase>
	</testsuite>
</testsuites>
