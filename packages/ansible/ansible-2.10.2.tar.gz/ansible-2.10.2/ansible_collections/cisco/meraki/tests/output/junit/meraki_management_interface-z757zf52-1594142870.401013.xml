<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="1" tests="6" time="9.805418729782104">
	<testsuite disabled="0" errors="0" failures="1" name="meraki_management_interface-z757zf52" skipped="1" tests="6" time="9.805418729782104">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:7" name="[localhost] meraki: meraki_management_interface : Test an API key is provided msg=Please define an API key" time="0.697590">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:12" name="[localhost] meraki: meraki_management_interface : set_fact net_name=TestNet - Appliance" time="0.094363">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;net_name&quot;: &quot;TestNet - Appliance&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:15" name="[localhost] meraki: meraki_management_interface : Create test network auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_name={{net_name}}, type=appliance" time="3.701461">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297679182&quot;,
&quot;name&quot;: &quot;TestNet - Appliance&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: [],
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;url&quot;: &quot;https://n110.meraki.com/TestNet-Applianc/n/9TIYVdUb/manage/usage/list&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200,
&quot;warnings&quot;: [
&quot;The value 133277 (type int) in a string field was converted to '133277' (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:25" name="[localhost] meraki: meraki_management_interface : set_fact net_id={{net.data.id}}" time="0.652819">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;net_id&quot;: &quot;N_624874448297679182&quot;
},
&quot;changed&quot;: false
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:28" name="[localhost] meraki: meraki_management_interface : Set WAN1 as DHCP in check mode auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_id={{net_id}}, serial={{serial}}, wan1={'wan_enabled': 'enabled', 'using_static_ip': False, 'vlan': 1}" time="2.309278">
			<failure message="{'wan1': {'wanEnabled': 'disabled', 'usingStaticIp': False, 'vlan': 1}, 'wan2': {'wanEnabled': 'enabled', 'usingStaticIp': False, 'vlan': None}, 'ddnsHostnames': {'activeDdnsHostname': 'testnet-appliance-vmrdqtzwwk.dynamic-m.com', 'ddnsHostnameWan1': 'testnet-appliance-vmrdqtzwwk-1.dynamic-m.com', 'ddnsHostnameWan2': 'testnet-appliance-vmrdqtzwwk-2.dynamic-m.com'}}" type="failure">{
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: {
&quot;ddnsHostnames&quot;: {
&quot;activeDdnsHostname&quot;: &quot;testnet-appliance-vmrdqtzwwk.dynamic-m.com&quot;,
&quot;ddnsHostnameWan1&quot;: &quot;testnet-appliance-vmrdqtzwwk-1.dynamic-m.com&quot;,
&quot;ddnsHostnameWan2&quot;: &quot;testnet-appliance-vmrdqtzwwk-2.dynamic-m.com&quot;
},
&quot;wan1&quot;: {
&quot;usingStaticIp&quot;: false,
&quot;vlan&quot;: 1,
&quot;wanEnabled&quot;: &quot;disabled&quot;
},
&quot;wan2&quot;: {
&quot;usingStaticIp&quot;: false,
&quot;vlan&quot;: null,
&quot;wanEnabled&quot;: &quot;enabled&quot;
}
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200,
&quot;warnings&quot;: [
&quot;The value 133277 (type int) in a string field was converted to '133277' (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</failure>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_management_interface-af79bzab-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_management_interface/tasks/main.yml:172" name="[localhost] meraki: meraki_management_interface : Reset settings for all interfaces auth_key={{auth_key}}, state=present, org_id={{test_org_id}}, net_id={{net_id}}, serial={{serial}}, wan1={'wan_enabled': 'disabled', 'using_static_ip': False}, wan2={'wan_enabled': 'enabled', 'using_static_ip': False}" time="2.349907">
			<system-out>{
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: {
&quot;ddnsHostnames&quot;: {
&quot;activeDdnsHostname&quot;: &quot;testnet-appliance-vmrdqtzwwk.dynamic-m.com&quot;,
&quot;ddnsHostnameWan1&quot;: &quot;testnet-appliance-vmrdqtzwwk-1.dynamic-m.com&quot;,
&quot;ddnsHostnameWan2&quot;: &quot;testnet-appliance-vmrdqtzwwk-2.dynamic-m.com&quot;
},
&quot;wan1&quot;: {
&quot;usingStaticIp&quot;: false,
&quot;vlan&quot;: 1,
&quot;wanEnabled&quot;: &quot;disabled&quot;
},
&quot;wan2&quot;: {
&quot;usingStaticIp&quot;: false,
&quot;vlan&quot;: null,
&quot;wanEnabled&quot;: &quot;enabled&quot;
}
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200,
&quot;warnings&quot;: [
&quot;The value 133277 (type int) in a string field was converted to '133277' (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.&quot;
]
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
