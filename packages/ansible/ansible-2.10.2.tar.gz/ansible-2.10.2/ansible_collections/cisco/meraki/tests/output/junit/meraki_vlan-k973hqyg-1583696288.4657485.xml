<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="1" tests="22" time="51.63596749305725">
	<testsuite disabled="0" errors="0" failures="1" name="meraki_vlan-k973hqyg" skipped="1" tests="22" time="51.63596749305725">
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:7" name="[localhost] meraki: meraki_vlan : Test an API key is provided msg=Please define an API key" time="0.417860">
			<skipped message="Conditional result was False" type="skipped"/>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:12" name="[localhost] meraki: meraki_vlan : Test play without auth_key state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, type=appliance" time="0.870632">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: false,
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;msg&quot;: &quot;missing required arguments: auth_key&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:22" name="[localhost] meraki: meraki_vlan : assert that=['&quot;missing required arguments&quot; in no_key.msg']" time="0.366710">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:26" name="[localhost] meraki: meraki_vlan : Create test network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, type=appliance" time="4.734476">
			<system-out>{
&quot;ansible_facts&quot;: {
&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
},
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;disable_my_meraki_com&quot;: false,
&quot;disable_remote_status_page&quot;: true,
&quot;enrollment_string&quot;: null,
&quot;id&quot;: &quot;N_624874448297683566&quot;,
&quot;name&quot;: &quot;Home - Appliance&quot;,
&quot;organization_id&quot;: &quot;133277&quot;,
&quot;product_types&quot;: [
&quot;appliance&quot;
],
&quot;tags&quot;: &quot;&quot;,
&quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,
&quot;type&quot;: &quot;appliance&quot;,
&quot;url&quot;: &quot;https://n110.meraki.com/Home-Appliance/n/wHKWebUb/manage/usage/list&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Distribution Ubuntu 18.04 on host localhost should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information&quot;,
&quot;version&quot;: &quot;2.12&quot;
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:35" name="[localhost] meraki: meraki_vlan : Enable VLANs on network auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, enable_vlans=True" time="4.804982">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;enabled&quot;: true,
&quot;network_id&quot;: &quot;N_624874448297683566&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:65" name="[localhost] meraki: meraki_vlan : Create VLAN auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2, name=TestVLAN, subnet=192.168.250.0/24, appliance_ip=192.168.250.1" time="4.721640">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;applianceIp&quot;: &quot;192.168.250.1&quot;,
&quot;dhcpBootOptionsEnabled&quot;: false,
&quot;dhcpHandling&quot;: &quot;Run a DHCP server&quot;,
&quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,
&quot;dhcpOptions&quot;: [],
&quot;dnsNameservers&quot;: &quot;upstream_dns&quot;,
&quot;fixedIpAssignments&quot;: {},
&quot;id&quot;: 2,
&quot;name&quot;: &quot;TestVLAN&quot;,
&quot;networkId&quot;: &quot;N_624874448297683566&quot;,
&quot;reservedIpRanges&quot;: [],
&quot;subnet&quot;: &quot;192.168.250.0/24&quot;
},
&quot;deprecations&quot;: [
{
&quot;msg&quot;: &quot;Update your playbooks to support snake_case format instead of camelCase format.&quot;,
&quot;version&quot;: 2.13
}
],
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 201
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:80" name="[localhost] meraki: meraki_vlan : debug msg={{create_vlan}}" time="0.372826">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;applianceIp&quot;: &quot;192.168.250.1&quot;,
            &quot;dhcpBootOptionsEnabled&quot;: false,
            &quot;dhcpHandling&quot;: &quot;Run a DHCP server&quot;,
            &quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,
            &quot;dhcpOptions&quot;: [],
            &quot;dnsNameservers&quot;: &quot;upstream_dns&quot;,
            &quot;fixedIpAssignments&quot;: {},
            &quot;id&quot;: 2,
            &quot;name&quot;: &quot;TestVLAN&quot;,
            &quot;networkId&quot;: &quot;N_624874448297683566&quot;,
            &quot;reservedIpRanges&quot;: [],
            &quot;subnet&quot;: &quot;192.168.250.0/24&quot;
        },
        &quot;deprecations&quot;: [
            {
                &quot;msg&quot;: &quot;Update your playbooks to support snake_case format instead of camelCase format.&quot;,
                &quot;version&quot;: 2.13
            }
        ],
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 201
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:83" name="[localhost] meraki: meraki_vlan : assert that=['create_vlan.data.id == 2', 'create_vlan.changed == True', 'create_vlan.data.networkId is defined']" time="0.343619">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:337" name="[localhost] meraki: meraki_vlan : Enable DHCP Relay on VLAN auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2, name=TestVLAN, subnet=192.168.250.0/24, appliance_ip=192.168.250.2, dhcp_handling=relay, dhcp_relay_server_ips=['192.168.100.1']" time="6.206567">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
&quot;dhcp_handling&quot;: &quot;Relay DHCP to another server&quot;,
&quot;dhcp_relay_server_ips&quot;: [
&quot;192.168.100.1&quot;
],
&quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
&quot;fixed_ip_assignments&quot;: {},
&quot;id&quot;: 2,
&quot;name&quot;: &quot;TestVLAN&quot;,
&quot;network_id&quot;: &quot;N_624874448297683566&quot;,
&quot;reserved_ip_ranges&quot;: [],
&quot;subnet&quot;: &quot;192.168.250.0/24&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:353" name="[localhost] meraki: meraki_vlan : debug var=enable_relay" time="0.361839">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;enable_relay&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
            &quot;dhcp_handling&quot;: &quot;Relay DHCP to another server&quot;,
            &quot;dhcp_relay_server_ips&quot;: [
                &quot;192.168.100.1&quot;
            ],
            &quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
            &quot;fixed_ip_assignments&quot;: {},
            &quot;id&quot;: 2,
            &quot;name&quot;: &quot;TestVLAN&quot;,
            &quot;network_id&quot;: &quot;N_624874448297683566&quot;,
            &quot;reserved_ip_ranges&quot;: [],
            &quot;subnet&quot;: &quot;192.168.250.0/24&quot;
        },
        &quot;diff&quot;: {
            &quot;after&quot;: {
                &quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
                &quot;dhcp_handling&quot;: &quot;Relay DHCP to another server&quot;,
                &quot;dhcp_relay_server_ips&quot;: [
                    &quot;192.168.100.1&quot;
                ]
            },
            &quot;before&quot;: {
                &quot;appliance_ip&quot;: &quot;192.168.250.1&quot;,
                &quot;dhcp_boot_options_enabled&quot;: false,
                &quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
                &quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
                &quot;dhcp_options&quot;: []
            }
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:356" name="[localhost] meraki: meraki_vlan : assert that=['enable_relay is changed', &quot;enable_relay.data.dhcp_handling == 'Relay DHCP to another server'&quot;, &quot;enable_relay.data.dhcp_relay_server_ips[0] == '192.168.100.1'&quot;]" time="0.369349">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:362" name="[localhost] meraki: meraki_vlan : Enable DHCP on VLAN auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2, name=TestVLAN, subnet=192.168.250.0/24, appliance_ip=192.168.250.2, dhcp_handling=server" time="5.532185">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {
&quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
&quot;dhcp_boot_options_enabled&quot;: false,
&quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
&quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
&quot;dhcp_options&quot;: [],
&quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
&quot;fixed_ip_assignments&quot;: {},
&quot;id&quot;: 2,
&quot;name&quot;: &quot;TestVLAN&quot;,
&quot;network_id&quot;: &quot;N_624874448297683566&quot;,
&quot;reserved_ip_ranges&quot;: [],
&quot;subnet&quot;: &quot;192.168.250.0/24&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:376" name="[localhost] meraki: meraki_vlan : debug var=enable_dhcp" time="0.537823">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;enable_dhcp&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: {
            &quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
            &quot;dhcp_boot_options_enabled&quot;: false,
            &quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
            &quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
            &quot;dhcp_options&quot;: [],
            &quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
            &quot;fixed_ip_assignments&quot;: {},
            &quot;id&quot;: 2,
            &quot;name&quot;: &quot;TestVLAN&quot;,
            &quot;network_id&quot;: &quot;N_624874448297683566&quot;,
            &quot;reserved_ip_ranges&quot;: [],
            &quot;subnet&quot;: &quot;192.168.250.0/24&quot;
        },
        &quot;diff&quot;: {
            &quot;after&quot;: {
                &quot;dhcp_boot_options_enabled&quot;: false,
                &quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
                &quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
                &quot;dhcp_options&quot;: []
            },
            &quot;before&quot;: {
                &quot;dhcp_handling&quot;: &quot;Relay DHCP to another server&quot;,
                &quot;dhcp_relay_server_ips&quot;: [
                    &quot;192.168.100.1&quot;
                ]
            }
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:379" name="[localhost] meraki: meraki_vlan : assert that=['enable_dhcp is changed', &quot;enable_dhcp.data.dhcp_handling == 'Run a DHCP server'&quot;]" time="0.392379">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:384" name="[localhost] meraki: meraki_vlan : Enable DHCP on VLAN auth_key={{auth_key}}, state=present, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2, name=TestVLAN, subnet=192.168.250.0/24, appliance_ip=192.168.250.2, dhcp_handling=server" time="5.053239">
			<system-out>{
&quot;changed&quot;: false,
&quot;data&quot;: {
&quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
&quot;dhcp_boot_options_enabled&quot;: false,
&quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
&quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
&quot;dhcp_options&quot;: [],
&quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
&quot;fixed_ip_assignments&quot;: {},
&quot;id&quot;: 2,
&quot;name&quot;: &quot;TestVLAN&quot;,
&quot;network_id&quot;: &quot;N_624874448297683566&quot;,
&quot;reserved_ip_ranges&quot;: [],
&quot;subnet&quot;: &quot;192.168.250.0/24&quot;
},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:398" name="[localhost] meraki: meraki_vlan : debug var=enable_dhcp" time="0.423471">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;enable_dhcp&quot;: {
        &quot;changed&quot;: false,
        &quot;data&quot;: {
            &quot;appliance_ip&quot;: &quot;192.168.250.2&quot;,
            &quot;dhcp_boot_options_enabled&quot;: false,
            &quot;dhcp_handling&quot;: &quot;Run a DHCP server&quot;,
            &quot;dhcp_lease_time&quot;: &quot;1 day&quot;,
            &quot;dhcp_options&quot;: [],
            &quot;dns_nameservers&quot;: &quot;upstream_dns&quot;,
            &quot;fixed_ip_assignments&quot;: {},
            &quot;id&quot;: 2,
            &quot;name&quot;: &quot;TestVLAN&quot;,
            &quot;network_id&quot;: &quot;N_624874448297683566&quot;,
            &quot;reserved_ip_ranges&quot;: [],
            &quot;subnet&quot;: &quot;192.168.250.0/24&quot;
        },
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 200
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:401" name="[localhost] meraki: meraki_vlan : assert that=['enable_dhcp is changed', &quot;enable_dhcp.data.dhcp_handling == 'Run a DHCP server'&quot;]" time="0.355859">
			<failure message="Assertion failed" type="failure">{
    &quot;assertion&quot;: &quot;enable_dhcp is changed&quot;,
    &quot;changed&quot;: false,
    &quot;evaluated_to&quot;: false,
    &quot;msg&quot;: &quot;Assertion failed&quot;
}</failure>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:447" name="[localhost] meraki: meraki_vlan : Delete VLAN with check mode auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2" time="4.256397">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: {},
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 200
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:458" name="[localhost] meraki: meraki_vlan : assert that=delete_vlan_check is changed" time="0.334361">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: &quot;All assertions passed&quot;
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:462" name="[localhost] meraki: meraki_vlan : Delete VLAN auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}}, vlan_id=2" time="5.031989">
			<system-out>{
&quot;changed&quot;: true,
&quot;data&quot;: null,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:472" name="[localhost] meraki: meraki_vlan : debug msg={{delete_vlan}}" time="0.374322">
			<system-out>{
    &quot;changed&quot;: false,
    &quot;msg&quot;: {
        &quot;changed&quot;: true,
        &quot;data&quot;: null,
        &quot;failed&quot;: false,
        &quot;response&quot;: &quot;OK (unknown bytes)&quot;,
        &quot;status&quot;: 204
    }
}</system-out>
		</testcase>
		<testcase classname="/root/ansible/ansible_collections/cisco/meraki/tests/output/.tmp/integration/meraki_vlan-13161pmt-ÅÑŚÌβŁÈ/tests/integration/targets/meraki_vlan/tasks/main.yml:475" name="[localhost] meraki: meraki_vlan : Delete test network auth_key={{auth_key}}, state=absent, org_name={{test_org_name}}, net_name={{test_net_name}}" time="5.773443">
			<system-out>{
&quot;changed&quot;: true,
&quot;response&quot;: &quot;OK (unknown bytes)&quot;,
&quot;status&quot;: 204
}</system-out>
		</testcase>
	</testsuite>
</testsuites>
