# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _OrglabExt
else:
    import _OrglabExt

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _OrglabExt.delete_SwigPyIterator

    def value(self):
        return _OrglabExt.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _OrglabExt.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _OrglabExt.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _OrglabExt.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _OrglabExt.SwigPyIterator_equal(self, x)

    def copy(self):
        return _OrglabExt.SwigPyIterator_copy(self)

    def next(self):
        return _OrglabExt.SwigPyIterator_next(self)

    def __next__(self):
        return _OrglabExt.SwigPyIterator___next__(self)

    def previous(self):
        return _OrglabExt.SwigPyIterator_previous(self)

    def advance(self, n):
        return _OrglabExt.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _OrglabExt.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _OrglabExt.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _OrglabExt.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _OrglabExt.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _OrglabExt.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _OrglabExt.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _OrglabExt:
_OrglabExt.SwigPyIterator_swigregister(SwigPyIterator)

class IntVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _OrglabExt.IntVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _OrglabExt.IntVector___nonzero__(self)

    def __bool__(self):
        return _OrglabExt.IntVector___bool__(self)

    def __len__(self):
        return _OrglabExt.IntVector___len__(self)

    def __getslice__(self, i, j):
        return _OrglabExt.IntVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _OrglabExt.IntVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _OrglabExt.IntVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _OrglabExt.IntVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.IntVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _OrglabExt.IntVector___setitem__(self, *args)

    def pop(self):
        return _OrglabExt.IntVector_pop(self)

    def append(self, x):
        return _OrglabExt.IntVector_append(self, x)

    def empty(self):
        return _OrglabExt.IntVector_empty(self)

    def size(self):
        return _OrglabExt.IntVector_size(self)

    def swap(self, v):
        return _OrglabExt.IntVector_swap(self, v)

    def begin(self):
        return _OrglabExt.IntVector_begin(self)

    def end(self):
        return _OrglabExt.IntVector_end(self)

    def rbegin(self):
        return _OrglabExt.IntVector_rbegin(self)

    def rend(self):
        return _OrglabExt.IntVector_rend(self)

    def clear(self):
        return _OrglabExt.IntVector_clear(self)

    def get_allocator(self):
        return _OrglabExt.IntVector_get_allocator(self)

    def pop_back(self):
        return _OrglabExt.IntVector_pop_back(self)

    def erase(self, *args):
        return _OrglabExt.IntVector_erase(self, *args)

    def __init__(self, *args):
        _OrglabExt.IntVector_swiginit(self, _OrglabExt.new_IntVector(*args))

    def push_back(self, x):
        return _OrglabExt.IntVector_push_back(self, x)

    def front(self):
        return _OrglabExt.IntVector_front(self)

    def back(self):
        return _OrglabExt.IntVector_back(self)

    def assign(self, n, x):
        return _OrglabExt.IntVector_assign(self, n, x)

    def resize(self, *args):
        return _OrglabExt.IntVector_resize(self, *args)

    def insert(self, *args):
        return _OrglabExt.IntVector_insert(self, *args)

    def reserve(self, n):
        return _OrglabExt.IntVector_reserve(self, n)

    def capacity(self):
        return _OrglabExt.IntVector_capacity(self)
    __swig_destroy__ = _OrglabExt.delete_IntVector

# Register IntVector in _OrglabExt:
_OrglabExt.IntVector_swigregister(IntVector)

class DoubleVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _OrglabExt.DoubleVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _OrglabExt.DoubleVector___nonzero__(self)

    def __bool__(self):
        return _OrglabExt.DoubleVector___bool__(self)

    def __len__(self):
        return _OrglabExt.DoubleVector___len__(self)

    def __getslice__(self, i, j):
        return _OrglabExt.DoubleVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _OrglabExt.DoubleVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _OrglabExt.DoubleVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _OrglabExt.DoubleVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.DoubleVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _OrglabExt.DoubleVector___setitem__(self, *args)

    def pop(self):
        return _OrglabExt.DoubleVector_pop(self)

    def append(self, x):
        return _OrglabExt.DoubleVector_append(self, x)

    def empty(self):
        return _OrglabExt.DoubleVector_empty(self)

    def size(self):
        return _OrglabExt.DoubleVector_size(self)

    def swap(self, v):
        return _OrglabExt.DoubleVector_swap(self, v)

    def begin(self):
        return _OrglabExt.DoubleVector_begin(self)

    def end(self):
        return _OrglabExt.DoubleVector_end(self)

    def rbegin(self):
        return _OrglabExt.DoubleVector_rbegin(self)

    def rend(self):
        return _OrglabExt.DoubleVector_rend(self)

    def clear(self):
        return _OrglabExt.DoubleVector_clear(self)

    def get_allocator(self):
        return _OrglabExt.DoubleVector_get_allocator(self)

    def pop_back(self):
        return _OrglabExt.DoubleVector_pop_back(self)

    def erase(self, *args):
        return _OrglabExt.DoubleVector_erase(self, *args)

    def __init__(self, *args):
        _OrglabExt.DoubleVector_swiginit(self, _OrglabExt.new_DoubleVector(*args))

    def push_back(self, x):
        return _OrglabExt.DoubleVector_push_back(self, x)

    def front(self):
        return _OrglabExt.DoubleVector_front(self)

    def back(self):
        return _OrglabExt.DoubleVector_back(self)

    def assign(self, n, x):
        return _OrglabExt.DoubleVector_assign(self, n, x)

    def resize(self, *args):
        return _OrglabExt.DoubleVector_resize(self, *args)

    def insert(self, *args):
        return _OrglabExt.DoubleVector_insert(self, *args)

    def reserve(self, n):
        return _OrglabExt.DoubleVector_reserve(self, n)

    def capacity(self):
        return _OrglabExt.DoubleVector_capacity(self)
    __swig_destroy__ = _OrglabExt.delete_DoubleVector

# Register DoubleVector in _OrglabExt:
_OrglabExt.DoubleVector_swigregister(DoubleVector)

class StringVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _OrglabExt.StringVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _OrglabExt.StringVector___nonzero__(self)

    def __bool__(self):
        return _OrglabExt.StringVector___bool__(self)

    def __len__(self):
        return _OrglabExt.StringVector___len__(self)

    def __getslice__(self, i, j):
        return _OrglabExt.StringVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _OrglabExt.StringVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _OrglabExt.StringVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _OrglabExt.StringVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.StringVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _OrglabExt.StringVector___setitem__(self, *args)

    def pop(self):
        return _OrglabExt.StringVector_pop(self)

    def append(self, x):
        return _OrglabExt.StringVector_append(self, x)

    def empty(self):
        return _OrglabExt.StringVector_empty(self)

    def size(self):
        return _OrglabExt.StringVector_size(self)

    def swap(self, v):
        return _OrglabExt.StringVector_swap(self, v)

    def begin(self):
        return _OrglabExt.StringVector_begin(self)

    def end(self):
        return _OrglabExt.StringVector_end(self)

    def rbegin(self):
        return _OrglabExt.StringVector_rbegin(self)

    def rend(self):
        return _OrglabExt.StringVector_rend(self)

    def clear(self):
        return _OrglabExt.StringVector_clear(self)

    def get_allocator(self):
        return _OrglabExt.StringVector_get_allocator(self)

    def pop_back(self):
        return _OrglabExt.StringVector_pop_back(self)

    def erase(self, *args):
        return _OrglabExt.StringVector_erase(self, *args)

    def __init__(self, *args):
        _OrglabExt.StringVector_swiginit(self, _OrglabExt.new_StringVector(*args))

    def push_back(self, x):
        return _OrglabExt.StringVector_push_back(self, x)

    def front(self):
        return _OrglabExt.StringVector_front(self)

    def back(self):
        return _OrglabExt.StringVector_back(self)

    def assign(self, n, x):
        return _OrglabExt.StringVector_assign(self, n, x)

    def resize(self, *args):
        return _OrglabExt.StringVector_resize(self, *args)

    def insert(self, *args):
        return _OrglabExt.StringVector_insert(self, *args)

    def reserve(self, n):
        return _OrglabExt.StringVector_reserve(self, n)

    def capacity(self):
        return _OrglabExt.StringVector_capacity(self)
    __swig_destroy__ = _OrglabExt.delete_StringVector

# Register StringVector in _OrglabExt:
_OrglabExt.StringVector_swigregister(StringVector)

class OriginPyObjBase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginPyObjBase_swiginit(self, _OrglabExt.new_OriginPyObjBase())
    __swig_destroy__ = _OrglabExt.delete_OriginPyObjBase

# Register OriginPyObjBase in _OrglabExt:
_OrglabExt.OriginPyObjBase_swigregister(OriginPyObjBase)

ARRAY2D_VARIANT = _OrglabExt.ARRAY2D_VARIANT
ARRAY1D_NUMERIC = _OrglabExt.ARRAY1D_NUMERIC
ARRAY2D_NUMERIC = _OrglabExt.ARRAY2D_NUMERIC
ARRAY2D_TEXT = _OrglabExt.ARRAY2D_TEXT
ARRAY2D_TEXT_FULL_PRECISION = _OrglabExt.ARRAY2D_TEXT_FULL_PRECISION
ARRAY1D_VARIANT = _OrglabExt.ARRAY1D_VARIANT
ARRAY1D_TEXT = _OrglabExt.ARRAY1D_TEXT
ARRAY1D_TEXT_FULL_PRECISION = _OrglabExt.ARRAY1D_TEXT_FULL_PRECISION
ARRAY1D_STR = _OrglabExt.ARRAY1D_STR
ARRAY2D_STR = _OrglabExt.ARRAY2D_STR
ARRAY1D_STR_FULL_PRECISION = _OrglabExt.ARRAY1D_STR_FULL_PRECISION
ARRAY2D_STR_FULL_PRECISION = _OrglabExt.ARRAY2D_STR_FULL_PRECISION
ARRAY1D2D_MASK_BITS = _OrglabExt.ARRAY1D2D_MASK_BITS
ARRAY1D_DICTIONARY = _OrglabExt.ARRAY1D_DICTIONARY
ARRAY1D2D_TRANSPOSED = _OrglabExt.ARRAY1D2D_TRANSPOSED
DF_NO_CHANGE = _OrglabExt.DF_NO_CHANGE
DF_DOUBLE = _OrglabExt.DF_DOUBLE
DF_TEXT = _OrglabExt.DF_TEXT
DF_TIME = _OrglabExt.DF_TIME
DF_DATE = _OrglabExt.DF_DATE
DF_MONTH = _OrglabExt.DF_MONTH
DF_WEEKDAY = _OrglabExt.DF_WEEKDAY
DF_TEXT_NUMERIC = _OrglabExt.DF_TEXT_NUMERIC
DF_FLOAT = _OrglabExt.DF_FLOAT
DF_SHORT = _OrglabExt.DF_SHORT
DF_LONG = _OrglabExt.DF_LONG
DF_CHAR = _OrglabExt.DF_CHAR
DF_BYTE = _OrglabExt.DF_BYTE
DF_USHORT = _OrglabExt.DF_USHORT
DF_ULONG = _OrglabExt.DF_ULONG
DF_COMPLEX = _OrglabExt.DF_COMPLEX
CMTYPE_NONE = _OrglabExt.CMTYPE_NONE
CMTYPE_NOMINAL = _OrglabExt.CMTYPE_NOMINAL
CMTYPE_ORDINAL = _OrglabExt.CMTYPE_ORDINAL
OPT_NONE = _OrglabExt.OPT_NONE
OPT_MATRIX = _OrglabExt.OPT_MATRIX
OPT_WORKSHEET = _OrglabExt.OPT_WORKSHEET
OPT_GRAPH = _OrglabExt.OPT_GRAPH
OPT_LAYOUT = _OrglabExt.OPT_LAYOUT
OPT_NOTES = _OrglabExt.OPT_NOTES
OPT_EXTERNAL = _OrglabExt.OPT_EXTERNAL
COLTYPE_NO_CHANGE = _OrglabExt.COLTYPE_NO_CHANGE
COLTYPE_Y = _OrglabExt.COLTYPE_Y
COLTYPE_NONE = _OrglabExt.COLTYPE_NONE
COLTYPE_ERROR = _OrglabExt.COLTYPE_ERROR
COLTYPE_X = _OrglabExt.COLTYPE_X
COLTYPE_LABEL = _OrglabExt.COLTYPE_LABEL
COLTYPE_Z = _OrglabExt.COLTYPE_Z
COLTYPE_X_ERROR = _OrglabExt.COLTYPE_X_ERROR
COLTYPE_GROUP = _OrglabExt.COLTYPE_GROUP
COLTYPE_SUBJECT = _OrglabExt.COLTYPE_SUBJECT
CREATEOPT_VISIBLE_SAME = _OrglabExt.CREATEOPT_VISIBLE_SAME
CREATEOPT_VISIBLE = _OrglabExt.CREATEOPT_VISIBLE
CREATEOPT_HIDDEN = _OrglabExt.CREATEOPT_HIDDEN
STGDATAFMT_BLOB = _OrglabExt.STGDATAFMT_BLOB
STGDATAFMT_STRING = _OrglabExt.STGDATAFMT_STRING
APPPATH_USER = _OrglabExt.APPPATH_USER
APPPATH_GROUP = _OrglabExt.APPPATH_GROUP
APPPATH_PROGRAM = _OrglabExt.APPPATH_PROGRAM
MAINWND_HIDE = _OrglabExt.MAINWND_HIDE
MAINWND_SHOW = _OrglabExt.MAINWND_SHOW
MAINWND_SHOWMINIMIZED = _OrglabExt.MAINWND_SHOWMINIMIZED
MAINWND_SHOWMAXIMIZED = _OrglabExt.MAINWND_SHOWMAXIMIZED
MAINWND_SHOW_BRING_TO_FRONT = _OrglabExt.MAINWND_SHOW_BRING_TO_FRONT
DIGITMODE_FREE = _OrglabExt.DIGITMODE_FREE
DIGITMODE_DECIMAL_DIGITS = _OrglabExt.DIGITMODE_DECIMAL_DIGITS
DIGITMODE_SIGNIFICANT_DIGITS = _OrglabExt.DIGITMODE_SIGNIFICANT_DIGITS
GROTYPE_TEXT = _OrglabExt.GROTYPE_TEXT
GROTYPE_LINE = _OrglabExt.GROTYPE_LINE
GROTYPE_POLYLINE = _OrglabExt.GROTYPE_POLYLINE
GROTYPE_BEZIER = _OrglabExt.GROTYPE_BEZIER
GROTYPE_RECT = _OrglabExt.GROTYPE_RECT
GROTYPE_ELLIPSE = _OrglabExt.GROTYPE_ELLIPSE
GROTYPE_POLYGON = _OrglabExt.GROTYPE_POLYGON
GROTYPE_POLYPOLYGON = _OrglabExt.GROTYPE_POLYPOLYGON
GROTYPE_CURSOR = _OrglabExt.GROTYPE_CURSOR
PARAMS_MAX_NUM = _OrglabExt.PARAMS_MAX_NUM
UDL_MAX_NUM = _OrglabExt.UDL_MAX_NUM
LT_INVALID = _OrglabExt.LT_INVALID
LT_LONG_NAME = _OrglabExt.LT_LONG_NAME
LT_UNIT = _OrglabExt.LT_UNIT
LT_COMMENT = _OrglabExt.LT_COMMENT
LT_PARAM = _OrglabExt.LT_PARAM
LT_SAMPLE_RATE = _OrglabExt.LT_SAMPLE_RATE
LT_SPARKLINE = _OrglabExt.LT_SPARKLINE
LT_USER_DEF_LABEL = _OrglabExt.LT_USER_DEF_LABEL
RM_LET_ORIGIN_DECIDE = _OrglabExt.RM_LET_ORIGIN_DECIDE
RM_HIDE_WITH_NO_FOR_ANSWER = _OrglabExt.RM_HIDE_WITH_NO_FOR_ANSWER
RM_HIDE_WITH_YES_FOR_ANSWER = _OrglabExt.RM_HIDE_WITH_YES_FOR_ANSWER
IMOPTS_CURRENT = _OrglabExt.IMOPTS_CURRENT
IMOPTS_DEFAULT = _OrglabExt.IMOPTS_DEFAULT
IMOPTS_REAL = _OrglabExt.IMOPTS_REAL
IMOPTS_IMAG = _OrglabExt.IMOPTS_IMAG
IMOPTS_PHASE = _OrglabExt.IMOPTS_PHASE
IMOPTS_AMPL = _OrglabExt.IMOPTS_AMPL
CM_SORTING_UNSORTED = _OrglabExt.CM_SORTING_UNSORTED
CM_SORTING_ASCENDING = _OrglabExt.CM_SORTING_ASCENDING
CM_SORTING_DESCENDING = _OrglabExt.CM_SORTING_DESCENDING
CM_SORTING_CUSTOM = _OrglabExt.CM_SORTING_CUSTOM
OCD_NO_UPDATE_CELL_REF = _OrglabExt.OCD_NO_UPDATE_CELL_REF
OCD_NO_CONVERT_IMAGE = _OrglabExt.OCD_NO_CONVERT_IMAGE
OCD_FADEWAY_HINT_SHOW = _OrglabExt.OCD_FADEWAY_HINT_SHOW
OCD_CREATE_MIXED_COL = _OrglabExt.OCD_CREATE_MIXED_COL
OCD_NO_INVALIDATE = _OrglabExt.OCD_NO_INVALIDATE
OCD_ENUM_NEXT_KEEP_CONSISTENT = _OrglabExt.OCD_ENUM_NEXT_KEEP_CONSISTENT
OCD_RESERVED_2 = _OrglabExt.OCD_RESERVED_2
OCD_RESERVED_1 = _OrglabExt.OCD_RESERVED_1
OCD_KEEP_SN = _OrglabExt.OCD_KEEP_SN
OCD_MODIFY_ADD = _OrglabExt.OCD_MODIFY_ADD
OCD_MODIFY_DEL = _OrglabExt.OCD_MODIFY_DEL
OCD_RESET_VIEW = _OrglabExt.OCD_RESET_VIEW
OCD_LONG_NAME = _OrglabExt.OCD_LONG_NAME
OCD_UPDATE_PE = _OrglabExt.OCD_UPDATE_PE
OCD_DIFF_NAME = _OrglabExt.OCD_DIFF_NAME
OCD_ENUM_NEXT = _OrglabExt.OCD_ENUM_NEXT
OCD_APPLY_SIBLINGS = _OrglabExt.OCD_APPLY_SIBLINGS
OCD_PROGRESS = _OrglabExt.OCD_PROGRESS
OCD_REPAINT = _OrglabExt.OCD_REPAINT
OCD_RESTORE = _OrglabExt.OCD_RESTORE
OCD_INITDATA = _OrglabExt.OCD_INITDATA
OCD_UNDO = _OrglabExt.OCD_UNDO
OCD_ASK = _OrglabExt.OCD_ASK
OCD_DEL_LINKED_OBJS = _OrglabExt.OCD_DEL_LINKED_OBJS
OCD_DEL_PARENT_IF_LAST = _OrglabExt.OCD_DEL_PARENT_IF_LAST
OCD_NO_EVENTS = _OrglabExt.OCD_NO_EVENTS
OCD_STRUCT_MODIFIY = _OrglabExt.OCD_STRUCT_MODIFIY
OCD_MODIFY = _OrglabExt.OCD_MODIFY
OCD_ERROR = _OrglabExt.OCD_ERROR
OCD_DESTRY_DEFAULT = _OrglabExt.OCD_DESTRY_DEFAULT
OCD_ABORT_IF_EMPTY = _OrglabExt.OCD_ABORT_IF_EMPTY
OCD_ENUM_ADD_SEPARATOR = _OrglabExt.OCD_ENUM_ADD_SEPARATOR
OCD_LNAME_IF_NOT_GOOD_SNAME = _OrglabExt.OCD_LNAME_IF_NOT_GOOD_SNAME
OCD_WARNING = _OrglabExt.OCD_WARNING
OCD_NO_SET_LN = _OrglabExt.OCD_NO_SET_LN
OCD_NO_KEEP_STYLEHOLDER = _OrglabExt.OCD_NO_KEEP_STYLEHOLDER
STORAGE_TYPE_INI = _OrglabExt.STORAGE_TYPE_INI
STORAGE_TYPE_BINARY = _OrglabExt.STORAGE_TYPE_BINARY
STORAGE_TYPE_ALL = _OrglabExt.STORAGE_TYPE_ALL
WKSC_CNTL_IMPORT = _OrglabExt.WKSC_CNTL_IMPORT
WKSC_CNTL_PASTE = _OrglabExt.WKSC_CNTL_PASTE
WKSC_CNTL_DATA = _OrglabExt.WKSC_CNTL_DATA
WKSC_CNTL_LT_MULTILINES = _OrglabExt.WKSC_CNTL_LT_MULTILINES
WKSC_CNTL_EXEC = _OrglabExt.WKSC_CNTL_EXEC
WKSC_CNTL_WKS_STRUCT = _OrglabExt.WKSC_CNTL_WKS_STRUCT
AU_NONE = _OrglabExt.AU_NONE
AU_AUTO = _OrglabExt.AU_AUTO
AU_ON_COMMAND = _OrglabExt.AU_ON_COMMAND
WKS_EXPORT_HEADING = _OrglabExt.WKS_EXPORT_HEADING
WKS_EXPORT_ALL = _OrglabExt.WKS_EXPORT_ALL
WKS_EXPORT_LABELS = _OrglabExt.WKS_EXPORT_LABELS
WKS_EXPORT_SELECTED = _OrglabExt.WKS_EXPORT_SELECTED
WKS_EXPORT_MISSING_AS_BLANK = _OrglabExt.WKS_EXPORT_MISSING_AS_BLANK
FALSE = _OrglabExt.FALSE
TRUE = _OrglabExt.TRUE
VERSION = "1.1.2"
class OriginBase(OriginPyObjBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginBase_swiginit(self, _OrglabExt.new_OriginBase())
    __swig_destroy__ = _OrglabExt.delete_OriginBase

    def IsValid(self):
        return _OrglabExt.OriginBase_IsValid(self)

    def GetApplication(self):
        return _OrglabExt.OriginBase_GetApplication(self)

    def GetParent(self):
        return _OrglabExt.OriginBase_GetParent(self)
    Application = property(GetApplication)
    Parent = property(GetParent)

# Register OriginBase in _OrglabExt:
_OrglabExt.OriginBase_swigregister(OriginBase)

class OriginObject(OriginBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginObject_swiginit(self, _OrglabExt.new_OriginObject())
    __swig_destroy__ = _OrglabExt.delete_OriginObject

    def __str__(self):
        return _OrglabExt.OriginObject___str__(self)

    def __len__(self):
        return _OrglabExt.OriginObject___len__(self)

    def IsValid(self):
        return _OrglabExt.OriginObject_IsValid(self)

    def GetName(self):
        return _OrglabExt.OriginObject_GetName(self)

    def PutName(self, str):
        return _OrglabExt.OriginObject_PutName(self, str)
    SetName = PutName

    def GetLongName(self):
        return _OrglabExt.OriginObject_GetLongName(self)

    def PutLongName(self, str):
        return _OrglabExt.OriginObject_PutLongName(self, str)
    SetLongName = PutLongName

    def Destroy(self):
        return _OrglabExt.OriginObject_Destroy(self)

    def GetShow(self):
        return _OrglabExt.OriginObject_GetShow(self)

    def PutShow(self, bShow):
        return _OrglabExt.OriginObject_PutShow(self, bShow)
    SetShow = PutShow

    def GetIndex(self):
        return _OrglabExt.OriginObject_GetIndex(self)

    def PutIndex(self, nIndex):
        return _OrglabExt.OriginObject_PutIndex(self, nIndex)
    SetIndex = PutIndex

    def GetBinaryStorageNames(self):
        return _OrglabExt.OriginObject_GetBinaryStorageNames(self)

    def GetBinaryStorageData(self, Name, format=0):
        return _OrglabExt.OriginObject_GetBinaryStorageData(self, Name, format)

    def SetBinaryStorageData(self, *args):
        return _OrglabExt.OriginObject_SetBinaryStorageData(self, *args)

    def GetTheme(self):
        return _OrglabExt.OriginObject_GetTheme(self)

    def PutTheme(self, pTheme):
        return _OrglabExt.OriginObject_PutTheme(self, pTheme)
    SetTheme = PutTheme

    def GetMetaData(self, Name, bVisibleToUser):
        return _OrglabExt.OriginObject_GetMetaData(self, Name, bVisibleToUser)

    def SetMetaData(self, xml, Name, bVisibleToUser):
        return _OrglabExt.OriginObject_SetMetaData(self, xml, Name, bVisibleToUser)

    def Execute(self, LabTalkStr):
        return _OrglabExt.OriginObject_Execute(self, LabTalkStr)
    LT_execute = Execute

    def Activate(self):
        return _OrglabExt.OriginObject_Activate(self)
    Name = property(GetName, PutName)
    LongName = property(GetLongName, PutLongName)
    Show = property(GetShow, PutShow)
    Index = property(GetIndex, PutIndex)
    BinaryStorageNames = property(GetBinaryStorageNames)
    Theme = property(GetTheme, PutTheme)

# Register OriginObject in _OrglabExt:
_OrglabExt.OriginObject_swigregister(OriginObject)

class PageBase(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.PageBase_swiginit(self, _OrglabExt.new_PageBase())
    __swig_destroy__ = _OrglabExt.delete_PageBase

    def IsValid(self):
        return _OrglabExt.PageBase_IsValid(self)

    def GetType(self):
        return _OrglabExt.PageBase_GetType(self)

    def GetParent(self):
        return _OrglabExt.PageBase_GetParent(self)
    Type = property(GetType)
    Parent = property(GetParent)

# Register PageBase in _OrglabExt:
_OrglabExt.PageBase_swigregister(PageBase)

class Page(PageBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Page_swiginit(self, _OrglabExt.new_Page())
    __swig_destroy__ = _OrglabExt.delete_Page

    def IsValid(self):
        return _OrglabExt.Page_IsValid(self)

    def __len__(self):
        return _OrglabExt.Page___len__(self)

    def AddLayer(self, *args):
        return _OrglabExt.Page_AddLayer(self, *args)

    def GetLayers(self):
        return _OrglabExt.Page_GetLayers(self)

    def GetLayer(self, *args):
        return _OrglabExt.Page_GetLayer(self, *args)

    def __iter__(self):
        return _OrglabExt.Page___iter__(self)

    def Preview(self, fname):
        return _OrglabExt.Page_Preview(self, fname)
    Layers = property(GetLayers)

    def __getitem__(self, *args):
        return _OrglabExt.Page___getitem__(self, *args)

# Register Page in _OrglabExt:
_OrglabExt.Page_swigregister(Page)

class GraphPage(Page):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.GraphPage_swiginit(self, _OrglabExt.new_GraphPage())
    __swig_destroy__ = _OrglabExt.delete_GraphPage

    def IsValid(self):
        return _OrglabExt.GraphPage_IsValid(self)

    def GetBaseColor(self):
        return _OrglabExt.GraphPage_GetBaseColor(self)

    def PutBaseColor(self, color):
        return _OrglabExt.GraphPage_PutBaseColor(self, color)
    SetBaseColor = PutBaseColor

    def GetGradColor(self):
        return _OrglabExt.GraphPage_GetGradColor(self)

    def PutGradColor(self, color):
        return _OrglabExt.GraphPage_PutGradColor(self, color)
    SetGradColor = PutGradColor

    def GetGradCntrl(self):
        return _OrglabExt.GraphPage_GetGradCntrl(self)

    def PutGradCntrl(self, cntrl):
        return _OrglabExt.GraphPage_PutGradCntrl(self, cntrl)
    SetGradCntrl = PutGradCntrl

    def GetUnits(self):
        return _OrglabExt.GraphPage_GetUnits(self)

    def PutUnits(self, units):
        return _OrglabExt.GraphPage_PutUnits(self, units)
    SetUnits = PutUnits

    def GetWidth(self):
        return _OrglabExt.GraphPage_GetWidth(self)

    def PutWidth(self, dWidth):
        return _OrglabExt.GraphPage_PutWidth(self, dWidth)
    SetWidth = PutWidth

    def GetHeight(self):
        return _OrglabExt.GraphPage_GetHeight(self)

    def PutHeight(self, dHeight):
        return _OrglabExt.GraphPage_PutHeight(self, dHeight)
    SetHeight = PutHeight

    def GetShowData(self):
        return _OrglabExt.GraphPage_GetShowData(self)

    def PutShowData(self, val):
        return _OrglabExt.GraphPage_PutShowData(self, val)
    SetShowData = PutShowData

    def GetShowLabels(self):
        return _OrglabExt.GraphPage_GetShowLabels(self)

    def PutShowLabels(self, val):
        return _OrglabExt.GraphPage_PutShowLabels(self, val)
    SetShowLabels = PutShowLabels

    def GetPAGEVIEWMODE(self):
        return _OrglabExt.GraphPage_GetPAGEVIEWMODE(self)

    def PutPAGEVIEWMODE(self, val):
        return _OrglabExt.GraphPage_PutPAGEVIEWMODE(self, val)
    GetPageViewMode = GetPAGEVIEWMODE
    SetPAGEVIEWMODE = PutPAGEVIEWMODE
    SetPageViewMode = PutPAGEVIEWMODE
    PutPageViewMode = PutPAGEVIEWMODE

    def GetPrintingPrinterName(self):
        return _OrglabExt.GraphPage_GetPrintingPrinterName(self)

    def PutPrintingPrinterName(self, val):
        return _OrglabExt.GraphPage_PutPrintingPrinterName(self, val)
    SetPrintingPrinterName = PutPrintingPrinterName

    def GetPrintingDPI(self):
        return _OrglabExt.GraphPage_GetPrintingDPI(self)

    def PutPrintingDPI(self, val):
        return _OrglabExt.GraphPage_PutPrintingDPI(self, val)
    SetPrintingDPI = PutPrintingDPI

    def GetPrintingNumberOfCopies(self):
        return _OrglabExt.GraphPage_GetPrintingNumberOfCopies(self)

    def PutPrintingNumberOfCopies(self, val):
        return _OrglabExt.GraphPage_PutPrintingNumberOfCopies(self, val)
    SetPrintingNumberOfCopies = PutPrintingNumberOfCopies

    def GetPrintingPaperSource(self):
        return _OrglabExt.GraphPage_GetPrintingPaperSource(self)

    def PutPrintingPaperSource(self, val):
        return _OrglabExt.GraphPage_PutPrintingPaperSource(self, val)
    SetPrintingPaperSource = PutPrintingPaperSource

    def GetExportAuto(self):
        return _OrglabExt.GraphPage_GetExportAuto(self)

    def PutExportAuto(self, val):
        return _OrglabExt.GraphPage_PutExportAuto(self, val)
    SetExportAuto = PutExportAuto

    def GetExportRatio(self):
        return _OrglabExt.GraphPage_GetExportRatio(self)

    def PutExportRatio(self, val):
        return _OrglabExt.GraphPage_PutExportRatio(self, val)
    SetExportRatio = PutExportRatio

    def GetExportMargin(self):
        return _OrglabExt.GraphPage_GetExportMargin(self)

    def PutExportMargin(self, val):
        return _OrglabExt.GraphPage_PutExportMargin(self, val)
    SetExportMargin = PutExportMargin

    def GetExportClip(self):
        return _OrglabExt.GraphPage_GetExportClip(self)

    def PutExportClip(self, val):
        return _OrglabExt.GraphPage_PutExportClip(self, val)
    SetExportClip = PutExportClip

    def GetExportAdvanced(self):
        return _OrglabExt.GraphPage_GetExportAdvanced(self)

    def PutExportAdvanced(self, val):
        return _OrglabExt.GraphPage_PutExportAdvanced(self, val)
    SetExportAdvanced = PutExportAdvanced

    def GetExportChangeResolution(self):
        return _OrglabExt.GraphPage_GetExportChangeResolution(self)

    def PutExportChangeResolution(self, val):
        return _OrglabExt.GraphPage_PutExportChangeResolution(self, val)

    def GetExportResolution(self):
        return _OrglabExt.GraphPage_GetExportResolution(self)

    def PutExportResolution(self, val):
        return _OrglabExt.GraphPage_PutExportResolution(self, val)
    SetExportResolution = PutExportResolution

    def GetLegendsFullName(self):
        return _OrglabExt.GraphPage_GetLegendsFullName(self)

    def PutLegendsFullName(self, val):
        return _OrglabExt.GraphPage_PutLegendsFullName(self, val)
    SetLegendsFullName = PutLegendsFullName

    def GetLegendsAutoUpdate(self):
        return _OrglabExt.GraphPage_GetLegendsAutoUpdate(self)

    def PutLegendsAutoUpdate(self, val):
        return _OrglabExt.GraphPage_PutLegendsAutoUpdate(self, val)
    SetLegendsAutoUpdate = PutLegendsAutoUpdate

    def GetLegendsMultiLayer(self):
        return _OrglabExt.GraphPage_GetLegendsMultiLayer(self)

    def PutLegendsMultiLayer(self, val):
        return _OrglabExt.GraphPage_PutLegendsMultiLayer(self, val)
    SetLegendsMultiLayer = PutLegendsMultiLayer

    def GetLegendsIndicateActive(self):
        return _OrglabExt.GraphPage_GetLegendsIndicateActive(self)

    def PutLegendsIndicateActive(self, val):
        return _OrglabExt.GraphPage_PutLegendsIndicateActive(self, val)
    SetLegendsIndicateActive = PutLegendsIndicateActive

    def GetLegendsSymbolWidth(self):
        return _OrglabExt.GraphPage_GetLegendsSymbolWidth(self)

    def PutLegendsSymbolWidth(self, val):
        return _OrglabExt.GraphPage_PutLegendsSymbolWidth(self, val)
    SetLegendsSymbolWidth = PutLegendsSymbolWidth

    def GetLayers(self):
        return _OrglabExt.GraphPage_GetLayers(self)

    def GetLayer(self, *args):
        return _OrglabExt.GraphPage_GetLayer(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.GraphPage___getitem__(self, *args)

    def __iter__(self):
        return _OrglabExt.GraphPage___iter__(self)
    Layers = property(GetLayers)
    ExportResolution = property(GetExportResolution, PutExportResolution)
    LegendsFullName = property(GetLegendsFullName, PutLegendsFullName)
    LegendsAutoUpdate = property(GetLegendsAutoUpdate, PutLegendsAutoUpdate)
    LegendsMultiLayer = property(GetLegendsMultiLayer, PutLegendsMultiLayer)
    LegendsIndicateActive = property(GetLegendsIndicateActive, PutLegendsIndicateActive)
    LegendsSymbolWidth = property(GetLegendsSymbolWidth, PutLegendsSymbolWidth)
    BaseColor = property(GetBaseColor, PutBaseColor)
    GradColor = property(GetGradColor, PutGradColor)
    GradCntrl = property(GetGradCntrl, PutGradCntrl)
    Units = property(GetUnits, PutUnits)
    PrintingPrinterName = property(GetPrintingPrinterName, PutPrintingPrinterName)
    PrintingDPI = property(GetPrintingDPI, PutPrintingDPI)
    PrintingNumberOfCopies = property(GetPrintingNumberOfCopies, PutPrintingNumberOfCopies)
    PrintingPaperSource = property(GetPrintingPaperSource, PutPrintingPaperSource)
    ExportAuto = property(GetExportAuto, PutExportAuto)
    ExportRatio = property(GetExportRatio, PutExportRatio)
    ExportMargin = property(GetExportMargin, PutExportMargin)
    ExportClip = property(GetExportClip, PutExportClip)
    PAGEVIEWMODE = property(GetPAGEVIEWMODE, PutPAGEVIEWMODE)
    PageViewMode = property(GetPageViewMode, PutPageViewMode)
    Height = property(GetHeight, PutHeight)
    Width = property(GetWidth, PutWidth)
    ShowData = property(GetShowData, PutShowData)
    ShowLabels = property(GetShowLabels, PutShowLabels)
    ExportAdvanced = property(GetExportAdvanced, PutExportAdvanced)
    ExportChangeResolution = property(GetExportChangeResolution, PutExportChangeResolution)

# Register GraphPage in _OrglabExt:
_OrglabExt.GraphPage_swigregister(GraphPage)

class LayoutPage(Page):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.LayoutPage_swiginit(self, _OrglabExt.new_LayoutPage())
    __swig_destroy__ = _OrglabExt.delete_LayoutPage

    def IsValid(self):
        return _OrglabExt.LayoutPage_IsValid(self)

# Register LayoutPage in _OrglabExt:
_OrglabExt.LayoutPage_swigregister(LayoutPage)

class WorksheetPage(Page):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.WorksheetPage_swiginit(self, _OrglabExt.new_WorksheetPage())
    __swig_destroy__ = _OrglabExt.delete_WorksheetPage

    def IsValid(self):
        return _OrglabExt.WorksheetPage_IsValid(self)

    def GetLayers(self):
        return _OrglabExt.WorksheetPage_GetLayers(self)

    def GetLayer(self, *args):
        return _OrglabExt.WorksheetPage_GetLayer(self, *args)

    def __iter__(self):
        return _OrglabExt.WorksheetPage___iter__(self)

    def __getitem__(self, *args):
        return _OrglabExt.WorksheetPage___getitem__(self, *args)
    Layers = property(GetLayers)

# Register WorksheetPage in _OrglabExt:
_OrglabExt.WorksheetPage_swigregister(WorksheetPage)

class MatrixPage(Page):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.MatrixPage_swiginit(self, _OrglabExt.new_MatrixPage())
    __swig_destroy__ = _OrglabExt.delete_MatrixPage

    def IsValid(self):
        return _OrglabExt.MatrixPage_IsValid(self)

    def GetLayers(self):
        return _OrglabExt.MatrixPage_GetLayers(self)

    def GetLayer(self, *args):
        return _OrglabExt.MatrixPage_GetLayer(self, *args)

    def __iter__(self):
        return _OrglabExt.MatrixPage___iter__(self)

    def __getitem__(self, *args):
        return _OrglabExt.MatrixPage___getitem__(self, *args)
    Layers = property(GetLayers)

# Register MatrixPage in _OrglabExt:
_OrglabExt.MatrixPage_swigregister(MatrixPage)

class NotePage(PageBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.NotePage_swiginit(self, _OrglabExt.new_NotePage())
    __swig_destroy__ = _OrglabExt.delete_NotePage

    def IsValid(self):
        return _OrglabExt.NotePage_IsValid(self)

    def GetText(self):
        return _OrglabExt.NotePage_GetText(self)

    def PutText(self, strText):
        return _OrglabExt.NotePage_PutText(self, strText)
    SetText = PutText
    Text = property(GetText, PutText)

# Register NotePage in _OrglabExt:
_OrglabExt.NotePage_swigregister(NotePage)

class ExternalDialogPage(PageBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.ExternalDialogPage_swiginit(self, _OrglabExt.new_ExternalDialogPage())
    __swig_destroy__ = _OrglabExt.delete_ExternalDialogPage

    def IsValid(self):
        return _OrglabExt.ExternalDialogPage_IsValid(self)

# Register ExternalDialogPage in _OrglabExt:
_OrglabExt.ExternalDialogPage_swigregister(ExternalDialogPage)

class Layer(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Layer_swiginit(self, _OrglabExt.new_Layer())
    __swig_destroy__ = _OrglabExt.delete_Layer

    def IsValid(self):
        return _OrglabExt.Layer_IsValid(self)

    def __len__(self):
        return _OrglabExt.Layer___len__(self)

    def GetPage(self):
        return _OrglabExt.Layer_GetPage(self)
    GetParent = GetPage

    def GetDataObjectBases(self):
        return _OrglabExt.Layer_GetDataObjectBases(self)
    Parent = property(GetParent)

# Register Layer in _OrglabExt:
_OrglabExt.Layer_swigregister(Layer)

class LayoutLayer(Layer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.LayoutLayer_swiginit(self, _OrglabExt.new_LayoutLayer())
    __swig_destroy__ = _OrglabExt.delete_LayoutLayer

    def GetPage(self):
        return _OrglabExt.LayoutLayer_GetPage(self)
    GetParent = GetPage

# Register LayoutLayer in _OrglabExt:
_OrglabExt.LayoutLayer_swigregister(LayoutLayer)

class NoteLayer(Layer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.NoteLayer_swiginit(self, _OrglabExt.new_NoteLayer())
    __swig_destroy__ = _OrglabExt.delete_NoteLayer

    def GetPage(self):
        return _OrglabExt.NoteLayer_GetPage(self)
    GetParent = GetPage

# Register NoteLayer in _OrglabExt:
_OrglabExt.NoteLayer_swigregister(NoteLayer)

class GraphLayer(Layer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.GraphLayer_swiginit(self, _OrglabExt.new_GraphLayer())
    __swig_destroy__ = _OrglabExt.delete_GraphLayer

    def IsValid(self):
        return _OrglabExt.GraphLayer_IsValid(self)

    def AddPlot(self, pPyRange, nPlotType):
        return _OrglabExt.GraphLayer_AddPlot(self, pPyRange, nPlotType)

    def AddPlotFromString(self, strRange, nPlotType):
        return _OrglabExt.GraphLayer_AddPlotFromString(self, strRange, nPlotType)

    def GetDataPlots(self):
        return _OrglabExt.GraphLayer_GetDataPlots(self)

    def GetGraphObjects(self):
        return _OrglabExt.GraphLayer_GetGraphObjects(self)

    def __getitem__(self, *args):
        return _OrglabExt.GraphLayer___getitem__(self, *args)

    def __iter__(self):
        return _OrglabExt.GraphLayer___iter__(self)

    def GetPage(self):
        return _OrglabExt.GraphLayer_GetPage(self)
    GetParent = GetPage
    Parent = property(GetParent)
    DataPlots = property(GetDataPlots)
    GraphObjects = property(GetGraphObjects)

# Register GraphLayer in _OrglabExt:
_OrglabExt.GraphLayer_swigregister(GraphLayer)

class Datasheet(Layer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Datasheet_swiginit(self, _OrglabExt.new_Datasheet())
    __swig_destroy__ = _OrglabExt.delete_Datasheet

    def IsValid(self):
        return _OrglabExt.Datasheet_IsValid(self)

    def ClearData(self, nC1=0, nC2=-1):
        return _OrglabExt.Datasheet_ClearData(self, nC1, nC2)

    def GetCols(self):
        return _OrglabExt.Datasheet_GetCols(self)

    def PutCols(self, cols):
        return _OrglabExt.Datasheet_PutCols(self, cols)
    SetCols = PutCols
    GetColCount = GetCols
    SetColCount = PutCols

    def GetRows(self):
        return _OrglabExt.Datasheet_GetRows(self)

    def PutRows(self, rows):
        return _OrglabExt.Datasheet_PutRows(self, rows)
    SetRows = PutRows
    GetRowCount = GetRows
    SetRowCount = PutRows
    Cols = property(GetCols, PutCols)
    Rows = property(GetRows, PutRows)

    def FindCol(self, lpcszLabel, nBegin=0, bCasesensitive=False, bFullMatch=True, nEnd=-1, bAllowShortName=True):
        return _OrglabExt.Datasheet_FindCol(self, lpcszLabel, nBegin, bCasesensitive, bFullMatch, nEnd, bAllowShortName)

# Register Datasheet in _OrglabExt:
_OrglabExt.Datasheet_swigregister(Datasheet)

class Worksheet(Datasheet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Worksheet_swiginit(self, _OrglabExt.new_Worksheet())
    __swig_destroy__ = _OrglabExt.delete_Worksheet

    def IsValid(self):
        return _OrglabExt.Worksheet_IsValid(self)

    def GetCell(self, nRow, nCol):
        return _OrglabExt.Worksheet_GetCell(self, nRow, nCol)

    def GetColumns(self):
        return _OrglabExt.Worksheet_GetColumns(self)

    def __iter__(self):
        return _OrglabExt.Worksheet___iter__(self)

    def __getitem__(self, *args):
        return _OrglabExt.Worksheet___getitem__(self, *args)

    def DeleteCol(self, nColIndex):
        return _OrglabExt.Worksheet_DeleteCol(self, nColIndex)

    def SetData(self, *args):
        return _OrglabExt.Worksheet_SetData(self, *args)

    def GetData(self, nRowStart=0, nColStart=0, nRowEnd=-1, nColEnd=-1, format=ARRAY2D_VARIANT):
        return _OrglabExt.Worksheet_GetData(self, nRowStart, nColStart, nRowEnd, nColEnd, format)

    def GetRawData(self, nRowStart=0, nColStart=0, nRowEnd=-1, nColEnd=-1, format=ARRAY2D_VARIANT):
        return _OrglabExt.Worksheet_GetRawData(self, nRowStart, nColStart, nRowEnd, nColEnd, format)

    def GetLabelVisible(self, nLabelType):
        return _OrglabExt.Worksheet_GetLabelVisible(self, nLabelType)

    def PutLabelVisible(self, nLabelType, bShow=True):
        return _OrglabExt.Worksheet_PutLabelVisible(self, nLabelType, bShow)
    SetLabelVisible = PutLabelVisible

    def GetUserDefLabel(self, nIndex):
        return _OrglabExt.Worksheet_GetUserDefLabel(self, nIndex)

    def PutUserDefLabel(self, nIndex, strLabel):
        return _OrglabExt.Worksheet_PutUserDefLabel(self, nIndex, strLabel)
    SetUserDefLabel = PutUserDefLabel

    def Copy(self, nR1=0, nC1=0, nR2=-1, nC2=-1, bFullPrecision=False):
        return _OrglabExt.Worksheet_Copy(self, nR1, nC1, nR2, nC2, bFullPrecision)

    def Labels(self, pattern):
        return _OrglabExt.Worksheet_Labels(self, pattern)

    def SetColDesignations(self, strColDesig, bRepeat=TRUE, nC1=0, nC2=-1):
        return _OrglabExt.Worksheet_SetColDesignations(self, strColDesig, bRepeat, nC1, nC2)

    def MoveColumns(self, nStartLocation, nCols, nByPos):
        return _OrglabExt.Worksheet_MoveColumns(self, nStartLocation, nCols, nByPos)

    def GetPage(self):
        return _OrglabExt.Worksheet_GetPage(self)
    GetParent = GetPage

    def NewDataRange(self, r1=0, c1=0, r2=-1, c2=0):
        return _OrglabExt.Worksheet_NewDataRange(self, r1, c1, r2, c2)
    Parent = property(GetParent)
    Columns = property(GetColumns)

# Register Worksheet in _OrglabExt:
_OrglabExt.Worksheet_swigregister(Worksheet)

class Matrixsheet(Datasheet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Matrixsheet_swiginit(self, _OrglabExt.new_Matrixsheet())
    __swig_destroy__ = _OrglabExt.delete_Matrixsheet

    def IsValid(self):
        return _OrglabExt.Matrixsheet_IsValid(self)

    def GetMatrixObjects(self):
        return _OrglabExt.Matrixsheet_GetMatrixObjects(self)

    def __iter__(self):
        return _OrglabExt.Matrixsheet___iter__(self)

    def __getitem__(self, *args):
        return _OrglabExt.Matrixsheet___getitem__(self, *args)

    def GetPage(self):
        return _OrglabExt.Matrixsheet_GetPage(self)
    GetParent = GetPage

    def GetMats(self):
        return _OrglabExt.Matrixsheet_GetMats(self)

    def PutMats(self, mats):
        return _OrglabExt.Matrixsheet_PutMats(self, mats)
    SetMats = PutMats
    SetNumMats = PutMats
    GetNumMats = GetMats

    def NewDataRange(self, Index=0):
        return _OrglabExt.Matrixsheet_NewDataRange(self, Index)

    def SetShape(self, nRows, nCols, bKeepData=False):
        return _OrglabExt.Matrixsheet_SetShape(self, nRows, nCols, bKeepData)
    Parent = property(GetParent)
    MatrixObjects = property(GetMatrixObjects)
    Mats = property(GetMats, PutMats)

# Register Matrixsheet in _OrglabExt:
_OrglabExt.Matrixsheet_swigregister(Matrixsheet)

class DataRange(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.DataRange_swiginit(self, _OrglabExt.new_DataRange())
    __swig_destroy__ = _OrglabExt.delete_DataRange

    def IsValid(self):
        return _OrglabExt.DataRange_IsValid(self)

    def Add(self, strType, pPyWks, nR1, nC1, nR2, nC2):
        return _OrglabExt.DataRange_Add(self, strType, pPyWks, nR1, nC1, nR2, nC2)

    def AddSimple(self, pPyWks, nR1, nC1, nR2, nC2):
        return _OrglabExt.DataRange_AddSimple(self, pPyWks, nR1, nC1, nR2, nC2)

    def AddMatrix(self, pPyMatrix, nIndex=0):
        return _OrglabExt.DataRange_AddMatrix(self, pPyMatrix, nIndex)

    def GetData(self, *args):
        return _OrglabExt.DataRange_GetData(self, *args)

    def GetRawData(self, *args):
        return _OrglabExt.DataRange_GetRawData(self, *args)

    def GetParent(self):
        return _OrglabExt.DataRange_GetParent(self)
    Parent = property(GetParent)

    def SetData(self, *args):
        return _OrglabExt.DataRange_SetData(self, *args)

# Register DataRange in _OrglabExt:
_OrglabExt.DataRange_swigregister(DataRange)

class DataObjectBase(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.DataObjectBase_swiginit(self, _OrglabExt.new_DataObjectBase())
    __swig_destroy__ = _OrglabExt.delete_DataObjectBase

    def GetParent(self):
        return _OrglabExt.DataObjectBase_GetParent(self)
    Parent = property(GetParent)

    def GetDatasetName(self):
        return _OrglabExt.DataObjectBase_GetDatasetName(self)
    DatasetName = property(GetDatasetName)

# Register DataObjectBase in _OrglabExt:
_OrglabExt.DataObjectBase_swigregister(DataObjectBase)

class DataObject(DataObjectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.DataObject_swiginit(self, _OrglabExt.new_DataObject())
    __swig_destroy__ = _OrglabExt.delete_DataObject

    def IsValid(self):
        return _OrglabExt.DataObject_IsValid(self)

    def GetDigits(self):
        return _OrglabExt.DataObject_GetDigits(self)

    def PutDigits(self, value):
        return _OrglabExt.DataObject_PutDigits(self, value)
    SetDigits = PutDigits

    def GetDigitMode(self):
        return _OrglabExt.DataObject_GetDigitMode(self)

    def PutDigitMode(self, value):
        return _OrglabExt.DataObject_PutDigitMode(self, value)
    SetDigitMode = PutDigitMode

    def GetDataFormat(self):
        return _OrglabExt.DataObject_GetDataFormat(self)

    def PutDataFormat(self, value):
        return _OrglabExt.DataObject_PutDataFormat(self, value)
    SetDataFormat = PutDataFormat

    def GetDisplayFormat(self):
        return _OrglabExt.DataObject_GetDisplayFormat(self)

    def PutDisplayFormat(self, value):
        return _OrglabExt.DataObject_PutDisplayFormat(self, value)
    SetDisplayFormat = PutDisplayFormat
    Digits = property(GetDigits, PutDigits)
    DigitMode = property(GetDigitMode, PutDigitMode)
    DataFormat = property(GetDataFormat, PutDataFormat)
    DisplayFormat = property(GetDisplayFormat, PutDisplayFormat)

# Register DataObject in _OrglabExt:
_OrglabExt.DataObject_swigregister(DataObject)

class Column(DataObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Column_swiginit(self, _OrglabExt.new_Column())
    __swig_destroy__ = _OrglabExt.delete_Column

    def IsValid(self):
        return _OrglabExt.Column_IsValid(self)

    def GetType(self):
        return _OrglabExt.Column_GetType(self)

    def PutType(self, nType):
        return _OrglabExt.Column_PutType(self, nType)
    SetType = PutType

    def GetInfo(self):
        return _OrglabExt.Column_GetInfo(self)

    def GetComments(self):
        return _OrglabExt.Column_GetComments(self)

    def PutComments(self, strNewValue):
        return _OrglabExt.Column_PutComments(self, strNewValue)
    SetComments = PutComments

    def GetUnits(self):
        return _OrglabExt.Column_GetUnits(self)

    def PutUnits(self, strNewValue):
        return _OrglabExt.Column_PutUnits(self, strNewValue)
    SetUnits = PutUnits

    def GetParameter(self, nIndex):
        return _OrglabExt.Column_GetParameter(self, nIndex)

    def PutParameter(self, nIndex, strNewValue):
        return _OrglabExt.Column_PutParameter(self, nIndex, strNewValue)
    SetParameter = PutParameter

    def GetEvenSampling(self):
        return _OrglabExt.Column_GetEvenSampling(self)

    def SetEvenSampling(self, X0, XInc, Units=None, LongName=None, DispFormat=None):
        return _OrglabExt.Column_SetEvenSampling(self, X0, XInc, Units, LongName, DispFormat)

    def GetUserDefLabel(self, nIndex):
        return _OrglabExt.Column_GetUserDefLabel(self, nIndex)

    def PutUserDefLabel(self, nIndex, strLabel):
        return _OrglabExt.Column_PutUserDefLabel(self, nIndex, strLabel)
    SetUserDefLabel = PutUserDefLabel

    def SetData(self, *args):
        return _OrglabExt.Column_SetData(self, *args)

    def GetData(self, format, nStart=0, nEnd=-1, lowbound=1):
        return _OrglabExt.Column_GetData(self, format, nStart, nEnd, lowbound)

    def GetRawData(self, format, nStart=0, nEnd=-1, lowbound=1):
        return _OrglabExt.Column_GetRawData(self, format, nStart, nEnd, lowbound)

    def GetCustomDisplay(self):
        return _OrglabExt.Column_GetCustomDisplay(self)

    def PutCustomDisplay(self, _arg1):
        return _OrglabExt.Column_PutCustomDisplay(self, _arg1)
    SetCustomDisplay = PutCustomDisplay

    def GetTextAndNumericSetAlwaysAsText(self):
        return _OrglabExt.Column_GetTextAndNumericSetAlwaysAsText(self)

    def PutTextAndNumericSetAlwaysAsText(self, _arg1):
        return _OrglabExt.Column_PutTextAndNumericSetAlwaysAsText(self, _arg1)
    SetTextAndNumericSetAlwaysAsText = PutTextAndNumericSetAlwaysAsText

    def GetParent(self):
        return _OrglabExt.Column_GetParent(self)
    CustomDisplay = property(GetCustomDisplay)
    TextAndNumericSetAlwaysAsText = property(GetTextAndNumericSetAlwaysAsText)
    EvenSampling = property(GetEvenSampling)
    Type = property(GetType, PutType)
    Units = property(GetUnits, PutUnits)
    Comments = property(GetComments, PutComments)
    Parent = property(GetParent)

    def GetCategMapType(self):
        return _OrglabExt.Column_GetCategMapType(self)

    def SetCategMapType(self, nType):
        return _OrglabExt.Column_SetCategMapType(self, nType)
    CategMapType = property(GetCategMapType, SetCategMapType)

    def GetCategMapSort(self):
        return _OrglabExt.Column_GetCategMapSort(self)
    CategMapSort = property(GetCategMapSort)

    def GetCategMapCategories(self):
        return _OrglabExt.Column_GetCategMapCategories(self)
    CategMapCategories = property(GetCategMapCategories)

    def SetCategMapSortCategories(self, sort, vs):
        return _OrglabExt.Column_SetCategMapSortCategories(self, sort, vs)

# Register Column in _OrglabExt:
_OrglabExt.Column_swigregister(Column)

class MatrixObject(DataObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.MatrixObject_swiginit(self, _OrglabExt.new_MatrixObject())
    __swig_destroy__ = _OrglabExt.delete_MatrixObject

    def IsValid(self):
        return _OrglabExt.MatrixObject_IsValid(self)

    def Copy(self, r1=0, c1=0, r2=-2, c2=-2):
        return _OrglabExt.MatrixObject_Copy(self, r1, c1, r2, c2)

    def GetHasBitmap(self, ExcludeLeadBitmap=True):
        return _OrglabExt.MatrixObject_GetHasBitmap(self, ExcludeLeadBitmap)

    def GetData(self, *args):
        return _OrglabExt.MatrixObject_GetData(self, *args)

    def GetRawData(self, *args):
        return _OrglabExt.MatrixObject_GetRawData(self, *args)

    def SetData(self, *args):
        return _OrglabExt.MatrixObject_SetData(self, *args)

    def GetColorMap(self):
        return _OrglabExt.MatrixObject_GetColorMap(self)

    def GetViewImage(self):
        return _OrglabExt.MatrixObject_GetViewImage(self)

    def PutViewImage(self, val):
        return _OrglabExt.MatrixObject_PutViewImage(self, val)
    SetViewImage = PutViewImage

    def GetParent(self):
        return _OrglabExt.MatrixObject_GetParent(self)
    ColorMap = property(GetColorMap)
    ViewImage = property(GetViewImage, PutViewImage)

# Register MatrixObject in _OrglabExt:
_OrglabExt.MatrixObject_swigregister(MatrixObject)

class DataPlot(DataObjectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.DataPlot_swiginit(self, _OrglabExt.new_DataPlot())
    __swig_destroy__ = _OrglabExt.delete_DataPlot

    def GetColorMap(self):
        return _OrglabExt.DataPlot_GetColorMap(self)

    def GetParent(self):
        return _OrglabExt.DataPlot_GetParent(self)

    def ChangeData(self, pPyDataObj, lpcszDesignation, bKeepModifiers=FALSE):
        return _OrglabExt.DataPlot_ChangeData(self, pPyDataObj, lpcszDesignation, bKeepModifiers)
    Parent = property(GetParent)

# Register DataPlot in _OrglabExt:
_OrglabExt.DataPlot_swigregister(DataPlot)

class GraphObject(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.GraphObject_swiginit(self, _OrglabExt.new_GraphObject())
    __swig_destroy__ = _OrglabExt.delete_GraphObject

    def IsValid(self):
        return _OrglabExt.GraphObject_IsValid(self)

    def GetObjectType(self):
        return _OrglabExt.GraphObject_GetObjectType(self)

    def GetText(self):
        return _OrglabExt.GraphObject_GetText(self)

    def PutText(self, strText):
        return _OrglabExt.GraphObject_PutText(self, strText)
    SetText = PutText

    def GetLeft(self):
        return _OrglabExt.GraphObject_GetLeft(self)

    def PutLeft(self, nLeft):
        return _OrglabExt.GraphObject_PutLeft(self, nLeft)
    SetLeft = PutLeft

    def GetTop(self):
        return _OrglabExt.GraphObject_GetTop(self)

    def PutTop(self, nTop):
        return _OrglabExt.GraphObject_PutTop(self, nTop)
    SetTop = PutTop

    def GetWidth(self):
        return _OrglabExt.GraphObject_GetWidth(self)

    def PutWidth(self, nWidth):
        return _OrglabExt.GraphObject_PutWidth(self, nWidth)
    SetWidth = PutWidth

    def GetHeight(self):
        return _OrglabExt.GraphObject_GetHeight(self)

    def PutHeight(self, nHeight):
        return _OrglabExt.GraphObject_PutHeight(self, nHeight)
    SetHeight = PutHeight

    def GetX(self):
        return _OrglabExt.GraphObject_GetX(self)

    def PutX(self, dX):
        return _OrglabExt.GraphObject_PutX(self, dX)
    SetX = PutX

    def GetY(self):
        return _OrglabExt.GraphObject_GetY(self)

    def PutY(self, dY):
        return _OrglabExt.GraphObject_PutY(self, dY)
    SetY = PutY

    def GetDX(self):
        return _OrglabExt.GraphObject_GetDX(self)

    def PutDX(self, dDX):
        return _OrglabExt.GraphObject_PutDX(self, dDX)
    SetDX = PutDX

    def GetDY(self):
        return _OrglabExt.GraphObject_GetDY(self)

    def PutDY(self, dDY):
        return _OrglabExt.GraphObject_PutDY(self, dDY)
    SetDY = PutDY
    Text = property(GetText, PutText)
    Left = property(GetLeft, PutLeft)
    Top = property(GetTop, PutTop)
    Width = property(GetWidth, PutWidth)
    Height = property(GetHeight, PutHeight)
    X = property(GetX, PutX)
    Y = property(GetY, PutY)
    DX = property(GetDX, PutDX)
    DY = property(GetDY, PutDY)

# Register GraphObject in _OrglabExt:
_OrglabExt.GraphObject_swigregister(GraphObject)

class ProjectInfo(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.ProjectInfo_swiginit(self, _OrglabExt.new_ProjectInfo())
    __swig_destroy__ = _OrglabExt.delete_ProjectInfo

    def GetVersion(self):
        return _OrglabExt.ProjectInfo_GetVersion(self)

    def GetOrgVersion(self):
        return _OrglabExt.ProjectInfo_GetOrgVersion(self)

    def GetParent(self):
        return _OrglabExt.ProjectInfo_GetParent(self)
    Version = property(GetVersion)
    OrgVersion = property(GetOrgVersion)
    Parent = property(GetParent)

# Register ProjectInfo in _OrglabExt:
_OrglabExt.ProjectInfo_swigregister(ProjectInfo)

class Folder(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Folder_swiginit(self, _OrglabExt.new_Folder())
    __swig_destroy__ = _OrglabExt.delete_Folder

    def GetPath(self):
        return _OrglabExt.Folder_GetPath(self)

    def GetIndex(self):
        return _OrglabExt.Folder_GetIndex(self)

    def GetResultText(self, bRecrsive):
        return _OrglabExt.Folder_GetResultText(self, bRecrsive)

    def GetParent(self):
        return _OrglabExt.Folder_GetParent(self)

    def PageBases(self):
        return _OrglabExt.Folder_PageBases(self)

    def __iter__(self):
        return _OrglabExt.Folder___iter__(self)

    def GetFolders(self):
        return _OrglabExt.Folder_GetFolders(self)
    Path = property(GetPath)
    Parent = property(GetParent)
    Folders = property(GetFolders)

# Register Folder in _OrglabExt:
_OrglabExt.Folder_swigregister(Folder)

class TreeNode(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.TreeNode_swiginit(self, _OrglabExt.new_TreeNode())
    __swig_destroy__ = _OrglabExt.delete_TreeNode

    def IsValid(self):
        return _OrglabExt.TreeNode_IsValid(self)

    def __str__(self):
        return _OrglabExt.TreeNode___str__(self)

    def __getattr__(self, strName):
        return _OrglabExt.TreeNode___getattr__(self, strName)

    def GetStrValue(self, *args):
        return _OrglabExt.TreeNode_GetStrValue(self, *args)

    def SetStrValue(self, *args):
        return _OrglabExt.TreeNode_SetStrValue(self, *args)

    def GetIntValue(self, *args):
        return _OrglabExt.TreeNode_GetIntValue(self, *args)

    def SetIntValue(self, *args):
        return _OrglabExt.TreeNode_SetIntValue(self, *args)

    def GetDoubleValue(self, *args):
        return _OrglabExt.TreeNode_GetDoubleValue(self, *args)

    def SetDoubleValue(self, *args):
        return _OrglabExt.TreeNode_SetDoubleValue(self, *args)

    def GetValue(self, *args):
        return _OrglabExt.TreeNode_GetValue(self, *args)

    def PutValue(self, *args):
        return _OrglabExt.TreeNode_PutValue(self, *args)
    SetValue = PutValue

    def GetChildren(self):
        return _OrglabExt.TreeNode_GetChildren(self)

    def __iter__(self):
        return _OrglabExt.TreeNode___iter__(self)

    def GetfirstChild(self):
        return _OrglabExt.TreeNode_GetfirstChild(self)

    def GetnextSibling(self):
        return _OrglabExt.TreeNode_GetnextSibling(self)

    def GetParent(self):
        return _OrglabExt.TreeNode_GetParent(self)
    Children = property(GetChildren)
    firstChild = property(GetfirstChild)
    nextSibling = property(GetnextSibling)
    Parent = property(GetParent)

# Register TreeNode in _OrglabExt:
_OrglabExt.TreeNode_swigregister(TreeNode)

class ColorMap(OriginObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.ColorMap_swiginit(self, _OrglabExt.new_ColorMap())
    __swig_destroy__ = _OrglabExt.delete_ColorMap

    def SetLevels(self, *args):
        return _OrglabExt.ColorMap_SetLevels(self, *args)

# Register ColorMap in _OrglabExt:
_OrglabExt.ColorMap_swigregister(ColorMap)

class OriginCollectionBase(OriginBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionBase_swiginit(self, _OrglabExt.new_OriginCollectionBase())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionBase

    def __iter__(self):
        return _OrglabExt.OriginCollectionBase___iter__(self)

    def __next__(self):
        return _OrglabExt.OriginCollectionBase___next__(self)

    def __len__(self):
        return _OrglabExt.OriginCollectionBase___len__(self)

    def GetCount(self):
        return _OrglabExt.OriginCollectionBase_GetCount(self)

    def GetParent(self):
        return _OrglabExt.OriginCollectionBase_GetParent(self)
    Count = property(GetCount)
    Parent = property(GetParent)

    def	__iter__(self):
    	return self


# Register OriginCollectionBase in _OrglabExt:
_OrglabExt.OriginCollectionBase_swigregister(OriginCollectionBase)

class OriginCollectionDataObjectBases(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionDataObjectBases_swiginit(self, _OrglabExt.new_OriginCollectionDataObjectBases())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionDataObjectBases

    def __next__(self):
        return _OrglabExt.OriginCollectionDataObjectBases___next__(self)

# Register OriginCollectionDataObjectBases in _OrglabExt:
_OrglabExt.OriginCollectionDataObjectBases_swigregister(OriginCollectionDataObjectBases)

class OriginCollectionFolders(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionFolders_swiginit(self, _OrglabExt.new_OriginCollectionFolders())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionFolders

    def __next__(self):
        return _OrglabExt.OriginCollectionFolders___next__(self)

    def GetParent(self):
        return _OrglabExt.OriginCollectionFolders_GetParent(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionFolders___getitem__(self, *args)
    GetItem = __getitem__

    def Add(self, *args):
        return _OrglabExt.OriginCollectionFolders_Add(self, *args)

    def FolderFromPath(self, Path):
        return _OrglabExt.OriginCollectionFolders_FolderFromPath(self, Path)
    Parent = property(GetParent)

# Register OriginCollectionFolders in _OrglabExt:
_OrglabExt.OriginCollectionFolders_swigregister(OriginCollectionFolders)

class OriginCollectionPagesBase(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionPagesBase_swiginit(self, _OrglabExt.new_OriginCollectionPagesBase())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionPagesBase

    def IsValid(self):
        return _OrglabExt.OriginCollectionPagesBase_IsValid(self)

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionPagesBase___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionPagesBase___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionPagesBase___getitem__(self, *args)
    GetItem = __getitem__

# Register OriginCollectionPagesBase in _OrglabExt:
_OrglabExt.OriginCollectionPagesBase_swigregister(OriginCollectionPagesBase)

class OriginCollectionPages(OriginCollectionPagesBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionPages_swiginit(self, _OrglabExt.new_OriginCollectionPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionPages___call__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionPages___getitem__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionPages___next__(self)

# Register OriginCollectionPages in _OrglabExt:
_OrglabExt.OriginCollectionPages_swigregister(OriginCollectionPages)

class OriginCollectionWorksheetPages(OriginCollectionPages):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionWorksheetPages_swiginit(self, _OrglabExt.new_OriginCollectionWorksheetPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionWorksheetPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionWorksheetPages___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionWorksheetPages___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionWorksheetPages___getitem__(self, *args)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionWorksheetPages_Add(self, *args)

# Register OriginCollectionWorksheetPages in _OrglabExt:
_OrglabExt.OriginCollectionWorksheetPages_swigregister(OriginCollectionWorksheetPages)

class OriginCollectionMatrixPages(OriginCollectionPages):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionMatrixPages_swiginit(self, _OrglabExt.new_OriginCollectionMatrixPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionMatrixPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionMatrixPages___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionMatrixPages___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionMatrixPages___getitem__(self, *args)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionMatrixPages_Add(self, *args)

# Register OriginCollectionMatrixPages in _OrglabExt:
_OrglabExt.OriginCollectionMatrixPages_swigregister(OriginCollectionMatrixPages)

class OriginCollectionGraphPages(OriginCollectionPages):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionGraphPages_swiginit(self, _OrglabExt.new_OriginCollectionGraphPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionGraphPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionGraphPages___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionGraphPages___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionGraphPages___getitem__(self, *args)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionGraphPages_Add(self, *args)

# Register OriginCollectionGraphPages in _OrglabExt:
_OrglabExt.OriginCollectionGraphPages_swigregister(OriginCollectionGraphPages)

class OriginCollectionLayoutPages(OriginCollectionPages):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionLayoutPages_swiginit(self, _OrglabExt.new_OriginCollectionLayoutPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionLayoutPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionLayoutPages___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionLayoutPages___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionLayoutPages___getitem__(self, *args)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionLayoutPages_Add(self, *args)

# Register OriginCollectionLayoutPages in _OrglabExt:
_OrglabExt.OriginCollectionLayoutPages_swigregister(OriginCollectionLayoutPages)

class OriginCollectionDataPlots(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionDataPlots_swiginit(self, _OrglabExt.new_OriginCollectionDataPlots())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionDataPlots

    def __next__(self):
        return _OrglabExt.OriginCollectionDataPlots___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionDataPlots___getitem__(self, *args)
    GetItem = __getitem__

# Register OriginCollectionDataPlots in _OrglabExt:
_OrglabExt.OriginCollectionDataPlots_swigregister(OriginCollectionDataPlots)

class OriginCollectionGraphObjects(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionGraphObjects_swiginit(self, _OrglabExt.new_OriginCollectionGraphObjects())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionGraphObjects

    def __next__(self):
        return _OrglabExt.OriginCollectionGraphObjects___next__(self)

    def __call__(self, strName):
        return _OrglabExt.OriginCollectionGraphObjects___call__(self, strName)

    def __getitem__(self, strName):
        return _OrglabExt.OriginCollectionGraphObjects___getitem__(self, strName)

# Register OriginCollectionGraphObjects in _OrglabExt:
_OrglabExt.OriginCollectionGraphObjects_swigregister(OriginCollectionGraphObjects)

class OriginCollectionLayers(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionLayers_swiginit(self, _OrglabExt.new_OriginCollectionLayers())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionLayers

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionLayers___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionLayers___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionLayers___getitem__(self, *args)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionLayers_Add(self, *args)

    def AddCopy(self, *args):
        return _OrglabExt.OriginCollectionLayers_AddCopy(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionLayers_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionLayers in _OrglabExt:
_OrglabExt.OriginCollectionLayers_swigregister(OriginCollectionLayers)

class OriginCollectionGraphLayer(OriginCollectionLayers):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionGraphLayer_swiginit(self, _OrglabExt.new_OriginCollectionGraphLayer())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionGraphLayer

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionGraphLayer___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionGraphLayer___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionGraphLayer___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionGraphLayer_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionGraphLayer in _OrglabExt:
_OrglabExt.OriginCollectionGraphLayer_swigregister(OriginCollectionGraphLayer)

class OriginCollectionWorksheets(OriginCollectionLayers):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionWorksheets_swiginit(self, _OrglabExt.new_OriginCollectionWorksheets())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionWorksheets

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionWorksheets___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionWorksheets___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionWorksheets___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionWorksheets_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionWorksheets in _OrglabExt:
_OrglabExt.OriginCollectionWorksheets_swigregister(OriginCollectionWorksheets)

class OriginCollectionColumns(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionColumns_swiginit(self, _OrglabExt.new_OriginCollectionColumns())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionColumns

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionColumns___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionColumns___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionColumns___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionColumns_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionColumns in _OrglabExt:
_OrglabExt.OriginCollectionColumns_swigregister(OriginCollectionColumns)

class OriginCollectionMatrixsheets(OriginCollectionLayers):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionMatrixsheets_swiginit(self, _OrglabExt.new_OriginCollectionMatrixsheets())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionMatrixsheets

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionMatrixsheets___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionMatrixsheets___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionMatrixsheets___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionMatrixsheets_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionMatrixsheets in _OrglabExt:
_OrglabExt.OriginCollectionMatrixsheets_swigregister(OriginCollectionMatrixsheets)

class OriginCollectionMatrixObjects(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionMatrixObjects_swiginit(self, _OrglabExt.new_OriginCollectionMatrixObjects())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionMatrixObjects

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionMatrixObjects___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionMatrixObjects___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionMatrixObjects___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionMatrixObjects_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionMatrixObjects in _OrglabExt:
_OrglabExt.OriginCollectionMatrixObjects_swigregister(OriginCollectionMatrixObjects)

class OriginCollectionTreeNodes(OriginCollectionBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionTreeNodes_swiginit(self, _OrglabExt.new_OriginCollectionTreeNodes())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionTreeNodes

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionTreeNodes___call__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionTreeNodes___next__(self)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionTreeNodes___getitem__(self, *args)

    def GetParent(self):
        return _OrglabExt.OriginCollectionTreeNodes_GetParent(self)
    Parent = property(GetParent)

# Register OriginCollectionTreeNodes in _OrglabExt:
_OrglabExt.OriginCollectionTreeNodes_swigregister(OriginCollectionTreeNodes)

GROBJTYPE_UNKNOWN = _OrglabExt.GROBJTYPE_UNKNOWN
GROBJTYPE_GROUP = _OrglabExt.GROBJTYPE_GROUP
GROBJTYPE_TEXT = _OrglabExt.GROBJTYPE_TEXT
GROBJTYPE_LEGEND = _OrglabExt.GROBJTYPE_LEGEND
GROBJTYPE_LINE2 = _OrglabExt.GROBJTYPE_LINE2
GROBJTYPE_LINE4 = _OrglabExt.GROBJTYPE_LINE4
GROBJTYPE_POLYLINE = _OrglabExt.GROBJTYPE_POLYLINE
GROBJTYPE_BEZIER = _OrglabExt.GROBJTYPE_BEZIER
GROBJTYPE_RECT = _OrglabExt.GROBJTYPE_RECT
GROBJTYPE_ELLIPSE = _OrglabExt.GROBJTYPE_ELLIPSE
GROBJTYPE_TRIANGLE = _OrglabExt.GROBJTYPE_TRIANGLE
GROBJTYPE_POLYGON = _OrglabExt.GROBJTYPE_POLYGON
GROBJTYPE_POLYGONBEZIER = _OrglabExt.GROBJTYPE_POLYGONBEZIER
GROBJTYPE_COLORSCALE = _OrglabExt.GROBJTYPE_COLORSCALE
GROBJTYPE_BITMAP = _OrglabExt.GROBJTYPE_BITMAP
GROBJTYPE_METAFILE = _OrglabExt.GROBJTYPE_METAFILE
GROBJTYPE_EMETAFILE = _OrglabExt.GROBJTYPE_EMETAFILE
GROBJTYPE_MEMORY = _OrglabExt.GROBJTYPE_MEMORY
GROBJTYPE_LINK = _OrglabExt.GROBJTYPE_LINK
GROBJTYPE_EMBEDDED = _OrglabExt.GROBJTYPE_EMBEDDED
GROBJTYPE_RAKE = _OrglabExt.GROBJTYPE_RAKE
GROBJTYPE_POLYPOLYGON = _OrglabExt.GROBJTYPE_POLYPOLYGON
GROBJTYPE_POLYPOLYLINE = _OrglabExt.GROBJTYPE_POLYPOLYLINE
GROBJTYPE_DATASELECTOR = _OrglabExt.GROBJTYPE_DATASELECTOR
GROBJTYPE_MARKER = _OrglabExt.GROBJTYPE_MARKER
GROBJTYPE_CURSOR = _OrglabExt.GROBJTYPE_CURSOR
GROBJTYPE_TABLE = _OrglabExt.GROBJTYPE_TABLE
GROBJTYPE_SCALER = _OrglabExt.GROBJTYPE_SCALER
GROBJTYPE_BUBBLE_LEGEND = _OrglabExt.GROBJTYPE_BUBBLE_LEGEND
GROBJTYPE_IMG = _OrglabExt.GROBJTYPE_IMG
GROBJTYPE_GROUP_ROOT = _OrglabExt.GROBJTYPE_GROUP_ROOT
LABEL_LONG_NAME = _OrglabExt.LABEL_LONG_NAME
LABEL_UNITS = _OrglabExt.LABEL_UNITS
LABEL_COMMENTS = _OrglabExt.LABEL_COMMENTS
LABEL_PARAM = _OrglabExt.LABEL_PARAM
LABEL_SAMPLE_RATE = _OrglabExt.LABEL_SAMPLE_RATE
LABEL_SPARKLINE = _OrglabExt.LABEL_SPARKLINE
LABEL_UDL = _OrglabExt.LABEL_UDL
LABEL_REPLICATES = _OrglabExt.LABEL_REPLICATES
LABEL_COL_FILTER = _OrglabExt.LABEL_COL_FILTER
LABEL_FORMULA = _OrglabExt.LABEL_FORMULA
LABEL_CATEGORIES = _OrglabExt.LABEL_CATEGORIES
STORAGETYPE_INI = _OrglabExt.STORAGETYPE_INI
STORAGETYPE_BINARY = _OrglabExt.STORAGETYPE_BINARY
STORAGETYPE_ALL = _OrglabExt.STORAGETYPE_ALL
COLFORMAT_NUMERIC = _OrglabExt.COLFORMAT_NUMERIC
COLFORMAT_TEXT = _OrglabExt.COLFORMAT_TEXT
COLFORMAT_TIME = _OrglabExt.COLFORMAT_TIME
COLFORMAT_DATE = _OrglabExt.COLFORMAT_DATE
COLFORMAT_MONTH = _OrglabExt.COLFORMAT_MONTH
COLFORMAT_WEEKDAY = _OrglabExt.COLFORMAT_WEEKDAY
COLFORMAT_TEXT_NUMERIC = _OrglabExt.COLFORMAT_TEXT_NUMERIC
COLTYPE_DESIGN_INVALID = _OrglabExt.COLTYPE_DESIGN_INVALID
COLTYPE_DESIGN_X = _OrglabExt.COLTYPE_DESIGN_X
COLTYPE_DESIGN_Y = _OrglabExt.COLTYPE_DESIGN_Y
COLTYPE_DESIGN_Z = _OrglabExt.COLTYPE_DESIGN_Z
COLTYPE_DESIGN_L = _OrglabExt.COLTYPE_DESIGN_L
COLTYPE_DESIGN_NONE = _OrglabExt.COLTYPE_DESIGN_NONE
COLTYPE_DESIGN_XERR = _OrglabExt.COLTYPE_DESIGN_XERR
COLTYPE_DESIGN_YERR = _OrglabExt.COLTYPE_DESIGN_YERR
COLTYPE_DESIGN_GROUP = _OrglabExt.COLTYPE_DESIGN_GROUP
COLTYPE_DESIGN_SUBJECT = _OrglabExt.COLTYPE_DESIGN_SUBJECT
COLTYPE_DESIGN_WEIGHT = _OrglabExt.COLTYPE_DESIGN_WEIGHT
class OriginCollectionNotePages(OriginCollectionPagesBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionNotePages_swiginit(self, _OrglabExt.new_OriginCollectionNotePages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionNotePages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionNotePages___call__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionNotePages___getitem__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionNotePages___next__(self)

    def Add(self, *args):
        return _OrglabExt.OriginCollectionNotePages_Add(self, *args)

# Register OriginCollectionNotePages in _OrglabExt:
_OrglabExt.OriginCollectionNotePages_swigregister(OriginCollectionNotePages)
cvar = _OrglabExt.cvar
MISSINGVALUE = cvar.MISSINGVALUE
JULIANDATEOFFSET = cvar.JULIANDATEOFFSET

class OriginCollectionExternalDialogPages(OriginCollectionPagesBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.OriginCollectionExternalDialogPages_swiginit(self, _OrglabExt.new_OriginCollectionExternalDialogPages())
    __swig_destroy__ = _OrglabExt.delete_OriginCollectionExternalDialogPages

    def __call__(self, *args):
        return _OrglabExt.OriginCollectionExternalDialogPages___call__(self, *args)

    def __getitem__(self, *args):
        return _OrglabExt.OriginCollectionExternalDialogPages___getitem__(self, *args)

    def __next__(self):
        return _OrglabExt.OriginCollectionExternalDialogPages___next__(self)

# Register OriginCollectionExternalDialogPages in _OrglabExt:
_OrglabExt.OriginCollectionExternalDialogPages_swigregister(OriginCollectionExternalDialogPages)

class ApplicationBase(OriginPyObjBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.ApplicationBase_swiginit(self, _OrglabExt.new_ApplicationBase())
    __swig_destroy__ = _OrglabExt.delete_ApplicationBase
    def __getattr__(self, name):
        return globals()[name]
    MAINWND_HIDE = _OrglabExt.ApplicationBase_MAINWND_HIDE
    MAINWND_SHOW = _OrglabExt.ApplicationBase_MAINWND_SHOW
    MAINWND_SHOWMINIMIZED = _OrglabExt.ApplicationBase_MAINWND_SHOWMINIMIZED
    MAINWND_SHOWMAXIMIZED = _OrglabExt.ApplicationBase_MAINWND_SHOWMAXIMIZED
    MAINWND_SHOW_BRING_TO_FRONT = _OrglabExt.ApplicationBase_MAINWND_SHOW_BRING_TO_FRONT

    def GetVisible(self):
        return _OrglabExt.ApplicationBase_GetVisible(self)

    def PutVisible(self, nVisible):
        return _OrglabExt.ApplicationBase_PutVisible(self, nVisible)
    SetVisible = PutVisible

    def GetIsModified(self):
        return _OrglabExt.ApplicationBase_GetIsModified(self)

    def PutIsModified(self, val):
        return _OrglabExt.ApplicationBase_PutIsModified(self, val)
    SetIsModified = PutIsModified

    def Execute(self, *args):
        return _OrglabExt.ApplicationBase_Execute(self, *args)

    def PutMatrix(self, *args):
        return _OrglabExt.ApplicationBase_PutMatrix(self, *args)
    SetMatrix = PutMatrix

    def GetMatrix(self, Name, format=0):
        return _OrglabExt.ApplicationBase_GetMatrix(self, Name, format)

    def PutWorksheet(self, *args):
        return _OrglabExt.ApplicationBase_PutWorksheet(self, *args)
    SetWorksheet = PutWorksheet

    def GetWorksheet(self, *args):
        return _OrglabExt.ApplicationBase_GetWorksheet(self, *args)

    def BeginSession(self):
        return _OrglabExt.ApplicationBase_BeginSession(self)

    def EndSession(self):
        return _OrglabExt.ApplicationBase_EndSession(self)

    def PageSetValue(self, *args):
        return _OrglabExt.ApplicationBase_PageSetValue(self, *args)

    def PageGetValue(self, *args):
        return _OrglabExt.ApplicationBase_PageGetValue(self, *args)

    def GetLTStr(self, Name):
        return _OrglabExt.ApplicationBase_GetLTStr(self, Name)

    def PutLTStr(self, Name, Value):
        return _OrglabExt.ApplicationBase_PutLTStr(self, Name, Value)
    SetLTStr = PutLTStr

    def GetLTVar(self, Name):
        return _OrglabExt.ApplicationBase_GetLTVar(self, Name)

    def PutLTVar(self, Name, Value):
        return _OrglabExt.ApplicationBase_PutLTVar(self, Name, Value)
    SetLTVar = PutLTVar

    def GetPageString(self, *args):
        return _OrglabExt.ApplicationBase_GetPageString(self, *args)

    def PutPageString(self, Name, LTString, NewValue):
        return _OrglabExt.ApplicationBase_PutPageString(self, Name, LTString, NewValue)
    SetPageString = PutPageString

    def CopyPage(self, *args):
        return _OrglabExt.ApplicationBase_CopyPage(self, *args)
    OPT_NONE = _OrglabExt.ApplicationBase_OPT_NONE
    OPT_MATRIX = _OrglabExt.ApplicationBase_OPT_MATRIX
    OPT_WORKSHEET = _OrglabExt.ApplicationBase_OPT_WORKSHEET
    OPT_GRAPH = _OrglabExt.ApplicationBase_OPT_GRAPH
    OPT_LAYOUT = _OrglabExt.ApplicationBase_OPT_LAYOUT
    OPT_NOTES = _OrglabExt.ApplicationBase_OPT_NOTES
    OPT_EXTERNAL = _OrglabExt.ApplicationBase_OPT_EXTERNAL

    def CreatePage(self, *args):
        return _OrglabExt.ApplicationBase_CreatePage(self, *args)

    def SetRangeName(self, *args):
        return _OrglabExt.ApplicationBase_SetRangeName(self, *args)

    def SetRangeEvent(self, strRangeName, eventtype=-1, bSet=True):
        return _OrglabExt.ApplicationBase_SetRangeEvent(self, strRangeName, eventtype, bSet)

    def NewDataRange(self, *args):
        return _OrglabExt.ApplicationBase_NewDataRange(self, *args)

    def NewProject(self):
        return _OrglabExt.ApplicationBase_NewProject(self)

    def Exit(self):
        return _OrglabExt.ApplicationBase_Exit(self)

    def GetEmptyTree(self):
        return _OrglabExt.ApplicationBase_GetEmptyTree(self)

    def PutTree(self, strName, trNode):
        return _OrglabExt.ApplicationBase_PutTree(self, strName, trNode)
    RM_LET_ORIGIN_DECIDE = _OrglabExt.ApplicationBase_RM_LET_ORIGIN_DECIDE
    RM_HIDE_WITH_NO_FOR_ANSWER = _OrglabExt.ApplicationBase_RM_HIDE_WITH_NO_FOR_ANSWER
    RM_HIDE_WITH_YES_FOR_ANSWER = _OrglabExt.ApplicationBase_RM_HIDE_WITH_YES_FOR_ANSWER

    def GetReminderMsg(self):
        return _OrglabExt.ApplicationBase_GetReminderMsg(self)

    def PutReminderMsg(self, val):
        return _OrglabExt.ApplicationBase_PutReminderMsg(self, val)
    SetReminderMsg = PutReminderMsg

    def ProjectSearch(self, Text):
        return _OrglabExt.ApplicationBase_ProjectSearch(self, Text)

    def GetPageBases(self):
        return _OrglabExt.ApplicationBase_GetPageBases(self)

    def GetPages(self):
        return _OrglabExt.ApplicationBase_GetPages(self)

    def GetWorksheetPages(self):
        return _OrglabExt.ApplicationBase_GetWorksheetPages(self)

    def GetGraphPages(self):
        return _OrglabExt.ApplicationBase_GetGraphPages(self)

    def GetLayoutPages(self):
        return _OrglabExt.ApplicationBase_GetLayoutPages(self)

    def GetMatrixPages(self):
        return _OrglabExt.ApplicationBase_GetMatrixPages(self)

    def GetNotes(self):
        return _OrglabExt.ApplicationBase_GetNotes(self)

    def GetExternalDialogPages(self):
        return _OrglabExt.ApplicationBase_GetExternalDialogPages(self)

    def GetActiveFolder(self):
        return _OrglabExt.ApplicationBase_GetActiveFolder(self)

    def PutActiveFolder(self, pFolder):
        return _OrglabExt.ApplicationBase_PutActiveFolder(self, pFolder)
    SetActiveFolder = PutActiveFolder

    def GetActivePage(self):
        return _OrglabExt.ApplicationBase_GetActivePage(self)

    def GetActiveNote(self):
        return _OrglabExt.ApplicationBase_GetActiveNote(self)

    def GetName(self):
        return _OrglabExt.ApplicationBase_GetName(self)

    def GetCanClose(self):
        return _OrglabExt.ApplicationBase_GetCanClose(self)

    def PutCanClose(self, val):
        return _OrglabExt.ApplicationBase_PutCanClose(self, val)
    SetCanClose = PutCanClose

    def OriginVer(self):
        return _OrglabExt.ApplicationBase_OriginVer(self)

    def GetActiveLayer(self):
        return _OrglabExt.ApplicationBase_GetActiveLayer(self)

    def GetProjectName(self):
        return _OrglabExt.ApplicationBase_GetProjectName(self)
    APPPATH_USER = _OrglabExt.ApplicationBase_APPPATH_USER
    APPPATH_GROUP = _OrglabExt.ApplicationBase_APPPATH_GROUP
    APPPATH_PROGRAM = _OrglabExt.ApplicationBase_APPPATH_PROGRAM

    def Path(self, nPathType):
        return _OrglabExt.ApplicationBase_Path(self, nPathType)

    def GetRootFolder(self):
        return _OrglabExt.ApplicationBase_GetRootFolder(self)

    def FindGraphLayer(self, Name):
        return _OrglabExt.ApplicationBase_FindGraphLayer(self, Name)

    def FindMatrixSheet(self, Name):
        return _OrglabExt.ApplicationBase_FindMatrixSheet(self, Name)

    def FindWorksheet(self, Name):
        return _OrglabExt.ApplicationBase_FindWorksheet(self, Name)

    def ActiveNotePage(self):
        return _OrglabExt.ApplicationBase_ActiveNotePage(self)

    def GetTree(self, strName):
        return _OrglabExt.ApplicationBase_GetTree(self, strName)

    def EmptyTree(self):
        return _OrglabExt.ApplicationBase_EmptyTree(self)

    def GetNotePage(self, strPageName):
        return _OrglabExt.ApplicationBase_GetNotePage(self, strPageName)

    def CreateNotePage(self, *args):
        return _OrglabExt.ApplicationBase_CreateNotePage(self, *args)

    def GetProjectInfo(self):
        return _OrglabExt.ApplicationBase_GetProjectInfo(self)

    def SetModified(self, bNewValue):
        return _OrglabExt.ApplicationBase_SetModified(self, bNewValue)

    def DestroyPage(self, strPageName):
        return _OrglabExt.ApplicationBase_DestroyPage(self, strPageName)

    def Reset(self, bReduceWks=True, bReduceMat=True):
        return _OrglabExt.ApplicationBase_Reset(self, bReduceWks, bReduceMat)

    def Save(self, *args):
        return _OrglabExt.ApplicationBase_Save(self, *args)

    def Load(self, strPath, bReadOnly=False):
        return _OrglabExt.ApplicationBase_Load(self, strPath, bReadOnly)

    def LoadPage(self, strPathName, options=CREATEOPT_VISIBLE_SAME):
        return _OrglabExt.ApplicationBase_LoadPage(self, strPathName, options)

    def AddTree(self, strName, trNode):
        return _OrglabExt.ApplicationBase_AddTree(self, strName, trNode)

    def Run(self):
        return _OrglabExt.ApplicationBase_Run(self)

    def LT_evaluate(self, lpcszVar):
        return _OrglabExt.ApplicationBase_LT_evaluate(self, lpcszVar)

    def LT_execute(self, lpcszScript):
        return _OrglabExt.ApplicationBase_LT_execute(self, lpcszScript)

    def LT_get_str(self, lpcszVar):
        return _OrglabExt.ApplicationBase_LT_get_str(self, lpcszVar)

    def LT_set_str(self, lpcszVar, lpcszVal):
        return _OrglabExt.ApplicationBase_LT_set_str(self, lpcszVar, lpcszVal)

    def LT_get_var(self, lpcszVar):
        return _OrglabExt.ApplicationBase_LT_get_var(self, lpcszVar)

    def LT_set_var(self, lpcszVar, dValue):
        return _OrglabExt.ApplicationBase_LT_set_var(self, lpcszVar, dValue)
    Visible = property(GetVisible, SetVisible)
    IsModified = property(GetIsModified, SetIsModified)
    ActiveFolder = property(GetActiveFolder, SetActiveFolder)
    CanClose = property(GetCanClose, SetCanClose)
    PageBases = property(GetPageBases)
    Pages = property(GetPages)
    GraphPages = property(GetGraphPages)
    LayoutPages = property(GetLayoutPages)
    WorksheetPages = property(GetWorksheetPages)
    MatrixPages = property(GetMatrixPages)
    Notes = property(GetNotes)
    ExternalDialogPages = property(GetExternalDialogPages)
    RootFolder = property(GetRootFolder)
    ProjectInfo = property(GetProjectInfo)
    Name = property(GetName)
    ActivePage = property(GetActivePage)
    ActiveNote = property(GetActiveNote)
    ActiveLayer = property(GetActiveLayer)

# Register ApplicationBase in _OrglabExt:
_OrglabExt.ApplicationBase_swigregister(ApplicationBase)

class Application(ApplicationBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _OrglabExt.Application_swiginit(self, _OrglabExt.new_Application())
    __swig_destroy__ = _OrglabExt.delete_Application

# Register Application in _OrglabExt:
_OrglabExt.Application_swigregister(Application)



