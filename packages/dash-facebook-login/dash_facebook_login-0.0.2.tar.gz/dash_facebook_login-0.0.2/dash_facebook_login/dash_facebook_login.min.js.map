{"version":3,"sources":["webpack://dash_facebook_login/webpack/bootstrap","webpack://dash_facebook_login/external \"PropTypes\"","webpack://dash_facebook_login/external \"React\"","webpack://dash_facebook_login/./src/lib/components/DashFacebookLogin.react.js","webpack://dash_facebook_login/./src/lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","DashFacebookLogin","props","state","isSdkLoaded","console","debug","document","getElementById","this","setIsSdkLoaded","refreshLoginStatus","setFbAsyncInit","loadSdkAsynchronously","fbRoot","createElement","id","body","appendChild","_prevProps","prevState","status","FB","XFBML","parse","authStatusChangeListener","Event","unsubscribe","authResponseChangeSubscription","setProps","setState","onFacebookLoginResponseLocal","onFacebookLoginResponse","authStatusChangeSubscription","response","subscribe","appId","version","cookie","xfbml","frictionlessRequests","fbAsyncInit","init","element","fjs","js","language","getElementsByTagName","src","parentNode","insertBefore","getLoginStatus","facebookLoginResponse","autoLogoutLink","scope","size","defaultAudience","layout","buttonType","useContinueAs","className","data-auto-logout-link","data-scope","data-size","data-default-audience","data-button-type","data-layout","data-use-continue-as","data-width","Component","defaultProps","propTypes","PropTypes","string","func","isRequired","bool","oneOf"],"mappings":"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","file":"dash_facebook_login.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","(function() { module.exports = window[\"PropTypes\"]; }());","(function() { module.exports = window[\"React\"]; }());","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * DashFacebookLogin provides a Facebook login button for Plotly Dash dashboards.\n * For details on its configuration, see https://developers.facebook.com/docs/facebook-login/web/login-button/\n */\nexport default class DashFacebookLogin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSdkLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        console.debug(\"[DashFacebookLogin] componentDidMount\");\n        if (document.getElementById('facebook-jssdk')) {\n            console.debug(\"[DashFacebookLogin] facebook-jssdk already exists\");\n            this.setIsSdkLoaded();\n            this.refreshLoginStatus();\n            return;\n        }\n        console.debug(\"[DashFacebookLogin] facebook-jssdk doesn't yet exist\");\n        this.setFbAsyncInit();\n        this.loadSdkAsynchronously();\n        let fbRoot = document.getElementById('fb-root');\n        if (!fbRoot) {\n            fbRoot = document.createElement('div');\n            fbRoot.id = 'fb-root';\n            document.body.appendChild(fbRoot);\n        }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n        console.debug(\"[DashFacebookLogin] componentDidUpdate\");\n        if (!prevState.isSdkLoaded && this.state.isSdkLoaded) {\n            console.debug(\"[DashFacebookLogin] The SDK has just loaded\");\n            if (!this.props.status) {\n                // The status is not automatically loaded, so we have to load it\n                this.refreshLoginStatus();\n            }\n            // We have to ask the Facebook SDK to rerender the button if\n            // some properties changed\n            window.FB.XFBML.parse();\n        }\n        \n    }\n\n    componentWillUnmount() {\n        console.debug(\"[DashFacebookLogin] componentWillUnmount\");\n        if (this.authStatusChangeListener != null) {\n            window.FB.Event.unsubscribe('auth.statusChange', this.authStatusChangeListener);\n            this.authStatusChangeListener = null;\n        }\n        if (this.authResponseChangeSubscription != null) {\n            window.FB.Event.unsubscribe('auth.authResponseChange', this.authResponseChangeSubscription);\n            this.authResponseChangeSubscription = null;\n        }\n        console.debug(\"[DashFacebookLogin] Unsubscribed change listeners\");\n    }\n\n    setIsSdkLoaded() {\n        console.debug(\"[DashFacebookLogin] setIsSdkLoaded\");\n        const { setProps } = this.props;\n        this.setState({ isSdkLoaded: true });\n        const onFacebookLoginResponseLocal = this.onFacebookLoginResponse;\n        this.authStatusChangeSubscription = function (response) {\n            onFacebookLoginResponseLocal(setProps, response);\n        };\n        this.authResponseChangeSubscription = function (response) {\n            onFacebookLoginResponseLocal(setProps, response);\n        };\n        window.FB.Event.subscribe('auth.statusChange', this.authStatusChangeSubscription);\n        window.FB.Event.subscribe('auth.authResponseChange', this.authResponseChangeSubscription);\n        console.debug(\"[DashFacebookLogin] Subscribed change listeners\");\n    }\n\n    setFbAsyncInit() {\n        const {\n            appId,\n            version,\n            cookie,\n            status,\n            xfbml,\n            frictionlessRequests,\n            setProps,\n        } = this.props;\n        window.fbAsyncInit = () => {\n            window.FB.init({\n                appId,\n                version,\n                cookie,\n                status,\n                xfbml,\n                frictionlessRequests,\n            });\n            this.setIsSdkLoaded();\n        };\n    }\n\n    loadSdkAsynchronously() {\n        const { language } = this.props;\n        ((d, s, id) => {\n            const element = d.getElementsByTagName(s)[0];\n            const fjs = element;\n            let js = element;\n            if (d.getElementById(id)) { return; }\n            js = d.createElement(s); js.id = id;\n            js.src = `https://connect.facebook.net/${language}/sdk.js`;\n            fjs.parentNode.insertBefore(js, fjs);\n        })(document, 'script', 'facebook-jssdk');\n    }\n\n    refreshLoginStatus() {\n        console.debug(\"[DashFacebookLogin] refreshLoginStatus\");\n        const { setProps } = this.props;\n        const onFacebookLoginResponseLocal = this.onFacebookLoginResponse;\n        window.FB.getLoginStatus(function (response) {\n            onFacebookLoginResponseLocal(setProps, response);\n        })\n    }\n\n    onFacebookLoginResponse(setProps, response) {\n        console.debug(\"[DashFacebookLogin] onFacebookLoginResponse\");\n        setProps({\n            facebookLoginResponse: response,\n        });\n    }\n\n    render() {\n        const {\n            id,\n            autoLogoutLink,\n            scope,\n            size,\n            defaultAudience,\n            layout,\n            buttonType,\n            useContinueAs,\n            className,\n        } = this.props;\n        return (<div\n            id={id}\n            className={className}\n            data-auto-logout-link={autoLogoutLink}\n            data-scope={scope}\n            data-size={size}\n            data-default-audience={defaultAudience}\n\n            data-button-type={buttonType}\n            data-layout={layout}\n            \n            data-use-continue-as={useContinueAs}\n            data-width=\"\"\n        ></div>);\n    }\n}\n\nDashFacebookLogin.defaultProps = {\n    language: \"en_US\",\n    version: \"v8.0\",\n    cookie: false,\n    status: false,\n    xfbml: false,\n    frictionlessRequests: false,\n\n    autoLogoutLink: false,\n    scope: \"public_profile\",\n    size: \"small\",\n    defaultAudience: \"friends\",\n    layout: \"default\",\n    buttonType: \"continue_with\",\n    useContinueAs: false,\n\n    className: \"fb-login-button\",\n};\n\nDashFacebookLogin.propTypes = {\n    ///////////////\n    // Dash options\n    ///////////////\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func,\n\n\n\n    ///////////////////\n    // Facebook options\n    ///////////////////\n    /**\n     * Your Facebook application ID. If you don't have one find it in the App dashboard\n     * or go there to create a new app.\n     */\n    appId: PropTypes.string.isRequired,\n\n    /**\n     * The language code, such as \"en_US\".\n     * @default en_US\n     */\n    language: PropTypes.string,\n\n    /**\n     * Determines which versions of the Graph API and any API dialogs or\n     * plugins are invoked when using the .api() and .ui() functions. Valid\n     * values are determined by currently available versions, such as 'v2.0'.\n     * @default v8.0\n     */\n    version: PropTypes.string,\n\n    /**\n     * Determines whether a cookie is created for the session or not. If enabled,\n     * it can be accessed by server-side code.\n     * @default false\n     */\n    cookie: PropTypes.bool,\n\n    /**\n     * Determines whether the current login status of the user is freshly retrieved\n     * on every page load. If this is disabled, that status will have to be manually\n     * retrieved using .getLoginStatus().\n     * @default false\n     */\n    status: PropTypes.bool,\n\n    /**\n     * Determines whether XFBML tags used by social plugins are parsed, and\n     * therefore whether the plugins are rendered or not.\n     * @default false\n     */\n    xfbml: PropTypes.bool,\n\n    /**\n     * Frictionless Requests are available to games on Facebook.com or on mobile\n     * web using the JavaScript SDK. This parameter determines whether they are\n     * enabled.\n     * @default false\n     */\n    frictionlessRequests: PropTypes.bool,\n\n\n\n    ///////////////////////\n    // Login button options\n    ///////////////////////\n    /**\n     * If enabled, the button will change to a logout button when the user is logged in.\n     * @default false\n     */\n    autoLogoutLink: PropTypes.bool,\n\n    /**\n     * The list of permissions to request during login.\n     * @default public_profile\n    */\n    scope: PropTypes.string,\n\n    /**\n     * Picks one of the size options for the button.\n     * @default small\n     */\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n\n    /**\n     * Determines what audience will be selected by default, when requesting write permissions.\n     * @default friends\n     */\n    defaultAudience: PropTypes.oneOf([\"everyone\", \"friends\", \"only_me\"]),\n\n    /**\n     * Determines the display type of the button.\n     * @default default\n     */\n    layout: PropTypes.oneOf([\"default\", \"rounded\"]),\n\n    /**\n     * Determines the type of button text.\n     * @default continue_with\n     */\n    buttonType: PropTypes.oneOf([\"continue_with\", \"login_with\"]),\n\n    /**\n     * Determines whether to show the user's profile picture when available.\n     * @default false\n     */\n    useContinueAs: PropTypes.bool,\n    \n\n\n    ////////////////\n    // Other options\n    ////////////////\n\n    /**\n     * A custom class to add to the button.\n     * @default fb-login-button\n     */\n    className: PropTypes.string,\n\n    /**\n     * The properties returned by the Facebook login callback.\n     */\n    facebookLoginResponse: PropTypes.object,\n};\n","/* eslint-disable import/prefer-default-export */\nimport DashFacebookLogin from './components/DashFacebookLogin.react';\n\nexport {\n    DashFacebookLogin\n};\n"],"sourceRoot":""}