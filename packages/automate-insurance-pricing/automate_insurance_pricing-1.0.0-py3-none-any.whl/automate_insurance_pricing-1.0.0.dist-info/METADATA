Metadata-Version: 2.1
Name: automate-insurance-pricing
Version: 1.0.0
Summary: Bunch of functions for insurance pricing purposes
Home-page: https://github.com/nassmim/automate-insurance-pricing
Author: Nassim Ezzakraoui
Author-email: nassmim972@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: ~=3.7
Description-Content-Type: text/markdown
Requires-Dist: chainladder (~=0.7)
Requires-Dist: hyperopt (~=0.2)
Requires-Dist: joypy (~=0.2)
Requires-Dist: matplotlib (~=3.1)
Requires-Dist: numpy (~=1.18)
Requires-Dist: openpyxl (~=3.0)
Requires-Dist: pandas (~=1.0)
Requires-Dist: scikit-learn (~=0.22)
Requires-Dist: scipy (~=1.4)
Requires-Dist: seaborn (~=0.10)
Requires-Dist: statsmodels (~=0.11)
Requires-Dist: xlrd (~=1.2)
Requires-Dist: XlsxWriter (~=1.2)
Requires-Dist: xlwings (~=0.19)

# automate-insurance-pricing

## Introduction
Library built on top of pandas gathering within submodules a bunch of functions aiming at speeding up usual tasks while dealing with data prep, visualization, profitability analysis and risk modelling in insurance field.


# Getting Started

## 1.	Installation process

To install use pip: pip install chainladder

Alternatively, install directly from github: pip install git+https://github.com/nassmim/automate-insurance-pricing-nezz

* Note: This package requires Python 3.7 and later.* 

## 2.	Software/Libraries dependencies

Below the list of necessary libraries:


* *chainladder==0.7.1*
* *docx-mailmerge==0.5.0*
* *graphviz==0.13.2*
* *hyperopt==0.2.3*
* *imbalanced-learn==0.6.2*
* *joypy==0.2.2*
* *lightgbm==2.3.0*
* *matplotlib==3.1.3*
* *numpy==1.18.1*
* *openpyxl==3.0.3*
* *pandas==1.0.3*
* *scikit-learn==0.22.1*
* *scipy==1.4.1*
* *seaborn==0.10.0*
* *statsmodels==0.11.1*
* *streamlit==0.59.0*
* *xgboost==0.90*
* *xlrd==1.2.0*
* *XlsxWriter==1.2.7*
* *xlwings==0.19.2*



# Contribute
Anyone willing to make this library more exhaustive and efficient  


