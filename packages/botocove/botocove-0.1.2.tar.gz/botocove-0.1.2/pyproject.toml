[tool.poetry]
name = "botocove"
version = "0.1.2"
description = "A simple decorator to run functions against all AWS accounts in an organization"
authors = ["Dave Connell <daveconn41@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/connelldave/botocove"
keywords = ["AWS", "organizations", "AWS organizations", "boto3"]

[tool.poetry.dependencies]
python = "^3.8"
boto3 = "^1.16.12"

[tool.poetry.dev-dependencies]
pytest = "^6.1.2"
pytest-mock = "^3.3.1"
isort = "^5.6.4"
flakehell = "^0.7.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=88

[tool.flake8]


[tool.flakehell]
# optionally inherit from remote config (or local if you want)
# specify any flake8 options. For example, exclude "example.py":
max-line-length = 88
exclude = [".git","__pycache__",".venv"]
max-complexity = 8
select = ["B","H","C","E","F","W"]
# make output nice
format = "grouped"
# 80 chars aren't enough in 21 century
max_line_length = 90
# show line of source code in output
show_source = true

# list of plugins and rules for them
[tool.flakehell.plugins]
# enable everything that starts from `flake8-`
"flake8-*" = ["+*"]


[tool.black]
line_length=88

[tool.pytest.ini_options]
addopts = "-vv"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]
testpaths = [
    "tests",
]