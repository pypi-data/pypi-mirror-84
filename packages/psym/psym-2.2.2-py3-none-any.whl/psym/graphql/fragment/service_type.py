#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql_client.runtime.datetime_utils import DATETIME_FIELD
from gql_client.runtime.graphql_client import GraphqlClient
from gql_client.runtime.reporter import FailedOperationException
from gql import gql
from gql.transport.exceptions import TransportQueryError
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional, Dict
from time import perf_counter
from dataclasses_json import DataClassJsonMixin

from .property_type import PropertyTypeFragment, QUERY as PropertyTypeFragmentQuery
from .service_endpoint_definition import ServiceEndpointDefinitionFragment, QUERY as ServiceEndpointDefinitionFragmentQuery
QUERY: List[str] = PropertyTypeFragmentQuery + ServiceEndpointDefinitionFragmentQuery + ["""
fragment ServiceTypeFragment on ServiceType {
  id
  name
  hasCustomer
  propertyTypes {
    ...PropertyTypeFragment
  }
  endpointDefinitions {
    ...ServiceEndpointDefinitionFragment
  }
}

"""]

@dataclass
class ServiceTypeFragment(DataClassJsonMixin):
    @dataclass
    class PropertyType(PropertyTypeFragment):
        pass

    @dataclass
    class ServiceEndpointDefinition(ServiceEndpointDefinitionFragment):
        pass

    id: str
    name: str
    hasCustomer: bool
    propertyTypes: List[PropertyType]
    endpointDefinitions: List[ServiceEndpointDefinition]
