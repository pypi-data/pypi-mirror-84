#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql_client.runtime.datetime_utils import DATETIME_FIELD
from gql_client.runtime.graphql_client import GraphqlClient
from gql_client.runtime.client import OperationException
from gql_client.runtime.reporter import FailedOperationException
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional, Dict
from time import perf_counter
from dataclasses_json import DataClassJsonMixin

from .equipment_port_definition import EquipmentPortDefinitionFragment, QUERY as EquipmentPortDefinitionFragmentQuery
from .link import LinkFragment, QUERY as LinkFragmentQuery
from .property import PropertyFragment, QUERY as PropertyFragmentQuery
QUERY: List[str] = EquipmentPortDefinitionFragmentQuery + LinkFragmentQuery + PropertyFragmentQuery + ["""
fragment EquipmentPortFragment on EquipmentPort {
  id
  properties {
    ...PropertyFragment
  }
  definition {
    ...EquipmentPortDefinitionFragment
  }
  link {
    ...LinkFragment
  }
}

"""]

@dataclass
class EquipmentPortFragment(DataClassJsonMixin):
    @dataclass
    class Property(PropertyFragment):
        pass

    @dataclass
    class EquipmentPortDefinition(EquipmentPortDefinitionFragment):
        pass

    @dataclass
    class Link(LinkFragment):
        pass

    id: str
    properties: List[Property]
    definition: EquipmentPortDefinition
    link: Optional[Link]
