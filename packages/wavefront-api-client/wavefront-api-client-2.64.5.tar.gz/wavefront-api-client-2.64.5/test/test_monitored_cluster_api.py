# coding: utf-8

"""
    Wavefront REST API

    <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>  # noqa: E501

    OpenAPI spec version: v2
    Contact: chitimba@wavefront.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import wavefront_api_client
from wavefront_api_client.api.monitored_cluster_api import MonitoredClusterApi  # noqa: E501
from wavefront_api_client.rest import ApiException


class TestMonitoredClusterApi(unittest.TestCase):
    """MonitoredClusterApi unit test stubs"""

    def setUp(self):
        self.api = wavefront_api_client.api.monitored_cluster_api.MonitoredClusterApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_cluster_tag(self):
        """Test case for add_cluster_tag

        Add a tag to a specific cluster  # noqa: E501
        """
        pass

    def test_create_cluster(self):
        """Test case for create_cluster

        Create a specific cluster  # noqa: E501
        """
        pass

    def test_delete_cluster(self):
        """Test case for delete_cluster

        Delete a specific cluster  # noqa: E501
        """
        pass

    def test_get_all_cluster(self):
        """Test case for get_all_cluster

        Get all monitored clusters  # noqa: E501
        """
        pass

    def test_get_cluster(self):
        """Test case for get_cluster

        Get a specific cluster  # noqa: E501
        """
        pass

    def test_get_cluster_tags(self):
        """Test case for get_cluster_tags

        Get all tags associated with a specific cluster  # noqa: E501
        """
        pass

    def test_merge_clusters(self):
        """Test case for merge_clusters

        Merge two monitored clusters.  The first cluster will remain and the second cluster will be deleted, with its id added as an alias to the first cluster.  # noqa: E501
        """
        pass

    def test_remove_cluster_tag(self):
        """Test case for remove_cluster_tag

        Remove a tag from a specific cluster  # noqa: E501
        """
        pass

    def test_set_cluster_tags(self):
        """Test case for set_cluster_tags

        Set all tags associated with a specific cluster  # noqa: E501
        """
        pass

    def test_update_cluster(self):
        """Test case for update_cluster

        Update a specific cluster  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
