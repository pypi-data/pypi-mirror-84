# coding: utf-8

"""
    Wavefront REST API

    <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>  # noqa: E501

    OpenAPI spec version: v2
    Contact: chitimba@wavefront.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import wavefront_api_client
from wavefront_api_client.api.role_api import RoleApi  # noqa: E501
from wavefront_api_client.rest import ApiException


class TestRoleApi(unittest.TestCase):
    """RoleApi unit test stubs"""

    def setUp(self):
        self.api = wavefront_api_client.api.role_api.RoleApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_assignees(self):
        """Test case for add_assignees

        Add multiple users and user groups to a specific role  # noqa: E501
        """
        pass

    def test_create_role(self):
        """Test case for create_role

        Create a specific role  # noqa: E501
        """
        pass

    def test_delete_role(self):
        """Test case for delete_role

        Delete a specific role  # noqa: E501
        """
        pass

    def test_get_all_roles(self):
        """Test case for get_all_roles

        Get all roles for a customer  # noqa: E501
        """
        pass

    def test_get_role(self):
        """Test case for get_role

        Get a specific role  # noqa: E501
        """
        pass

    def test_grant_permission_to_roles(self):
        """Test case for grant_permission_to_roles

        Grants a single permission to role(s)  # noqa: E501
        """
        pass

    def test_remove_assignees(self):
        """Test case for remove_assignees

        Remove multiple users and user groups from a specific role  # noqa: E501
        """
        pass

    def test_revoke_permission_from_roles(self):
        """Test case for revoke_permission_from_roles

        Revokes a single permission from role(s)  # noqa: E501
        """
        pass

    def test_update_role(self):
        """Test case for update_role

        Update a specific role  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
