# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from account_pb2 import (
    Account as account_pb2___Account,
    AccountUser as account_pb2___AccountUser,
    AccountUserRole as account_pb2___AccountUserRole,
    Opportunity as account_pb2___Opportunity,
)

from billing_pb2 import (
    Charge as billing_pb2___Charge,
    Invoice as billing_pb2___Invoice,
    InvoiceLineItem as billing_pb2___InvoiceLineItem,
    Plan as billing_pb2___Plan,
    Product as billing_pb2___Product,
    Refund as billing_pb2___Refund,
    SavedPaymentMethod as billing_pb2___SavedPaymentMethod,
    Subscription as billing_pb2___Subscription,
    SubscriptionItem as billing_pb2___SubscriptionItem,
)

from collaboration_entity_pb2 import (
    Message as collaboration_entity_pb2___Message,
    Thread as collaboration_entity_pb2___Thread,
)

from common_pb2 import (
    RequestContext as common_pb2___RequestContext,
)

from conversation_pb2 import (
    Attachment as conversation_pb2___Attachment,
    Conversation as conversation_pb2___Conversation,
    ConversationSummary as conversation_pb2___ConversationSummary,
    LatestMessage as conversation_pb2___LatestMessage,
    Message as conversation_pb2___Message,
)

from external_domain_model_pb2 import (
    IntercomCompany as external_domain_model_pb2___IntercomCompany,
    IntercomContact as external_domain_model_pb2___IntercomContact,
    SalesforceAccount as external_domain_model_pb2___SalesforceAccount,
    SalesforceContact as external_domain_model_pb2___SalesforceContact,
    StripeCustomer as external_domain_model_pb2___StripeCustomer,
    ZendeskOrganization as external_domain_model_pb2___ZendeskOrganization,
    ZendeskUser as external_domain_model_pb2___ZendeskUser,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.field_mask_pb2 import (
    FieldMask as google___protobuf___field_mask_pb2___FieldMask,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from organization_pb2 import (
    AccessKey as organization_pb2___AccessKey,
    Organization as organization_pb2___Organization,
    OrganizationUser as organization_pb2___OrganizationUser,
    PushNotificationConfig as organization_pb2___PushNotificationConfig,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
type___EventTypeValue = EventTypeValue
EventType: _EventType
class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    EVENT_TYPE_UNSPECIFIED = typing___cast(EventTypeValue, 0)
    CREATED = typing___cast(EventTypeValue, 1)
    UPDATED = typing___cast(EventTypeValue, 2)
    DELETED = typing___cast(EventTypeValue, 3)
EVENT_TYPE_UNSPECIFIED = typing___cast(EventTypeValue, 0)
CREATED = typing___cast(EventTypeValue, 1)
UPDATED = typing___cast(EventTypeValue, 2)
DELETED = typing___cast(EventTypeValue, 3)
type___EventType = EventType

class Entity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def organization(self) -> organization_pb2___Organization: ...

    @property
    def organization_user(self) -> organization_pb2___OrganizationUser: ...

    @property
    def push_notification_config(self) -> organization_pb2___PushNotificationConfig: ...

    @property
    def access_key(self) -> organization_pb2___AccessKey: ...

    @property
    def note_thread(self) -> collaboration_entity_pb2___Thread: ...

    @property
    def note_message(self) -> collaboration_entity_pb2___Message: ...

    @property
    def account(self) -> account_pb2___Account: ...

    @property
    def account_user(self) -> account_pb2___AccountUser: ...

    @property
    def account_user_role(self) -> account_pb2___AccountUserRole: ...

    @property
    def opportunity(self) -> account_pb2___Opportunity: ...

    @property
    def invoice(self) -> billing_pb2___Invoice: ...

    @property
    def product(self) -> billing_pb2___Product: ...

    @property
    def plan(self) -> billing_pb2___Plan: ...

    @property
    def subscription(self) -> billing_pb2___Subscription: ...

    @property
    def invoice_line_item(self) -> billing_pb2___InvoiceLineItem: ...

    @property
    def subscription_item(self) -> billing_pb2___SubscriptionItem: ...

    @property
    def charge(self) -> billing_pb2___Charge: ...

    @property
    def saved_payment_method(self) -> billing_pb2___SavedPaymentMethod: ...

    @property
    def refund(self) -> billing_pb2___Refund: ...

    @property
    def conversation(self) -> conversation_pb2___Conversation: ...

    @property
    def message(self) -> conversation_pb2___Message: ...

    @property
    def attachment(self) -> conversation_pb2___Attachment: ...

    @property
    def latest_message(self) -> conversation_pb2___LatestMessage: ...

    @property
    def conversation_summary(self) -> conversation_pb2___ConversationSummary: ...

    @property
    def event(self) -> type___Event: ...

    @property
    def salesforce_account(self) -> external_domain_model_pb2___SalesforceAccount: ...

    @property
    def salesforce_contact(self) -> external_domain_model_pb2___SalesforceContact: ...

    @property
    def intercom_company(self) -> external_domain_model_pb2___IntercomCompany: ...

    @property
    def intercom_contact(self) -> external_domain_model_pb2___IntercomContact: ...

    @property
    def zendesk_organization(self) -> external_domain_model_pb2___ZendeskOrganization: ...

    @property
    def zendesk_user(self) -> external_domain_model_pb2___ZendeskUser: ...

    @property
    def stripe_customer(self) -> external_domain_model_pb2___StripeCustomer: ...

    def __init__(self,
        *,
        organization : typing___Optional[organization_pb2___Organization] = None,
        organization_user : typing___Optional[organization_pb2___OrganizationUser] = None,
        push_notification_config : typing___Optional[organization_pb2___PushNotificationConfig] = None,
        access_key : typing___Optional[organization_pb2___AccessKey] = None,
        note_thread : typing___Optional[collaboration_entity_pb2___Thread] = None,
        note_message : typing___Optional[collaboration_entity_pb2___Message] = None,
        account : typing___Optional[account_pb2___Account] = None,
        account_user : typing___Optional[account_pb2___AccountUser] = None,
        account_user_role : typing___Optional[account_pb2___AccountUserRole] = None,
        opportunity : typing___Optional[account_pb2___Opportunity] = None,
        invoice : typing___Optional[billing_pb2___Invoice] = None,
        product : typing___Optional[billing_pb2___Product] = None,
        plan : typing___Optional[billing_pb2___Plan] = None,
        subscription : typing___Optional[billing_pb2___Subscription] = None,
        invoice_line_item : typing___Optional[billing_pb2___InvoiceLineItem] = None,
        subscription_item : typing___Optional[billing_pb2___SubscriptionItem] = None,
        charge : typing___Optional[billing_pb2___Charge] = None,
        saved_payment_method : typing___Optional[billing_pb2___SavedPaymentMethod] = None,
        refund : typing___Optional[billing_pb2___Refund] = None,
        conversation : typing___Optional[conversation_pb2___Conversation] = None,
        message : typing___Optional[conversation_pb2___Message] = None,
        attachment : typing___Optional[conversation_pb2___Attachment] = None,
        latest_message : typing___Optional[conversation_pb2___LatestMessage] = None,
        conversation_summary : typing___Optional[conversation_pb2___ConversationSummary] = None,
        event : typing___Optional[type___Event] = None,
        salesforce_account : typing___Optional[external_domain_model_pb2___SalesforceAccount] = None,
        salesforce_contact : typing___Optional[external_domain_model_pb2___SalesforceContact] = None,
        intercom_company : typing___Optional[external_domain_model_pb2___IntercomCompany] = None,
        intercom_contact : typing___Optional[external_domain_model_pb2___IntercomContact] = None,
        zendesk_organization : typing___Optional[external_domain_model_pb2___ZendeskOrganization] = None,
        zendesk_user : typing___Optional[external_domain_model_pb2___ZendeskUser] = None,
        stripe_customer : typing___Optional[external_domain_model_pb2___StripeCustomer] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"access_key",b"access_key",u"account",b"account",u"account_user",b"account_user",u"account_user_role",b"account_user_role",u"attachment",b"attachment",u"charge",b"charge",u"conversation",b"conversation",u"conversation_summary",b"conversation_summary",u"entity",b"entity",u"event",b"event",u"intercom_company",b"intercom_company",u"intercom_contact",b"intercom_contact",u"invoice",b"invoice",u"invoice_line_item",b"invoice_line_item",u"latest_message",b"latest_message",u"message",b"message",u"note_message",b"note_message",u"note_thread",b"note_thread",u"opportunity",b"opportunity",u"organization",b"organization",u"organization_user",b"organization_user",u"plan",b"plan",u"product",b"product",u"push_notification_config",b"push_notification_config",u"refund",b"refund",u"salesforce_account",b"salesforce_account",u"salesforce_contact",b"salesforce_contact",u"saved_payment_method",b"saved_payment_method",u"stripe_customer",b"stripe_customer",u"subscription",b"subscription",u"subscription_item",b"subscription_item",u"zendesk_organization",b"zendesk_organization",u"zendesk_user",b"zendesk_user"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"access_key",b"access_key",u"account",b"account",u"account_user",b"account_user",u"account_user_role",b"account_user_role",u"attachment",b"attachment",u"charge",b"charge",u"conversation",b"conversation",u"conversation_summary",b"conversation_summary",u"entity",b"entity",u"event",b"event",u"intercom_company",b"intercom_company",u"intercom_contact",b"intercom_contact",u"invoice",b"invoice",u"invoice_line_item",b"invoice_line_item",u"latest_message",b"latest_message",u"message",b"message",u"note_message",b"note_message",u"note_thread",b"note_thread",u"opportunity",b"opportunity",u"organization",b"organization",u"organization_user",b"organization_user",u"plan",b"plan",u"product",b"product",u"push_notification_config",b"push_notification_config",u"refund",b"refund",u"salesforce_account",b"salesforce_account",u"salesforce_contact",b"salesforce_contact",u"saved_payment_method",b"saved_payment_method",u"stripe_customer",b"stripe_customer",u"subscription",b"subscription",u"subscription_item",b"subscription_item",u"zendesk_organization",b"zendesk_organization",u"zendesk_user",b"zendesk_user"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"entity",b"entity"]) -> typing_extensions___Literal["organization","organization_user","push_notification_config","access_key","note_thread","note_message","account","account_user","account_user_role","opportunity","invoice","product","plan","subscription","invoice_line_item","subscription_item","charge","saved_payment_method","refund","conversation","message","attachment","latest_message","conversation_summary","event","salesforce_account","salesforce_contact","intercom_company","intercom_contact","zendesk_organization","zendesk_user","stripe_customer"]: ...
type___Entity = Entity

class AssociationMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def account_user_role(self) -> account_pb2___AccountUserRole: ...

    def __init__(self,
        *,
        account_user_role : typing___Optional[account_pb2___AccountUserRole] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_user_role",b"account_user_role",u"metadata",b"metadata"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_user_role",b"account_user_role",u"metadata",b"metadata"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"metadata",b"metadata"]) -> typing_extensions___Literal["account_user_role"]: ...
type___AssociationMetadata = AssociationMetadata

class EntityAssociationMutation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def entity1(self) -> type___Entity: ...

    @property
    def entity2(self) -> type___Entity: ...

    @property
    def previous(self) -> type___AssociationMetadata: ...

    @property
    def current(self) -> type___AssociationMetadata: ...

    def __init__(self,
        *,
        entity1 : typing___Optional[type___Entity] = None,
        entity2 : typing___Optional[type___Entity] = None,
        previous : typing___Optional[type___AssociationMetadata] = None,
        current : typing___Optional[type___AssociationMetadata] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current",b"current",u"entity1",b"entity1",u"entity2",b"entity2",u"previous",b"previous"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current",b"current",u"entity1",b"entity1",u"entity2",b"entity2",u"previous",b"previous"]) -> None: ...
type___EntityAssociationMutation = EntityAssociationMutation

class EntityMutation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def previous(self) -> type___Entity: ...

    @property
    def current(self) -> type___Entity: ...

    def __init__(self,
        *,
        previous : typing___Optional[type___Entity] = None,
        current : typing___Optional[type___Entity] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current",b"current",u"previous",b"previous"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current",b"current",u"previous",b"previous"]) -> None: ...
type___EntityMutation = EntityMutation

class Event(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    organization_id: typing___Text = ...
    event_id: typing___Text = ...
    type: type___EventTypeValue = ...

    @property
    def created_at(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    @property
    def request_context(self) -> common_pb2___RequestContext: ...

    @property
    def update_mask(self) -> google___protobuf___field_mask_pb2___FieldMask: ...

    @property
    def entity(self) -> type___EntityMutation: ...

    @property
    def association(self) -> type___EntityAssociationMutation: ...

    def __init__(self,
        *,
        organization_id : typing___Optional[typing___Text] = None,
        event_id : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        request_context : typing___Optional[common_pb2___RequestContext] = None,
        type : typing___Optional[type___EventTypeValue] = None,
        update_mask : typing___Optional[google___protobuf___field_mask_pb2___FieldMask] = None,
        entity : typing___Optional[type___EntityMutation] = None,
        association : typing___Optional[type___EntityAssociationMutation] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"association",b"association",u"created_at",b"created_at",u"entity",b"entity",u"mutation",b"mutation",u"request_context",b"request_context",u"update_mask",b"update_mask"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"association",b"association",u"created_at",b"created_at",u"entity",b"entity",u"event_id",b"event_id",u"mutation",b"mutation",u"organization_id",b"organization_id",u"request_context",b"request_context",u"type",b"type",u"update_mask",b"update_mask"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"mutation",b"mutation"]) -> typing_extensions___Literal["entity","association"]: ...
type___Event = Event
