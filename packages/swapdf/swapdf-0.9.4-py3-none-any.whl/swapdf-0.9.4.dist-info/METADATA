Metadata-Version: 2.1
Name: swapdf
Version: 0.9.4
Summary: SWAP PDF pages after scan of a two-sided sheet pack through a one-sided feeder
Home-page: UNKNOWN
License: UNKNOWN
Keywords: pdf scanner feeder two-sided one-sided order sort swap pages
Author: Carlo Alessandro Verre
Author-email: carlo.alessandro.verre@gmail.com
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX :: Linux
Requires-Dist: libfunx >=0.9.2
Requires-Dist: pdfrw

usage:
```
    swapdf [-h] [-V] [-v] [-y] [-n] source target
```
SWAP PDF pages after scan of a two-sided sheet pack through a one-sided feeder.

Let's have a two-sided sheet pack we want scan through a one-sided feeder. Then:
```
    - we open the scan utility, say simple-scan aka Document Scanner
    - we click the "All Pages From Feeder" option
    - we scan all odd pages
    - then we turn upside down the pack and we put it again in the feeder
    - we scan all even pages
    - finally we save our pages in a file, say 'Scanned Document.pdf'
```
Now 'Scanned Document.pdf' contains odd pages in ascending order, followed by even pages in
descending order.

For instance, say our sheets are 4, so our pages are 8, so 'Scanned Document.pdf' contains
the pages:
```
    1 3 5 7 8 6 4 2
```    
We issue at terminal (source file goes between quotation marks because it contains a blank):
```
    $ swapdf 'Scanned Document.pdf' mydoc.pdf
```
Now mydoc.pdf contains the pages:
```
    1 2 3 4 5 6 7 8
```
in the right order.

positional arguments:
```
    source         source file with pages from scanner 1 3 5 ... 6 4 2
    target         target file with swapped pages 1 2 3 4 5 6 ...
```
optional arguments:
```
    -h, --help     show this help message and exit
    -V, --version  show program's version number and exit
    -v, --verbose  show what happens
    -y, --yes      overwrite existing target file (default: ask)
    -n, --no       don't overwrite existing target file (default: ask)
```
