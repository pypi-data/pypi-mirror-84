# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/06_entrypoints.flask_app.ipynb (unless otherwise specified).

__all__ = ['__all__', 'app', 'bus', 'index', 'etl_assignment_ep', 'make_etl_endpoint', 'make_view_endpoint', 'etl_rbac',
           'etl_uvgl', 'etl_glbudgetactual_staging', 'rbac_security_view', 'view_uvgl', 'view_rbac_users']

# Cell
#export
from flask import Flask, jsonify, request
from ..service_layer import unit_of_work, views
from ..domain import commands
from collections import namedtuple
from ysyfinance import commons, bootstrap
from typing import Callable

# Cell
__all__=['index','etl_assignment_ep','make_etl_endpoint',\
         'make_view_endpoint'
        ]

# Cell
app = Flask(__name__)
bus = bootstrap.bootstrap()

# Cell
@app.route('/')
def index():
    return '<h1>YSYFinance Flask API Server</h1>'

# Cell
@app.route("/etl_assignment", methods=['POST'])
def etl_assignment_ep():
    try:
        cmd = commands.EtlAssignment(
            request.json['reference']
        )
        bus.handle(cmd)
    except Exception as e:
        return jsonify({'message': str(e)}), 400

    return 'OK', 202

# Cell
def make_etl_endpoint(endpoint_name: str, cmd: commands.Command) -> Callable :
    def etl_endpoint():
        try:
            bus.handle(cmd)
        except Exception as e:
            return jsonify({'message': str(e)}), 400

        return 'OK', 202
    etl_endpoint.__name__=endpoint_name
    return app.route(f"/{endpoint_name}", methods=['POST'])(etl_endpoint)

# Cell
def make_view_endpoint(endpoint_name: str, \
                  uow: unit_of_work.AbstractUnitOfWork, \
                  reference: str, \
                  pipeline_name: str) -> Callable:
    def view_endpoint():
        result = views.view_etl(uow, reference, pipeline_name)
        if not result:
            return 'not found', 404
        return jsonify(commons.jsonify_deltalake(result)), 200
    view_endpoint.__name__=endpoint_name
    return app.route(f"/{endpoint_name}", methods=['GET'])(view_endpoint)

# Cell
etl_rbac = make_etl_endpoint(
                    endpoint_name = 'etl_rbac', \
                    cmd = commands.EtlJob \
                         ( \
                            reference='ysyfinance.budget.domain.GeneralLedgerUsers', \
                            pipeline_names=['security','users']
                         )
                )

# Cell
etl_uvgl = make_etl_endpoint(
                    endpoint_name = 'etl_uvgl', \
                    cmd = commands.EtlJob \
                         ( \
                            reference='ysyfinance.budget.domain.UvGeneralLedger', \
                            pipeline_names=['default']
                         )
                )

# Cell
etl_glbudgetactual_staging = make_etl_endpoint(
                    endpoint_name = 'etl_glbudgetactual', \
                    cmd = commands.EtlJob \
                         ( \
                            reference='ysyfinance.budget.domain.GlBudgetActual', \
                            pipeline_names=['glactual_staging','glbudget_staging','glactualbudget_merge']
                         )
                )

# Cell
rbac_security_view = make_view_endpoint(
                endpoint_name='view_rbac_security', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.GeneralLedgerUsers', \
                pipeline_name='security'
              )

# Cell
view_uvgl = make_view_endpoint(
                endpoint_name='view_uvgl', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.UvGeneralLedger', \
                pipeline_name='default'
              )

# Cell
view_rbac_users = make_view_endpoint(
                endpoint_name='view_rbac_users', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.GeneralLedgerUsers', \
                pipeline_name='users'
              )

# Cell
make_view_endpoint(
                endpoint_name='view_glactual_staging', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.GlBudgetActual', \
                pipeline_name='glactual_staging'
              )

# Cell
make_view_endpoint(
                endpoint_name='view_glbudget_staging', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.GlBudgetActual', \
                pipeline_name='glbudget_staging'
              )

# Cell
make_view_endpoint(
                endpoint_name='view_glactualbudget', \
                uow=bus.syn_uow, \
                reference='ysyfinance.budget.domain.GlBudgetActual', \
                pipeline_name='glactualbudget_merge'
              )

# Cell
if __name__ == '__main__':
    app.run(host='0.0.0.0')