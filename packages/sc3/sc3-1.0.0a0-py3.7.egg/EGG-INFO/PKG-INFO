Metadata-Version: 2.1
Name: sc3
Version: 1.0.0a0
Summary: SuperCollider library for Python
Home-page: https://github.com/smrg-lm/sc3
Author: Lucas Samaruga
Author-email: samarugalucas@gmail.com
License: GPLv3
Description: ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/sc3)
        ![PyPI](https://img.shields.io/pypi/v/sc3)
        [![Documentation Status](https://readthedocs.org/projects/sc3/badge/?version=latest)](https://sc3.readthedocs.io/en/latest/?badge=latest)
        
        sc3
        ===
        
        Port of core features from SuperCollider's language to Python 3. It is intended to be the same library in a different language and to keep sclang elegance in a pythonic way (if possible).
        
        The main reason for this port is Python's capacity of interaction with other libraries applicable to composition, sonic-art and research. My wish is for this project to be useful for the SuperCollider community.
        
        Note that this project is still under development and there are missing parts, bugs you are welcome to report, and is no such a thing like "documentation" here by now. The best way to learn about SuperCollider is going to the [source](https://supercollider.github.io).
        
        Example
        -------
        
        The idea is that you can write the same in Python as in sclang, with the same logic regarding multichannel expansion, arguments conversion to Control ugens, etc., it should be the same result. For example:
        
        ```python
        from sc3.all import *
        
        s.boot()
        
        @synthdef
        def sine(freq=440, amp=0.1, gate=1):
            sig = SinOsc(freq) * amp
            env = EnvGen(Env.adsr(), gate, done_action=2)
            Out(0, (sig * env).dup())
        
        sine.dump_ugens()
        ```
        
        Wait for boot...
        
        ```python
        n = Synth('sine')
        ```
        ```python
        n.set('amp', 0.05)
        ```
        ```python
        n.set('freq', 550)
        ```
        ```python
        s.query_tree(True)
        ```
        ```python
        n.release()
        # s.free_all()  # If something went wrong free all nodes.
        ```
        ```python
        s.quit()  # Stop server at the end of interactive session or just quit ipython.
        ```
        
        Install
        -------
        
        From PyPI:
        
        ```
        pip3 install sc3
        ```
        
        From source in develop mode:
        
        ```
        python3 setup.py develop --user
        ```
        
        License
        -------
        
        The sc3 library holds the same license as SuperCollider: sc3 is free software available under Version 3 of the GNU General Public License. See [COPYING](COPYING) for details.
        
Keywords: SuperCollider sound synthesis music-composition
Platform: Any
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.6
Description-Content-Type: text/markdown
