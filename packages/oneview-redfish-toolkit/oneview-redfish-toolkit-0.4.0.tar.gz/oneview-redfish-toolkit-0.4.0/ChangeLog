CHANGES
=======

0.4.0
-----

* Changing 0.4.0 release related files (#582)
* Adds support for HPE OneView 5.3 (#580)
* Bump validators from 0.12.2 to 0.12.6 (#577)

0.3.3
-----

* Adding 0.3.3 release related files (#568)
* Fix for SSL certificate issue (#576)
* Excluding drives with unknown capacity in Zone Resource block listing (#574)
* Suppress external storage code changes
* Fix for logger exception and concurrent compose request
* Handle drive enclosure request exception
* Fix for application multi startup issue and subscription file path
* Modify status code for session request
* Enable compose request for with external stroage - Boot from SAN
* Implement external storage listing for storage block
* Fix SCMB
* Enable SCMB connection for multiple OneView in session and conf mode
* Updated README.md

0.3.2
-----

* Adding Victor's suggestions for issue 479
* adding the 0.3.2 release related files
* Fix for drives call is failing if mediaType is unknown (#526)
* Excluding tests and mockups from build (#521)
* issue 479-Adding redfish implementation for volumes
* Fix for issue 328- SCMB
* Fix for issue 328- SCMB
* updating changelog - sprint 26 and 27
* Adds decorator single\_oneview to computer system and zone blueprints
* Adding missing info on redfish.conf and loggers sections
* Fixing PyPI text according with review
* Fixing text according with review
* Fixes: The app does not up properly without the "certs" files path in redfish.conf
* Add RedfishVersion in the log files
* Adding instruction about how to install Toolkit offline
* It fixes copyright and english errors from test\_chassis
* It fixes the Temparature object inside Thermal object
* Bugfix: Requesting /Systems is listing systems that are not found
* Fixes bug that "Chassis/UUID" of Enclosure type raises a error when Enclosure have not Rack
* Fixes wrong id inside EthernetInterface object
* Fixes the build\_for\_resource\_block method name in Storage api class
* It joins ComputerSystem and ComputerSystemResoureBlock api classes into only one
* Removing TODO comment because there is an issue (#343) already created to analyze this situation
* It joins StorageCompositionDetails and Storage api classes into only one api/Storage
* Fix for issue #499  - Adding error\_400 treatment on ResponseBuilder  - Adapting unit tests for this change
* Adds "@odata.context" info to the EthernetInterface api class
* Uses EthernetNetwork class for ResourceBlock and System's EthernetNetwork
* It joins StorageDrive\* api classes into only one api/Drive

0.3.1
-----

* Publishing version 0.3.1
* Updating conf mode and Event Service description
* First updates to readme.md
* Updating README and messages on startup
* Updating README
* Updating README
* Updating README
* Updating README.md
* README.md updates
* Logging errors on console
* Implementing stop service
* Adding readme content type
* Removing specific version for PBR
* Changes to publish version

0.3.0
-----

* Adding closed issues on CHANGELOG
* Adding finished issues
* Changes for version 0.3.0
* Fixing PR comments  - Creating specific exceptions for Api modules  - Updating unit tests to use this new exceptions  - Creating new unit tests to cover exceptions cases
* Checking python version on execution
* Updating path for logs on installer
* Adding unit test for Mixed controller mode
* Fixing PR comments  - Creating OneViewRedfishException handle for api exceptions  - Adapting unit tests for this new approach  - Replacing werkzeug.exceptions abort imports to use flask imports
* Adds maxBytesSize and backupCount to log files
* Changes the log message in multiple\_oneview.py for performance logger
* Extend additional check for storage controller settings  - Adding filter for controller mode, checking if it is HBA or Mixed
* Fixes odata of NetworkAdapter\* and missing Network in a Zone:
* Showing more information in debug log for each request to Oneview client
* Improves debug log
* Include OneviewRedfishError handle on flask  - Replacing OneViewRedfishError usages to errors handles on app.py  - Removing oneview redfish error classes  - Fixing unit tests according with this new approach
* Updates cache entry when resource moved to another OneView
* Replacing OneViewRedfishError usages to errors handles on app.py
* Fixing lock for multiple OneViews
* Removing unnecessary code
* Updating unit tests
* fixing comments
* Updating unit tests
* Updating comments
* Unit tests for Single OneView Context
* Fixing unit tests for multiple oneviews
* Renaming variables
* Creating new SingleOneViewContext module and decorator
* Single OneView context implementation
* Fixing unit tests for single OneView context
* Fixing single oneview context for get one resource
* Single OneView context for getall queries
* Reverting resource block changes
* Initial Implementation for Single OneView request context
* Updating error500 mockup and unit tests according with PR comments
* Removing commented code and unused import
* Fixing build issues
* Fixing error messages on unit tests
* Fixing error messages on unit tests
* Improve error message for errors 500  - Improving 500 error message by including error description on generic message
* Adds SharingEnabled for Network RB and SharingCapable for Storage RB
* Improves comment about the commented code in api/event\_service.py
* Session Service and Event Service should be enabled according authentication mode
* Removing use of globals()
* Removing duplicated line
* New unit tests for cached category resources
* New cache for resource category
* Caching sdk method on resources map
* Changing public methods to private and improving log error messages
* Fixing PR comments  - Removing scmb start from app.py to scmb.py as init function  - Creating new unit tests for scmb.py file, increasing the coverage to 83%
* Fixing order to save scmb certificates even if there's any certificate on oneview and fixing unit tests
* Fixing merge with master issues
* Changing certs generation order to check first if it exists on Oneview
* Certificates directory on production installation for conf mode
* Fixing test mockup and unit tests to return 404 error code instead 500
* Fixing requests that are returning error code 500 instead 404
* Adding a None return when there is no resource id found on resource map and when there is no manager uuid for a specific ip
* Fixing Unit tests
* Removing calls for unit tests
* Single get all call removing iterable OneView calls
* Performance improvement for Resource Block
* Fixing PR comments  - Adding loggings on exceptions handler that was missing  - Replacing generic Exception raise to abort (flask)
* Fixing merge issues with master branch
* Indentation
* Removing unused mocks
* Fixing unit tests removing OneView call for enclosures
* Performance improvement on GET request for ResourceBlock
* Fixing merge issues with master branch
* Empty collections should not return error message  - Using Response builder on collections that was not using it until now and return empty collections instead of return error code  - Updating and creating unit tests for empty collecions
* Freezes build dependencies
* Fixing debug performance logs for OneView calls with errors
* Adding unit tests coverage  - Updating README with coverage flag  - Adding commands on tox cover session to generate .coverage file  - Adding coveralls on .travis yml  - Updating test-requirements with coverage lib
* Fixing review comments  - Creating new cached map for appliances(ip->appliance\_uuid)  - Adapting Manager dependencies to use this new map  - Adding strategy to query appliance info and state based on appliances map. Now it will not search on all oneviews.  - Fixing unit tests to this new strategy
* Replacing manager query for all oneviews to just one
* Adds logs: info about how many OV and Redfish resources for Zone and Z. Collection
* Reuses the method get\_session\_id\_by\_token instead of create a new method
* Update @Redfish.Copyright attribute adding 2018
* Support for Delete Session (logout)
* Refactoring \_get\_highest\_health\_state method
* Indentation
* Changing message log level
* Including cherrypy configs on redfish.conf
* Fix threading lock  - Adding lock as global variable and reusing on methods that need it
* Fixing PR comments:  - Fixing copyright year and indentation of test\_manager.py  - Replacing get\_current\_manager method to services folder  - Improving managedby link on resource block computer system api file
* updating README
* fixing text style
* updating readme and changelog - sprint 20 to sprint 23
* Reverting \_get\_highest\_health\_state method to use lamba resource
* Adds more information to error message when server already has server profile applied
* Power off the server on compose/decompose request
* Improving get highest health state method
* Updating code according with comments  - Adding strategy to set appliance uuid on login step  - Fixing unit tests according with this new strategy
* Saving appliance uuid on login step
* Improves the approach to remove expired sessions using a "while" instead of recursion
* Improves routine to remove expired sessions
* Update Managers collection and Manager - Removing server hardware and enclosure queries from ManagerCollection. Now it will query info about the appliances defined on conf file - Removing all Enclosuremanager and BladeManager references (blueprints, apis and unit tests) - Refactoring manager to get info about a specific appliance - Fixing unit tests and created new ones to this new approach
* Ending update on managers and fixing unit tests
* It removes abandoned and expired sessions
* Initial implementation to ManagerCollection and Manager
* Removes slash at the end of SessionCollection.BASE\_URI
* Improves Session endpoint
* Fixing unit tests for conf mode
* Fixing mocks for client session test
* Initial implementation to ManagerCollection and Manager
* Logging thread id for performance
* Fixing tests
* Performance debug logs
* Empty description on create composed system
* New unit test for Composed system without description
* Fixing impacte tests for compose sytem
* Changing unit tests for optional Description for Composed System
* Implementing optional Description for Composed System
* Fixing unit tests for merge
* Fixing redfish.conf
* Unit test for client session
* Implementing cached connections
* Moving get\_server\_profile\_template\_from\_sp method to computer system service
* Using erros array map to check if error code is caused by a resource not found
* Fixing pull request comments  - Adding a check if label is a valid server profile template  - Creating unit test to validate this change
* Changes oneview exeption handler to support authentication fail in conf mod
* Adds support for authLoginDomain
* Updates Links to ComputerSytems in the Chassis resource
* Use a label to save template\_UUID instead of Description attribute in the server profile  - Creating a new handle to post a new label associated with a server profile using server profile template description as label  - Replacing server profile template description from server profile to use labels associated with a server profile  - Fixing unit tests to use labels instead server profile description
* Assumes that --dev and --debug options in run.sh are true when passed
* Fixes english documentation of app main method parameters
* Refactoring method and variable namesto make them more clear
* Uses cherrypy to dev environment too
* Renaming valid\_enclosures\_uris variable to expected\_enclosures\_uris
* It removes pid file and log of cherryd because is unnecessary
* Uses Daemonizer plugin of the cherrypy to make the app as a daemon process
* Cherrypy integration test
* Adding a validation for when drive enclosure has not drives associated and creating unit test for this validation
* Fixing code according with review comments  - Replacing get\_all\_enclosures\_uris method to use python List Comprehensions  - Changing some variables name to a meaningful ones  - Removing duplicated call for logical enclosure
* Cached OneViews clients for the same request connections
* Adds ProfileError state to some server hardware of mockups
* ZoneCollection is listing Zones even for enclosures that do not have Drive Enclosure  - Adding a feature to check if an enclosure has drive enclosures associated with. If it has not, it will not be listed on the zone collection.  - Adding a new strategy on multiple oneview file to get all drive enclosures that uses or nor a filter and fixing strategies that receives a filter, supporting string or list filter types.  - Updating unit tests affected by these changes and creating a new one to test it
* Changing locks
* Handling Concurrency for cached data
* Initial commit for zone collection bugfix
* Update README.md
* Lists computer system collection properly
* Removing unnecessary split name on unit test
* Removing enclosure name from ZoneWithoutDrives mockup and fixing zone api unit tests
* Fixing documentation text and renaming variable used on unit test
* Fixes the problem due to conf mode be requiring auth token
* Adding a new argument on Zone api to receive enclosure name passed by blueprint and using enclosure name instead enclosure id
* Zone name must be unique  - Adding a implementation to verify if Zone has a enclosure. If it has enclosure id will be added into name property on the Zone.  - Fixing mockups, adding enclosure name into Name property
* Logs "403" errors and removes an unused strategy mapping for multiple oneviews
* updating schemas to version DSP8010\_2018.1
* Changes POST to compose a system to return the new uuid as soon as profile uuid is available
* Fixing multiple OneViews for get by reflection before persist
* Removing unused g mock
* Update CompositionState of Computer System Resource Block:  - Updating CompositionState mapping by including one more value  - Adding server profile check when a server hardware state not found in CompositionState mapping. If ServerHardware has a server profile it will be composed and if not, it will be unused  - Updating resource block unit test with this change and creating a new unit test when server hardware has not a server profile
* Removing reauthentication for conf mode
* Removing creating connection case for service root
* Changing comments
* Removing check auth for service root endpoints
* Code improvements
* Fixing changed unit tests for multiple OneViews support
* Fixing changed unit tests for multiple OneViews support
* Adding log if has an error on multiple OneViews
* Implementing unit tests for multiple OneViews support
* Raising exception for uncovered sdk methods
* Fixing unit tests
* Indentation and removing unused strategies
* Fixing unit tests for multiple OneViews support
* Implementing uncovered scenarios for server profile creation and removal
* Support Multiple Oneviews: implementing uncovered scenarios got on unit tests
* Updating unit tests for multiple OneViews support
* Refactoring base tests classes for multiple OneView support
* Removing unused imports
* Returning error from OneView if is NotFound exception for multiple OneViews
* Using getattr() instead object.\_\_getattribute\_\_()
* Indentation
* Adding strategies for sdk calls
* Fixing merge errors and test errors
* Implementing core methods for Multiple OneViews support
* Implementint connection multiple oneviews
* Removing commented code
* Multiple Oneview connections first implementation
* Implementing service root endpoint without authenticate
* Updates references for Zones in Resource Blocks
* Updating State and Health status for Computer System Resource Block and Composed System
* Adds changes related to "Revert capabilities handling zone"
* Fixing Storage for a Composed System when there are no drives
* Revert "Updates GET capabilities object for handle the new ID"
* Revert "Update Capabilities Objects references in the System Collection"
* Update Capabilities Objects references in the System Collection
* Updates GET capabilities object for handle the new ID
* Changing cached tokens initialization
* Changing methods to private
* Isolating globals access for future concurrency handling
* Changing copyrights
* Implementing Multiple OneViews authentication
* Changes the way to get template id when split the URI of Zone
* Avoids http redirection when access URI without slash at end
* Resource Zones Collection: update list based on enclosure when storage controller is configured in the SPT
* adding missing closed issues from sprint 18 and 17
* updating list of fixes and enhancements and README
* Fixes Storage Resource Block to show Composed/unused status properly
* Removing unused EnclosureGroupIndexTrees json file mockup
* Fixing PR comments:  - Replacing index trees for server hardware request filtering by enclosure group from spt  - Updating redfish zone mockups to use less data and so improving code maintenance  - Updating zone unit tests to use server hardware instead index trees
* Updating comments
* Changing copyright
* Fixing conf file
* Refactoring util into config and connection files
* Fixing PR comments:  - Refactoring code to use child depth on second level and get all server hardware uris based on enclosures  - Removing maxDiff method  - Organizing server hardware list order on oneview mockups
* Fixing pep8 issues
* Fixing ResourceZone bug issue  - Changing available targets filter to get all Computer Systems Resource Blocks based on enclosure group associated to a server profile template  - Adding two new Oneview's mockups related with enclosure group and logical enclosure  - Updating unit tests for zone based on that new ResourceZone behavior
* Mocking oneview client connection for unit tests
* workaround to use API version 500 for 'conf' authentication mode
* Adding Links on Storage Resource Block:  - Adding Computer Systems links (server profiles related)  - Adding Zones links (server profile templates)  - Updating unit tests related with these changes
* Adding Computer System link to Storage Resource Block
* Mocking schemas dict for unit test
* Implementing asserEqualMockup for mockups comparison
* Overriding assertEqual for mockup comparison
* Unit tests for redfish json validator
* Api classes retriving odata.type from schema file
* Fixing mockups schemas versions
* Allows create a Composed System without Storage properly
* Fixes review comments:
* Fixing pep8 rule for long line
* Renaming variable names
* Refactoring code according with review comments
* Removing blank line from json file
* Refactoring code and fixing unit tests to support resource blocks links on a composed system
* Fixing unit tests
* Adding drives feature to be filled on session Resource Blocks in a Composed System
* Initial implementation to add resource blocks on computer system
* Updating README
* Changing unit tests for redfish.conf refactoring
* Refactoring redfish.conf
* Changes the http code from 500 to 403 when creating a system returns task errors
* Fixes PR comments:
* Adds tests to "create a composed system"
* Convert SPT to SP to create a composed resource
* Add support for configuration of composed systems
* Fixes "get Zone" when avaialable targets returns empty bays
* Fix VLanNetworkInterface endpoints for ServerProfile
* Removing exception handler
* Minor changes
* Implement network set for Network Resource Block
* Changes the capacityInBytes to int instead of float
* Changing copyrights
* Improving comments
* Improving comments
* Chaging unit tests
* Implement CollectionCapabilities on SystemCollection
* Solving PR comments:
* Includes information about Storage and Network for a Composed System
* Removing white spaces
* Improving computer system error message
* Removing add\_extended\_info from bad\_request method
* Removing Nmi and Force options from Allowable Values List
* Fixing review comments
* Removing get\_oneview\_power\_configuration method from test\_computer\_system
* Fixing PR review comments  - Create unit tests for api/util/power\_option.py  - Removing Exceptions that are already handled by app.py
* Fix handling not found for server profile (#338)
* Fixes endpoint to reset a server hardware of a System
* Changes copyright to some files:
* Adding bug fix issue on Changelog file
* Fixing Collection Cababilities System link on json used into unit tests
* Adding fixed issue on Changelog file
* Adding reset actions for Chassis with Server Hardware type  - Adding implementation on Chassis to supports Reset actions by using POST request  - Replacing method to handle power option parser between redfish and oneview to the util package  - Updating computer system unit tests to use power option handle from util  - Creating unit tests for Reset actions on Chassis
* Include Network resource blocks in a Resource Zone (#327)
* Implement ComputerSystem for a composed resource
* Fixing pep8 issues
* Fixing System Collection count issue
* Updating CapabilitiesObject on Resource Zone
* Rename variable and move logic to API class
* Renaming variable to server profile to server hardware list
* Improving Computer System Collection api documentation
* Replacing flask Response implementation to ResponseBuilder and improving unit tests code
* Removing physical system from System collection and updating unit tests for this update
* Fixing base uri for capabilities object
* Fixes pep8 issues in test of api zone file
* Adds docs to tests of Zone api and refactoring Zone class
* Include Storage resource blocks in a Resource Zone
* Formating log message
* Remove OV hostname from config file
* Change to use ResponseBuilder
* Mapping server profile template name
* Removing unnecessary exceptions handlers
* Implementing CapabilitiesObject on ComputerSystem endpoint
* Updating mockup
* Adding capability ID
* Changing endpoint uri
* Mapping ColletionCapabilities schema
* Implemented Capability endpoint
* Address code review comments
* Include support for detailed processors information
* Fix sample curl command for session authentication
* Fix oslotest module version
* Adds endpoints to Drives and Storage details of ResourceBlock
* Implement Storage ResourceBlock
* Address code review comments
* Add ResourceBlock for server profile template ETH networks
* Adds '/' to the end of URI of ResourceBlockCollection
* Fixes resouce block collection test after rebase with master
* Updates CHANGELOG with issue 300
* Includes Storage Resource Blocks into Resource Blocks collection
* Adding mimetype
* Logging multiple task error messages
* Handling task for delete computer system
* Unit tests for error cases
* Commenting
* Tests for delete server profile
* Deleting composed resource
* Remove duplicated code in blueprint tests
* Address ResourceBlock code review comments
* Add ResourceBlock for OneView server hardware
* Fixes pep8 issue in api zone class
* Avoid reload of variables based on mockup files for each test in api zone test
* Use the dict.get() method properly in response\_builder.py
* Changes api Zone class and Zone mockup:
* Fixes mockup used by zone tests
* Fills the Capabilities property of ResourceZone properly
* Fixes pep8 errors
* Changes BASE\_URI of ResourceBlockCollection to follow the pattern
* Removes unnecessary imports from blueprint Zone
* Updates CHANGELOG with new Zone resource
* Fixes reference to base url of api in computer system class
* Adds tests to zone api class
* Creates a ResourceZone for each Server Profile Template
* Updating installation package
* Implement command line app for toolkit installation
* Check OneView availability
* Updating blueprints unit tests to use BaseTest
* Updating api unit tests to use BaseTest
* Creating BaseTest class
* Removing #280 from changelog
* Fixes pep8 errors and reuses code into tests of resource blocks collection
* - Adds ResourceBlocks for each Server Profile Template in the ResourceBlocks collection
* Remove exception for empty server profile template list
* Add ZoneCollection resource (ResourceZone API)
* Add ResourceBlockCollection resource
* Expose EventService API only with conf authentication mode
* Add support for sending Redfish events for managed resources
* Add support for retries when sending Redfish events
* Add support for EventService SubmitTestEvent action
* Add CompositionService resource
* Add missing Redfish schema files
* Update Session Management section
* update README: add session management info
* Add VS Code config folder to gitignore
* Add OV SCMB socket timeout configuration
* Add CHANGELOG entry to describe PR #239
* Fix line length and remove lower function call
* Add debug option in the service configuration file
* Update README.md
* Update CHANGELOG.md
* Update README.md
* Implements DELETE Subscription (#227)
* Fix NetworkInterface URL in NetworkInterfaceCollection (#225)
* Add event class (#224)
* Open scmb connection (#222)
* Implement GET Subscription (#221)
* Improve util tests and event service tests (#220)
* Implement POST Subscription (#218)
* Implement GET SubscriptionCollection (#217)
* Unpin python executable from docs generation (#219)
* Implement GET EventService (#216)

0.2.0
-----

* Update CHANGELOG.md (#196)
* Specify host IP address to launch the service (#199)
* Fix problems on Windows  (#200)
* Fix wrong links in XML metadata (#210)
* Retrieve Network devices based on deviceNumber (#194)
* Some fixes related to docs and PEP8 (#193)
* Comparing JSON object in tests (#192)
* Add config support to session based authentication (#191)
* - Remove schemas folder from oneview\_redfish\_toolkit/ (#189)
* Implement POST on Session resource (#185)
* Perform schema validation resolving $ref locally (#154)
* Change logging.error to logging.excetion (#186)
* Add windows start script, run.cmd (#182)
* Add https (#175)
* Process OData-Version request header (#177)
* Add port#157 (#172)

0.1.2
-----

* Add current dir to PYTHONPATH

0.1.1
-----

* Fix install problems (#183)
* Fix tox starting the app (#181)
* Fix logging empty messages
* Set OData-Version header for all responses (#176)
* Adding ETag in the response header (#174)
* Fix storage build (#167)

0.1.0
-----

* Create CHANGELOG.md (#173)
* Fix NetworkDeviceFunctionCount (#156)
* Add metadata#145 (#150)
* Removing error handler from odata blueprint (#147)
* Add NetworkDeviceFunction (#144)
* Fix NetworkInterfaceLinks (#142)
* Add NetworkAdapter (#141)
* Add network adapter collection (#143)
* Fix device\_id range validation (#137)
* Add NetworkAdapters odata.id to BladeChassis (#133)
* Implement NetworkPortCollection (#128)
* Implement Storage (#117)
* Disable HTTPS by default (#132)
* Add device function collection#125 (#129)
* Add NetworkInterface (#127)
* Add network interface collection#119 (#126)
* Add EthernetInterfaces link to ComputerSystem (#121)
* Remove trailing space on docs link
* Fix error messages (#114)
* Fix link to Reset on ComputerSystem (#116)
* Add redfish-compliant error object
* Fix status for System, Chassis and Manager (#111)
* Perform PowerOps for ComputerSystem (#88)
* Fix odata missing info on Thermal and Systems (#109)
* Add RedfishError class (#105)
* Implement StorageCollection and add link on ComputerSystem
* Add load config to Odata Blueprint test
* add description to manager components (#101)
* Add SSL requirements and change launcher script
* Apply consistent name scheme to variables (#96)
* Add Managers Links to ComputerSystem, EnclosureChassis and BladeChassis (#94)
* Change slack notification channel
* Odata service#90 (#93)
* Add SSL support (#91)
* Update README.md
* refactor blade\_manager so that a seperate firmware verion has to be passed in the constructor. Now, it takes the firmware from the blade (ilo) directly
* report BMC firmware in blade\_manager (#89)
* Update data for tests to include new firmware version
* Allow running tests behind proxy
* report BMC firmware in blade\_manager
* Separate mockup files (#87)
* Update README.md with requirements section
* Show PowerOps for ComputerSystem (#85)
* Add managers to blade and enclosure (#84)
* Implement ManagerCollection (#71)
* Adding Thermal to blade, enclosure and rack chassis (#70)
* Add RackChassis (#66)
* Fix return value of \_map\_indicator\_led and name function on api/ComputerSystem.py (#69)
* Add "ContainedBy" link on BladeChassis and tests for blade (#64)
* Changed .ini files to .conf files. Update required files (#67)
* Refactor Chassis structures (#65)
* Implement Enclosure Chassis (#60)
* Implement chassis router (#51)
* Update README with general information (#50)
* Implement blade chassis (#47)
* Implement ChassisCollection (#45)
* Fix service\_root.py to use UUID from appliance node info (#49)
* Add OneView UUID to ServiceRoot
* Fix Daniel review
* Fix json quotation
* Fix Lucas reviews
* Added map of OV bootoptions to redfish boot options. Fixed HPOneView exception values on CompyterSystem class and on tests
* Fix from Ricardo's review
* Add ComputerSystem
* Remove log\_file path in redfish.ini and adapt the test
* Remove prints of the code
* pull after rebase
* rebase from master
* Change function to configure logging
* Update logger documentation and remove logger info to set logger error in correct places
* Improve get\_logger() documentation and add .log in the .gitignore
* Create Redfish logger   \* Create log config file (logging.ini)   \* Substitute print() to get\_logger() function
* fix requirements.txt
* Fix tox errors
* Fixes reviews comments
* Update testes and some docs
* Adapt the code to terms agreed on refactoring meeting
* PEP8 and sintaxe fix
* Added project exception, modifed util to load config into global vars, adjusted redfish\_json\_validator, seriealize no longer validates and uses indent\_json from config file, validate raises exception on failure. ServiceRoot API added constant SCHEMA\_NAME and calls validate at the end of constructor and imports the schema file from util global var schema\_dict. ServiceRoot blueprint: added try/except block, on exception is calling flask abort(), app: add errorhandler(500) to print "internal server error", unified util tests on test\_util.py. Remove of old files pending. Created modules own exceptions
* Moved OneView client to blueprints
* Change incorrect words and update docstring to follow PEP8
* Improve computer\_system\_collection and the project structure   \* Renamed vars   \* Moved mockups directory   \* Commented oneview\_client in app.py to not generate error
* Moving and rename files/directories
* Using mock to test the API   \* Create mock to test blueprint\_computer\_system\_collection   \* Create directories to separate tests according directories of code   \* Update the blueprint computer\_system\_collection for that we can test using mock   \* Adapted app.py in case of oneview raise a exception
* Adding Computer System Collection   \* Create computer\_system\_collection.py class   \* Create unit test to computer\_system\_collection.py   \* Add mockups   \* Remove collections in requirements.txt because it generates error
* Adding Computer System Collection Blueprint   \* Create computer\_system\_collection.py blueprint and your respective unit test
* Fix tox errors
* Fixes reviews comments
* Update testes and some docs
* Adapt the code to terms agreed on refactoring meeting
* Change function to configure logging
* Update logger documentation and remove logger info to set logger error in correct places
* Improve get\_logger() documentation and add .log in the .gitignore
* Create Redfish logger   \* Create log config file (logging.ini)   \* Substitute print() to get\_logger() function
* PEP8 and sintaxe fix
* Added project exception, modifed util to load config into global vars, adjusted redfish\_json\_validator, seriealize no longer validates and uses indent\_json from config file, validate raises exception on failure. ServiceRoot API added constant SCHEMA\_NAME and calls validate at the end of constructor and imports the schema file from util global var schema\_dict. ServiceRoot blueprint: added try/except block, on exception is calling flask abort(), app: add errorhandler(500) to print "internal server error", unified util tests on test\_util.py. Remove of old files pending. Created modules own exceptions
* Fix requirements.txt by removing collections
* Moved OneView client to blueprints
* Change incorrect words and update docstring to follow PEP8
* Improve computer\_system\_collection and the project structure   \* Renamed vars   \* Moved mockups directory   \* Commented oneview\_client in app.py to not generate error
* Moving and rename files/directories
* Using mock to test the API   \* Create mock to test blueprint\_computer\_system\_collection   \* Create directories to separate tests according directories of code   \* Update the blueprint computer\_system\_collection for that we can test using mock   \* Adapted app.py in case of oneview raise a exception
* Adding Computer System Collection   \* Create computer\_system\_collection.py class   \* Create unit test to computer\_system\_collection.py   \* Add mockups   \* Remove collections in requirements.txt because it generates error
* Adding Computer System Collection Blueprint   \* Create computer\_system\_collection.py blueprint and your respective unit test
* Fixed coments based on review
* Fix return false on util functions and tested results on app.py
* Fixed schema list, fixed some reviews
* Removed not required schemas
* Added service root blueprint and respective tests
* deleted misplaced file .bashrc
* Fix tox.ini to py35
* Added class redfish\_json\_validator and service\_root. Moved app.py to module root
* Update README.md
* Setting tox back to 3.5
* Added util.py with load\_config and load\_schemas function. Added schemas dirs wil all json schemas from DPS8010\_2017.1.zip files. Added unit tests for both functions
* Have travis-ci publish notifications to slack
* Update README.md
* Change host and port to run the API
* Update the Flask receiver
* Update the Flask receiver
* Remove unnecessary dependencies generated by cookiecutter
* Update hello\_world\_api.py and test\_hello\_world\_apy.py
* Add .tarvis.yml file
* Change docs generate in tox file to use python3.5
* Remove py27 from tox file
* Create the project structure
* Initial commit
