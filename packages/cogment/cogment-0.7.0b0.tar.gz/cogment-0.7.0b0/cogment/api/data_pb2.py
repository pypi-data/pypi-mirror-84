# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cogment/api/data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cogment.api import common_pb2 as cogment_dot_api_dot_common__pb2
from cogment.api import environment_pb2 as cogment_dot_api_dot_environment__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cogment/api/data.proto',
  package='cogment',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x16\x63ogment/api/data.proto\x12\x07\x63ogment\x1a\x18\x63ogment/api/common.proto\x1a\x1d\x63ogment/api/environment.proto\"k\n\nDatalogMsg\x12,\n\x0ctrial_params\x18\x01 \x01(\x0b\x32\x14.cogment.TrialParamsH\x00\x12(\n\x06sample\x18\x02 \x01(\x0b\x32\x16.cogment.DatalogSampleH\x00\x42\x05\n\x03msg\"\xe6\x01\n\rDatalogSample\x12\x11\n\ttimestamp\x18\x07 \x01(\x06\x12\x10\n\x08trial_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x05 \x01(\t\x12-\n\x0cobservations\x18\x02 \x01(\x0b\x32\x17.cogment.ObservationSet\x12 \n\x07\x61\x63tions\x18\x03 \x03(\x0b\x32\x0f.cogment.Action\x12 \n\x07rewards\x18\x04 \x03(\x0b\x32\x0f.cogment.Reward\x12,\n\x08messages\x18\x06 \x03(\x0b\x32\x1a.cogment.MessageCollection\"\n\n\x08LogReply2@\n\x0bLogExporter\x12\x31\n\x03Log\x12\x13.cogment.DatalogMsg\x1a\x11.cogment.LogReply\"\x00(\x01\x62\x06proto3')
  ,
  dependencies=[cogment_dot_api_dot_common__pb2.DESCRIPTOR,cogment_dot_api_dot_environment__pb2.DESCRIPTOR,])




_DATALOGMSG = _descriptor.Descriptor(
  name='DatalogMsg',
  full_name='cogment.DatalogMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='trial_params', full_name='cogment.DatalogMsg.trial_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample', full_name='cogment.DatalogMsg.sample', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='msg', full_name='cogment.DatalogMsg.msg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=92,
  serialized_end=199,
)


_DATALOGSAMPLE = _descriptor.Descriptor(
  name='DatalogSample',
  full_name='cogment.DatalogSample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='cogment.DatalogSample.timestamp', index=0,
      number=7, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='trial_id', full_name='cogment.DatalogSample.trial_id', index=1,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='cogment.DatalogSample.user_id', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='observations', full_name='cogment.DatalogSample.observations', index=3,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='actions', full_name='cogment.DatalogSample.actions', index=4,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rewards', full_name='cogment.DatalogSample.rewards', index=5,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='messages', full_name='cogment.DatalogSample.messages', index=6,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=432,
)


_LOGREPLY = _descriptor.Descriptor(
  name='LogReply',
  full_name='cogment.LogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=434,
  serialized_end=444,
)

_DATALOGMSG.fields_by_name['trial_params'].message_type = cogment_dot_api_dot_common__pb2._TRIALPARAMS
_DATALOGMSG.fields_by_name['sample'].message_type = _DATALOGSAMPLE
_DATALOGMSG.oneofs_by_name['msg'].fields.append(
  _DATALOGMSG.fields_by_name['trial_params'])
_DATALOGMSG.fields_by_name['trial_params'].containing_oneof = _DATALOGMSG.oneofs_by_name['msg']
_DATALOGMSG.oneofs_by_name['msg'].fields.append(
  _DATALOGMSG.fields_by_name['sample'])
_DATALOGMSG.fields_by_name['sample'].containing_oneof = _DATALOGMSG.oneofs_by_name['msg']
_DATALOGSAMPLE.fields_by_name['observations'].message_type = cogment_dot_api_dot_environment__pb2._OBSERVATIONSET
_DATALOGSAMPLE.fields_by_name['actions'].message_type = cogment_dot_api_dot_common__pb2._ACTION
_DATALOGSAMPLE.fields_by_name['rewards'].message_type = cogment_dot_api_dot_common__pb2._REWARD
_DATALOGSAMPLE.fields_by_name['messages'].message_type = cogment_dot_api_dot_common__pb2._MESSAGECOLLECTION
DESCRIPTOR.message_types_by_name['DatalogMsg'] = _DATALOGMSG
DESCRIPTOR.message_types_by_name['DatalogSample'] = _DATALOGSAMPLE
DESCRIPTOR.message_types_by_name['LogReply'] = _LOGREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DatalogMsg = _reflection.GeneratedProtocolMessageType('DatalogMsg', (_message.Message,), {
  'DESCRIPTOR' : _DATALOGMSG,
  '__module__' : 'cogment.api.data_pb2'
  # @@protoc_insertion_point(class_scope:cogment.DatalogMsg)
  })
_sym_db.RegisterMessage(DatalogMsg)

DatalogSample = _reflection.GeneratedProtocolMessageType('DatalogSample', (_message.Message,), {
  'DESCRIPTOR' : _DATALOGSAMPLE,
  '__module__' : 'cogment.api.data_pb2'
  # @@protoc_insertion_point(class_scope:cogment.DatalogSample)
  })
_sym_db.RegisterMessage(DatalogSample)

LogReply = _reflection.GeneratedProtocolMessageType('LogReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGREPLY,
  '__module__' : 'cogment.api.data_pb2'
  # @@protoc_insertion_point(class_scope:cogment.LogReply)
  })
_sym_db.RegisterMessage(LogReply)



_LOGEXPORTER = _descriptor.ServiceDescriptor(
  name='LogExporter',
  full_name='cogment.LogExporter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=446,
  serialized_end=510,
  methods=[
  _descriptor.MethodDescriptor(
    name='Log',
    full_name='cogment.LogExporter.Log',
    index=0,
    containing_service=None,
    input_type=_DATALOGMSG,
    output_type=_LOGREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGEXPORTER)

DESCRIPTOR.services_by_name['LogExporter'] = _LOGEXPORTER

# @@protoc_insertion_point(module_scope)
