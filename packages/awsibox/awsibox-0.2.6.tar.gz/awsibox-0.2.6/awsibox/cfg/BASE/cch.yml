IBoxLoader: !include [
  securitygroup.yml,
]

cch:
  Parameter:
    - AutomaticFailoverEnabled:
        Description: 'Multi-AZ is enabled for this replication group (only for redis and ReplicationGroup) - empty for default based on env/role'
        AllowedValues: ['', 'True', 'False']
    - CacheNodeType:
        Description: 'Node Type - empty for default based on env/role'
        AllowedValues: [
          '', 'cache.t2.micro', 'cache.t2.small', 'cache.t2.medium', 'cache.t2.large',
          'cache.m3.medium', 'cache.m3.large', 'cache.m3.xlarge', 'cache.m3.2xlarge',
          'cache.m4.large', 'cache.m4.xlarge', 'cache.m4.2xlarge', 'cache.m4.4xlarge', 'cache.m4.10xlarge',
          'cache.r3.large', 'cache.r3.xlarge', 'cache.r3.2xlarge', 'cache.r3.4xlarge', 'cache.r3.8xlarge',
        ]
    - CacheEnabled:
        Description: 'Enable or disable cache creation'
        AllowedValues: [ 'True', 'False']
        Default: 'True'
    - CCHAccess:
        Description: 'Access type public or private - empty for default based on env/role'
        AllowedValues: ['', 'Private', 'Public']
    - Engine:
        Description: 'Engine - empty for default based on env/role'
        AllowedValues: ['', 'memcached', 'redis']
    - EngineVersion:
        Description: 'Engine Version - empty for default based on env/role'
    - NumCacheClusters:
        Description: 'The number of clusters this replication group initially has - empty for default based on env/role'
    - NumCacheNodes:
        Description: 'The number of cache nodes that the cache cluster should have - empty for default based on env/role'
    - ReplicationGroup:
        Description: 'Create a ElastiCache Redis Replication Group instead of a Cache Cluster - empty for default based on env/role'
        AllowedValues: ['', 'True', 'False']
  Condition:
    - CCHPublic: get_condition('', 'equals', 'Public', 'CCHAccess')
    - CacheCluster:
        Or(
          And(
            Condition('CacheEnabled'),
            Condition('EngineMemCached'),
          ),
          And(
            Condition('CacheEnabled'),
            Condition('EngineRedis'),
            get_condition('', 'not_equals', 'True', 'ReplicationGroup'),
          )
        )
    - CacheEnabled: Equals(Ref('CacheEnabled'), 'True')
    - EngineRedis: get_condition('', 'equals', 'redis', 'Engine')
    - EngineMemCached: get_condition('', 'equals', 'memcached', 'Engine')
    - ReplicationGroup:
        And(
          Condition('CacheEnabled'),
          Condition('EngineRedis'),
          get_condition('', 'equals', 'True', 'ReplicationGroup'),
        )
  Output:
    - CacheNodeType:
        Value: get_endvalue('CacheNodeType')
    - Engine:
        Value: get_endvalue('Engine')
    - EngineVersion: 
        Value: get_endvalue('EngineVersion')
    - CCHAccess:
        Value: get_endvalue('CCHAccess')
    - CCHScheme:
        Value: get_endvalue('CCHScheme')
    - NumCacheNodes:
        Condition: 'CacheCluster'
        Value: get_endvalue('NumCacheNodes')
    - NumCacheClusters:
        Condition: 'ReplicationGroup'
        Value: get_endvalue('NumCacheClusters')
  AutomaticFailoverEnabled: 'False'
  AZMode: single-az
  AutoMinorVersionUpgrade: True
  CCHAccess: Public
  CCHScheme: Internal
  NumCacheNodes: 1
  NumCacheClusters: 1
  ReplicationGroup: 'False'
  ReplicationGroupDescription: 'Redis ReplicaGroup'
